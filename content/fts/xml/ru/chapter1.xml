<?xml version='1.0' encoding='UTF-8'?>
<!-- This document was created with Syntext Serna Free. --><chapter id="ch1_general_info" lang="ru">
  <title>Обзор подсистемы FTS</title>
  <para>Полнотекстовый поиск (full text search, FTS) платформы CUBA предоставляет возможность неструктурированного поиска по значениям атрибутов сущностей и по содержимому загруженных файлов. </para>
  <para>Особенностью реализации полнотекстового поиска  CUBA является его ориентация на использование в бизнес-приложениях со сложными моделями данных. В частности,  в результатах поиска отображаются не
только сущности, напрямую содержащие в некотором атрибуте искомую строку, но
и связанные сущности, при отображении которых используется этот атрибут.
Например, если сущность Order (заказ) содержит ссылку на Customer (покупателя), и строка поиска
содержит название покупателя, то в результатах поиска  будет отображен
и найденный покупатель, и заказ, на него ссылающийся. Это поведение
является логичным для пользователя, который обычно видит название покупателя
в экране редактирования заказа.</para>
  <para>Результаты поиска фильтруются с учетом ограничений, накладываемых подсистемой безопасности платформы. То есть, если группа доступа текущего пользователя не разрешает загрузку некоторых экземпляров сущностей, они не будут отображатся в результатах поиска.</para>
  <para>Подсистема полнотекстового поиска содержит два взаимосвязанных механизма: индексирование и собственно поиск.</para>
  <section>
    <title>Индексирование</title>
    <para>Если в приложении подключен базовый проект <structname>fts</structname> и включено свойство
      <link linkend="cuba.fts.enabled">cuba.fts.enabled</link>, то при каждом сохранении в базу данных сущности,
      подлежащей индексированию, ее идентификатор записывается в очередь на индексацию -
      таблицу <database>SYS_FTS_QUEUE</database>.</para>
    <para>Отдельный асинхронный процесс периодически извлекает идентификаторы изменившихся сущностей из очереди,
      загружает экземпляры сущностей и индексирует их.  Индексация производится с помощью библиотеки
      <application>Apache Lucene</application>. Документ Lucene содержит следующие поля:
      <itemizedlist>
        <listitem>
          <para>Имя сущности и идентификатор экземпляра.</para>
        </listitem>
        <listitem>
          <para>Поле <code>all</code> - конкатенация индексируемых атрибутов сущности, но только локальных и типа <code>FileDescriptor</code>. Если атрибут имеет тип <code>FileDescriptor</code>, то индексируется содержимое соответствующего файла. Локальные атрибуты могут быть одного из следующих типов: строка, число, дата, перечисление.</para>
        </listitem>
        <listitem>
          <para>Поле <code>links</code> - конкатенация идентификаторов сущностей, которые содержатся в ссылочных индексируемых атрибутах. </para>
        </listitem>
      </itemizedlist></para>
    <para>Под индексируемыми атрибутами понимаются атрибуты данной сущности и, возможно, связанных с ней сущностей, объявленные в дескрипторе FTS.</para>
    <para>Индекс хранится в файловой системе, по умолчанию  в подкаталоге <filename>ftsindex</filename> рабочего каталога приложения (задаваемого свойством <property>cuba.dataDir</property>), в стандартном варианте развертывания это <filename>tomcat/work/app-core/ftsindex</filename>. Расположение индекса можно изменить с помощью свойства <link linkend="cuba.fts.indexDir">cuba.fts.indexDir</link>.</para>
  </section>
  <section>
    <title>Поиск</title>
    <para>Поиск ведется по следующим правилам: <itemizedlist>
        <listitem>
          <para>если искомая строка обрамлена кавычками, то ищется соответствующая <emphasis role="bold">фраза</emphasis> - набор таких же слов в том же порядке, игнорируя знаки пунктуации;</para>
        </listitem>
        <listitem>
          <para>если искомая строка начинается с символа &quot;*&quot;, то производится поиск по вхождению строки <emphasis role="bold">в любой части слова</emphasis> индексированных данных;</para>
        </listitem>
        <listitem>
          <para>в противном случае поиск производится по совпадению искомой строки с <emphasis role="bold">началом слов</emphasis> индексированных данных. </para>
        </listitem>
      </itemizedlist></para>
    <para>Для русского и английского языка поиск производится с учетом морфологии.</para>
    <para>Алгоритм поиска состоит из двух этапов: <itemizedlist>
        <listitem>
          <para>Cначала искомая строка ищется в поле <code>all</code> документов Lucene. Найденные сущности добавляются в список результатов.</para>
        </listitem>
        <listitem>
          <para>Если что-то найдено на первом этапе, то идентификаторы найденных сущностей ищутся в поле <code>links</code> документов Lucene. Найденные на втором этапе сущности также добавляются в список результатов.</para>
        </listitem>
      </itemizedlist></para>
    <warning>
      <para>Если строка поиска состоит из нескольких слов (и не обрамлена кавычками), то будет произведен поиск всех слов по отдельности по условию ИЛИ. То есть в результаты поиска попадут сущности, содержащие хотя бы одно из введенных слов.</para>
    </warning>
  </section>
  <section>
    <title>Пример индексирования и поиска</title>
    <para>Рассмотрим приведенный  выше простейший пример со связанными сущностями <code>Order</code> и <code>Customer</code>. <mediaobject>
        <imageobject>
          <imagedata fileref="img/Example1Classes.png" align="center"/>
        </imageobject>
      </mediaobject></para>
    <para>В данном случае, если все атрибуты объектов являются индексируемыми, при индексации двух связанных экземпляров <code>Order</code> и <code>Customer</code> будут созданы два документа Lucene примерно следующего содержания:</para>
    <programlisting>id: Order.id = &quot;b671dbfc-c431-4586-adcc-fe8b84ca9617&quot;
all: Order.number + Order.date + Order.amount = &quot;001^2013-11-14^1000&quot;
links: Customer.id = &quot;f18e32bb-32c7-477a-980f-06e9cc4e7f40&quot;</programlisting>
    <programlisting>id: Customer.id = &quot;f18e32bb-32c7-477a-980f-06e9cc4e7f40&quot;
all: Customer.name + Customer.email = &quot;John Doe^john.doe@mail.com&quot;</programlisting>
    <para>Теперь предположим, что ищется строка &quot;john&quot;:<itemizedlist>
        <listitem>
          <para>Сначала производится поиск в полях <code>all</code> всех документов. Будет найден <code>Customer</code>, и добавлен в результаты поиска.</para>
        </listitem>
        <listitem>
          <para>Затем будет произведен поиск идентификатора найденного покупателя в полях <code>links</code> всех документов. Будет найден <code>Order</code>, и он также будет добавлен в  результаты поиска.</para>
        </listitem>
      </itemizedlist></para>
  </section>
</chapter>
