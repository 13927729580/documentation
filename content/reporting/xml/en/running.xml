<?xml version='1.0' encoding='UTF-8'?>
<!-- This document was created with Syntext Serna Free. --><chapter id="running" lang="en">
  <title>Running Reports</title>
  <para>This section describes how to run created reports.</para>
  <section id="run_common">
    <title>Running from the Generic Reports Browser</title>
    <para>The easiest way to run reports is from the generic browser, which is available in the  <guimenu>Reports</guimenu> -&gt; <guimenu>Run Reports</guimenu> screen. The user must have the right to access this screen. The list will contain all reports that are  <link linkend="permissions">available to the user</link> in accordance with his role. If the report has external parameters, they will be requested in a special form when running the report.</para>
  </section>
  <section id="run_actions">
    <title>Running Reports from Screens</title>
    <para>You can run reports from arbitrary screens using special actions and associated buttons or component context menu items. In such case report  <link linkend="permissions">availability</link> in this screen will also be checked in addition to user role.</para>
    <para>Action types and examples of their use are provided below.</para>
    <itemizedlist>
      <listitem>
        <para><code>com.haulmont.reports.gui.actions.RunReportAction</code> - action showing the list of all available reports. When a user selects a report from the list, the parameters input form is displayed (if any were defined) and the report is run.</para>
        <para>Below is an example of using the action together with a button declared in the screen XML descriptor:<itemizedlist>
            <listitem>
              <para>XML-descriptor<programlisting language="xml">&lt;layout&gt;
    &lt;table id=&quot;bookTable&quot;&gt;
        ...
        &lt;buttonsPanel id=&quot;buttonsPanel&quot;&gt;
            ...          
            &lt;button id=&quot;reportButton&quot;
                    icon=&quot;icons/reports-print.png&quot;/&gt;
        &lt;/buttonsPanel&gt;
    &lt;/table&gt;</programlisting></para>
            </listitem>
            <listitem>
              <para>Controller<programlisting language="java">@Inject
private Button reportButton;

@Override
public void init(Map&lt;String, Object&gt; params) {
    reportButton.setAction(new RunReportAction(&quot;report&quot;, this));
}</programlisting></para>
            </listitem>
            <listitem>
              <para>messages.properties</para>
              <programlisting>report = Report</programlisting>
            </listitem>
          </itemizedlist></para>
      </listitem>
      <listitem>
        <para><code>com.haulmont.reports.gui.actions.TablePrintFormAction</code> - an action associated with a table displaying a list of entity instances. The action only selects reports having an external parameter of the <guilabel>Entity</guilabel> or the  <guilabel>List of entities</guilabel> type and where the parameter entity type matches the entity type displayed by the table. If only one report is available as a result of selection, it is invoked immediately. If several reports are available, their list is offered to the user for selection.</para>
        <para>The external parameter value is passed to the report using the following rules:<itemizedlist>
            <listitem>
              <para>If the parameter has the  <guilabel>List of entities</guilabel> type, the list of instances currently selected in the table is passed into it.</para>
            </listitem>
            <listitem>
              <para>If the parameter has the  <guilabel>Entity</guilabel> type, and the table has a single instance selected (one row is highlighted), then this instance is passed into the report.</para>
            </listitem>
            <listitem>
              <para>If the parameter is of the  <guilabel>Entity</guilabel> type, and the table has several rows selected, then the report runs several times according to the number of selected instances. After execution, the user gets a single ZIP archive containing all generated reports.</para>
            </listitem>
          </itemizedlist></para>
        <para>Below is an example of using the action in a button and the table context menu:<itemizedlist>
            <listitem>
              <para>XML descriptor<programlisting language="xml">&lt;layout&gt;
    &lt;table id=&quot;bookTable&quot;&gt;
        ...
        &lt;buttonsPanel id=&quot;buttonsPanel&quot;&gt;
            ...          
            &lt;button id=&quot;reportButton&quot;
                    icon=&quot;icons/reports-print.png&quot;/&gt;
        &lt;/buttonsPanel&gt;
    &lt;/table&gt;</programlisting></para>
            </listitem>
            <listitem>
              <para>Controller<programlisting language="java">@Inject
private Button reportButton;

@Inject
private Table bookTable;

@Override
public void init(Map&lt;String, Object&gt; params) {
    TablePrintFormAction action = new TablePrintFormAction(&quot;report&quot;, this, bookTable);
    bookTable.addAction(action);
    reportButton.setAction(action);
}</programlisting></para>
            </listitem>
            <listitem>
              <para>messages.properties<programlisting>report = Report</programlisting></para>
            </listitem>
          </itemizedlist></para>
      </listitem>
      <listitem>
        <para><code>com.haulmont.reports.gui.actions.EditorPrintFormAction</code> an action associated with an entity editor screen. The action only selects reports having an external parameter of the  <guilabel>Entity</guilabel> or the  <guilabel>List of entities</guilabel> type and where the parameter entity type matches the edited entity type. If only one report is available as a result of selection, it is invoked immediately. If several reports are available, their list is offered to user for selection.</para>
        <para>The external parameter value - edited entity instance - is passed into the report. If the parameter has the <guilabel>List of entities</guilabel> type, then a list containing a single item is passed.</para>
        <para>Below is an example of using the action in a button located near the standard <guibutton>OK</guibutton> and  <guibutton>Cancel</guibutton> buttons:<itemizedlist>
            <listitem>
              <para>XML descriptor<programlisting language="xml" id="">&lt;layout expand=&quot;windowActionsBox&quot;&gt;
    ...
    &lt;hbox id=&quot;windowActionsBox&quot;
          spacing=&quot;true&quot;&gt;
        &lt;iframe id=&quot;windowActions&quot;
                screen=&quot;editWindowActions&quot;/&gt;
        &lt;button id=&quot;reportButton&quot;/&gt;
    &lt;/hbox&gt;
&lt;/layout&gt;</programlisting></para>
            </listitem>
            <listitem>
              <para>Controller<programlisting language="java">@Inject
private Button reportButton;

@Override
public void init(Map&lt;String, Object&gt; params) {
    reportButton.setAction(new EditorPrintFormAction(&quot;report&quot;, this, null));
}</programlisting></para>
            </listitem>
            <listitem>
              <para>messages.properties<programlisting>report = Report</programlisting></para>
            </listitem>
          </itemizedlist></para>
      </listitem>
    </itemizedlist>
  </section>
</chapter>
