<?xml version='1.0' encoding='UTF-8'?>
<!-- This document was created with Syntext Serna Free. --><chapter id="map" lang="ru">
  <title>Отображение карт</title>
  <para>Подсистема отображения карт платформы CUBA основана на интеграции со сторонним поставщиком сервиса карт. На данный момент поддерживается только сервис <application>Google Maps</application>.</para>
  <section id="map_features">
    <title>Возможности отображения карты</title>
    <itemizedlist>
      <listitem>
        <para>Реакция на события:<itemizedlist>
            <listitem>
              <para>Щелчок мышью.</para>
            </listitem>
            <listitem>
              <para>Перемещение и зуммирование карты.</para>
            </listitem>
            <listitem>
              <para>Щелчок по маркеру и его перетаскивание.</para>
            </listitem>
            <listitem>
              <para>Закрытие всплывающего окна.</para>
            </listitem>
          </itemizedlist></para>
        <mediaobject>
          <imageobject>
            <imagedata fileref="img/map/map_demo_click.png" align="center"/>
          </imageobject>
        </mediaobject>
      </listitem>
      <listitem>
        <para>Установка маркеров. Маркер может быть фиксированным или с перетаскиваемым пользователем. Маркер может обрабатывать щелчки мыши и передавать соответствующее событие в код экрана.<mediaobject>
            <imageobject>
              <imagedata fileref="img/map/map_demo_marker.png" align="center"/>
            </imageobject>
          </mediaobject></para>
      </listitem>
      <listitem>
        <para>Отображение ломаных линий  и полигонов (многоугольников).<mediaobject>
            <imageobject>
              <imagedata fileref="img/map/map_demo_polygon_display.png" align="center"/>
            </imageobject>
          </mediaobject></para>
      </listitem>
      <listitem>
        <para>Рисование полигонов.<mediaobject>
            <imageobject>
              <imagedata fileref="img/map/map_demo_polygon_draw.png" align="center"/>
            </imageobject>
          </mediaobject></para>
      </listitem>
      <listitem>
        <para>Отображение тепловой карты (heat map).<mediaobject>
            <imageobject>
              <imagedata fileref="img/map/map_demo_heatmap.png" align="center"/>
            </imageobject>
          </mediaobject></para>
      </listitem>
    </itemizedlist>
  </section>
  <section id="map_project_setup">
    <title>Настройка проекта приложения</title>
    <para>Для отображения карт в проект приложения необходимо подключить базовый проект <structname>charts</structname>, как это <link linkend="chart_project_setup">описано</link> для подсистемы отображения диаграмм. Кроме того, необходимо установить следующие свойства приложения блока Web Client:<itemizedlist>
        <listitem>
          <para>Обязательный параметр - ключ доступа к API поставщика карты. В случае использования бесплатного ключа это свойство <code>cuba.charts.map.freeApiKey</code>. В случае наличия коммерческой лицензии должны быть установлены следующие свойства:<itemizedlist>
              <listitem>
                <para><code>cuba.charts.map.useBusinessApiKey = true</code> - признак использования коммерческого ключа.</para>
              </listitem>
              <listitem>
                <para><code>cuba.charts.map.businessApiKey</code> - ключ доступа к API.</para>
              </listitem>
              <listitem>
                <para><code>cuba.charts.map.clientId</code> - идентификатор клиента, в зависимости от поставщика может быть обязательным к заполнению. Обязателен для Google Maps.</para>
              </listitem>
            </itemizedlist></para>
        </listitem>
        <listitem>
          <para>Необязательные параметры:<itemizedlist>
              <listitem>
                <para><code>cuba.charts.map.defaultZoom</code> - масштаб карты (zoom) по умолчанию.</para>
              </listitem>
              <listitem>
                <para><code>cuba.charts.map.defaultLatitude</code> - широта центра карты по умолчанию. </para>
              </listitem>
              <listitem>
                <para><code>cuba.charts.map.defaultLongitude</code> - долгота центра карты по умолчанию.</para>
              </listitem>
              <listitem>
                <para><code>cuba.charts.map.provider</code> - поставщик сервиса карт, по умолчанию <code>google</code>.</para>
              </listitem>
            </itemizedlist></para>
        </listitem>
      </itemizedlist></para>
    <para>Пример содержимого файла <filename>web-app.properties</filename>:<programlisting>cuba.charts.map.freeApiKey = my_key
cuba.charts.map.defaultZoom = 13.0
cuba.charts.map.defaultLatitude = 51.5001
cuba.charts.map.defaultLongitude = -0.1262</programlisting> </para>
  </section>
  <section id="mapViewer">
    <title>Компонент MapViewer</title>
    <para>Для отображения карт в экранах приложения используется компонент <code>com.haulmont.charts.gui.components.map.MapViewer</code>. </para>
    <para>Для подключения компонента в XML-дескриптор экрана в корневом элементе необходимо объявить пространство имен <code>chart</code>:<programlisting language="xml">&lt;window xmlns=&quot;http://schemas.haulmont.com/cuba/5.3/window.xsd&quot;
        xmlns:chart=&quot;http://schemas.haulmont.com/charts/5.3/charts.xsd&quot;
        ...&gt;</programlisting></para>
    <para>XML-имя компонента: <code>mapViewer</code>. Пример объявления компонента:<programlisting language="xml">&lt;layout&gt;
    &lt;vbox id=&quot;mapBox&quot; height=&quot;100%&quot;&gt;
        &lt;chart:mapViewer id=&quot;map&quot; width=&quot;100%&quot; height=&quot;100%&quot;/&gt;
    &lt;/vbox&gt;
&lt;/layout&gt;</programlisting></para>
    <para>В XML-дескрипторе можно задать следующие параметры компонента:<itemizedlist>
        <listitem>
          <para><code>id</code>, <code>width</code>, <code>height</code> - стандартные параметры компонентов.</para>
        </listitem>
        <listitem>
          <para><code>mapType</code> - тип карты, соответствующий перечислению <code>MapViewer.Type</code>: <code>roadmap</code>, <code>satellite</code>, <code>hybrid</code>, <code>terrain</code>. По умолчанию выбирается <code>roadmap</code>.</para>
        </listitem>
        <listitem>
          <para><code>vendor</code> - поставщик сервиса. На данный момент поддерживается только значение <code>google</code>.</para>
        </listitem>
      </itemizedlist></para>
    <para>Основная настройка карты и ее компонентов производится в контроллере экрана. Для этого достаточно инжектировать компонент, объявленный в XML-дескрипторе:<programlisting language="java">@Inject
private MapViewer map;

@Override
public void init(Map&lt;String, Object&gt; params) {
    GeoPoint center = map.createGeoPoint(53.490905, -2.249558);
    map.setCenter(center);
}</programlisting></para>
    <itemizedlist>
      <listitem>
        <para>Методы настройки карты:<itemizedlist>
            <listitem>
              <para><code>setZoom()</code> - задание масштаба карты.</para>
            </listitem>
            <listitem>
              <para><code>setCenter()</code> - задание центра карты.</para>
            </listitem>
            <listitem>
              <para><code>setVisibleAreaBoundLimitsEnabled()</code> - включение режима, ограничивающего видимую область карты.</para>
            </listitem>
            <listitem>
              <para><code>setVisibleAreaBoundLimits()</code> - задание границ видимости карты.</para>
            </listitem>
            <listitem>
              <para><code>fitToBounds()</code> - задание минимального масштаба карты, при котором будет полностью отображена область, заданная северо-восточной и юго-западной коордианатами.</para>
            </listitem>
            <listitem>
              <para><code>setMaxZoom()</code> - задание максимального доступного масштаба.</para>
            </listitem>
            <listitem>
              <para><code>setMinZoom()</code> - задание минимального доступного масштаба.</para>
            </listitem>
            <listitem>
              <para><code>setDraggable()</code> - включение/выключение режима перетаскивания карты.</para>
            </listitem>
            <listitem>
              <para><code>setKeyboardShortcutsEnabled()</code> - включение/выключение сочетаний клавиш.</para>
            </listitem>
            <listitem>
              <para><code>setScrollWheelEnabled()</code> - включение/выключение изменения масштаба карты с помощью колесика мыши.</para>
            </listitem>
            <listitem>
              <para><code>setMapType()</code> - задание типа карты.</para>
            </listitem>
          </itemizedlist></para>
      </listitem>
      <listitem>
        <para>Интерфейсы компонентов карты (располагаются в пакете <code>com.haulmont.charts.gui.map.model</code>):<itemizedlist>
            <listitem>
              <para><code>GeoPoint</code> - вспомогательный компонент, непосредственно не отображаемый на карте. Используется для задания параметров карты, таких как центр, границы, и для создания более сложных компонентов карты. Для создания объекта используется метод <code>createGeoPoint()</code> интерфейса <code>MapViewer</code>. Например:<programlisting language="java">GeoPoint center = map.createGeoPoint(53.490905, -2.249558);
map.setCenter(center);</programlisting></para>
            </listitem>
            <listitem>
              <para><code>Marker</code> - компонент для отметки места на карте. По умолчанию используется стандартная иконка сервиса карт. Для создания и размещения объекта на карте используются методы <code>createMarker()</code> и <code>addMarker()</code> интерфейса <code>MapViewer</code>. Например:<programlisting language="java">Marker marker = map.createMarker(&quot;My place&quot;, map.createGeoPoint(53.590905, -2.249558), true);
marker.setClickable(true);
map.addMarker(marker);</programlisting></para>
            </listitem>
            <listitem>
              <para><code>Polyline</code> - компонент для отображения ломаной линии. Для создания и размещения объекта на карте используются методы <code>createPolyline()</code> и <code>addPolyline()</code> интерфейса <code>MapViewer</code>. Например:<programlisting language="java">List&lt;GeoPoint&gt; coordinates = new ArrayList&lt;&gt;();
coordinates.add(map.createGeoPoint(53.49, -2.54));
coordinates.add(map.createGeoPoint(53.49, -2.22));
coordinates.add(map.createGeoPoint(53.89, -2.22));
coordinates.add(map.createGeoPoint(53.99, -2.94));
Polyline polyline = map.createPolyline(coordinates);
map.addPolyline(polyline);</programlisting></para>
            </listitem>
            <listitem>
              <para><code>Polygon</code> - компонент для отображения полигона. Для создания и размещения объекта на карте используются методы <code>createPolygon()</code> и <code>addPolygonOverlay()</code> интерфейса <code>MapViewer</code>. Например:<programlisting language="java">List&lt;GeoPoint&gt; coordinates = new ArrayList&lt;&gt;();
coordinates.add(map.createGeoPoint(53.49, -2.54));
coordinates.add(map.createGeoPoint(53.49, -2.22));
coordinates.add(map.createGeoPoint(53.89, -2.22));
coordinates.add(map.createGeoPoint(53.99, -2.94));
Polygon p = map.createPolygon(coordinates, &quot;#9CFBA9&quot;, 0.6, &quot;#2CA860&quot;, 1.0, 2);
map.addPolygonOverlay(p);</programlisting></para>
            </listitem>
            <listitem>
              <para><code>InfoWindow</code> - компонент карты для отображения информации во всплывающем окне. Для создания и размещения объекта на карте используются методы <code>createInfoWindow()</code> и <code>openInfoWindow()</code> интерфейса <code>MapViewer</code>. Например:<programlisting language="java">InfoWindow w = map.createInfoWindow(&quot;Some text&quot;);
map.openInfoWindow(w);</programlisting></para>
              <para>Информационное окно может быть привязано к маркеру, например:<programlisting language="java">map.addMarkerClickListener(new MarkerClickListener() {
    @Override
    public void onClick(MarkerClickEvent event) {
        Marker marker = event.getMarker();
        String caption = String.format(&quot;Marker clicked: %.2f, %.2f&quot;, 
                marker.getPosition().getLatitude(),
                marker.getPosition().getLongitude());
        InfoWindow w = map.createInfoWindow(caption, marker);
        map.openInfoWindow(w);
    }
});</programlisting></para>
            </listitem>
            <listitem>
              <para><code>HeatMapLayer</code> - слой тепловой карты: предназначен для изображения плотности данных в различных географических точках. Степень плотности точек отображается с помощью цвета. По умолчанию области с высокой плотностью точек отображаются красным цветом, а области с низкой - зелёным. Для создания и размещения объекта на карте используются методы <code>createHeatMapLayer()</code> и <code>addHeatMapLayer()</code> интерфейса <code>MapViewer</code>. Например:<programlisting language="java">HeatMapLayer heatMapLayer = map.createHeatMapLayer();
List&lt;GeoPoint&gt; data = new ArrayList&lt;&gt;();
data.add(map.createGeoPoint(53.450, -2.00));
data.add(map.createGeoPoint(53.451, -2.00));
data.add(map.createGeoPoint(53.452, -2.00));
data.add(map.createGeoPoint(53.453, -2.00));
data.add(map.createGeoPoint(53.454, -2.00));        
heatMapLayer.setData(data);
map.addHeatMapLayer(heatMapLayer);</programlisting></para>
              <para>Данные добавленного на карту слоя тепловой карты могут быть изменены с помощью дополнительного вызова метода <code>setData()</code>. Заново добавлять слой на карту при этом не требуется. </para>
            </listitem>
            <listitem>
              <para><code>DrawingOptions</code> - компонент поддержки рисования. В данный момент поддерживается только рисование полигонов. Режим рисования будет включен если в <code>MapViewer</code> передан экземпляр <code>DrawingOptions</code>. Пример использования:<programlisting language="java">DrawingOptions options = new DrawingOptions();
PolygonOptions polygonOptions = new PolygonOptions(true, true, &quot;#993366&quot;, 0.6);
ControlOptions controlOptions = new ControlOptions(
    Position.TOP_CENTER, Arrays.asList(OverlayType.POLYGON));
options.setEnableDrawingControl(true);
options.setPolygonOptions(polygonOptions);
options.setDrawingControlOptions(controlOptions);
options.setInitialDrawingMode(OverlayType.POLYGON);
map.setDrawingOptions(options);</programlisting></para>
            </listitem>
          </itemizedlist></para>
      </listitem>
      <listitem>
        <para>Слушатели событий (располагаются в пакете <code>com.haulmont.charts.gui.map.model.listeners</code>):<itemizedlist>
            <listitem>
              <para><code>MapMoveListener</code> - перемещение карты с зажаток клавишей мыши.</para>
            </listitem>
            <listitem>
              <para><code>MapClickListener</code> - щелчок по карте.</para>
            </listitem>
            <listitem>
              <para><code>MarkerClickListener</code> - щелчок по маркеру.</para>
            </listitem>
            <listitem>
              <para><code>MarkerDragListener</code> - перетаскивание маркера.</para>
            </listitem>
            <listitem>
              <para><code>InfoWindowClosedListener</code> - закрытие информационного окна.</para>
            </listitem>
            <listitem>
              <para><code>PolygonCompleteListener</code> - создание полигона в режиме редактирования.</para>
            </listitem>
            <listitem>
              <para><code>PolygonEditListener</code> - редактирование полигона (перемещение или добавление вершины существующего полигона).</para>
            </listitem>
            <listitem>
              <para><code>MapInitListener</code> - завершение инициализации карты: вызывается один раз  после первоначальной загрузки карты, когда тайлы загружены и  координаты доступны.</para>
            </listitem>
          </itemizedlist></para>
      </listitem>
    </itemizedlist>
    <para>Для более подробной информации о методах и параметрах компонентов карты см. соответствующие JavaDocs.</para>
  </section>
</chapter>
