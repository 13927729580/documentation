<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN" "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" []>
<chapter id="chapter_setup" lang="en">
  <title>Installation and Setup</title>
  <para>Minimum software requirements are as follows:</para>
  <itemizedlist>
    <listitem>
      <para><application>Java SE 7+ SDK</application>. It is recommended that you use <application>Oracle Java HotSpot VM</application>. </para>
      <para>You need to set the path to JDK root directory in  the   <literal>JAVA_HOME</literal> environment variable, e.g.  <filename>C:\Program Files\Java\jdk1.8.0_05</filename>. On Windows, you can do this at <guimenu>Computer</guimenu> -&gt; <guimenu>Properties</guimenu> -&gt; <guimenu>Advanced System Settings</guimenu> -&gt; <guimenu>Advanced</guimenu> -&gt; <guimenu>Environment variables.</guimenu> The value of the variable should be added to  <guilabel>System variables</guilabel> list.</para>
    </listitem>
    <listitem>
      <para>Java IDE: <application>IntelliJ IDEA Community Edition 12+</application> or  <application>Eclipse 4.3+</application>. It is recommended that you use <application>IntelliJ IDEA</application>.</para>
    </listitem>
  </itemizedlist>
  <para>In the most basic scenario, the built-in   <application>HyperSQL</application> (<ulink url="http://hsqldb.org">http://hsqldb.org</ulink>) can be used as the database server. This is enough for exploring the platform capabilities and application prototyping. For building production applications, it is recommended to install and use one of the   full-featured DBMS   <link linkend="dbms_types">supported by the platform</link>, e.g. <application>PostgreSQL</application>.</para>
  <para>The web interface of the platform-based applications supports  all popular browsers, including <application>Google Chrome</application>, <application>Mozilla Firefox</application>, <application>Safari</application>,  <application>Opera 15+</application>, <application>Internet Explorer 8+</application>. CUBA Studio interface is currently functional in all of the above mentioned browsers, except for  <application>Internet Explorer</application>.</para>
  <section id="cubaStudio_install">
    <title>CUBA Studio Installation</title>
      <para>Prerequisites:</para>
      <itemizedlist>
          <listitem>
              <para>Make sure that Java 7+ SE SDK is installed by running the following command in the console: </para>
              <para><prompt>java -version</prompt></para>
              <para>The command should return the Java version, e.g.  <code>1.8.0_31</code>.</para>
          </listitem>
          <listitem>
              <para>Set the <code>JAVA_HOME</code> environment variable. Check it by executing (on  Windows)</para>
              <para><prompt>echo %JAVA_HOME%</prompt></para>
              <para>The command should return the path to JDK root directory, e.g. <filename>C:\Program Files\Java\jdk1.8.0_31</filename>.</para>
          </listitem>
          <listitem>
               <para>If you connect to the internet via a proxy server, some Java system properties must be passed to the JVM running Studio and Gradle.
                  These properties are explained here: <ulink url="http://docs.oracle.com/javase/7/docs/technotes/guides/net/proxies.html">http://docs.oracle.com/javase/7/docs/technotes/guides/net/proxies.html</ulink>
               (see properties for HTTP and HTTPS protocols).</para>
              <para>It is recommended to set these properties system-wide in the <code>JAVA_OPTS</code> environment variable.
                  The Studio launch script passes <code>JAVA_OPTS</code> to the Java executable.</para>
          </listitem>
      </itemizedlist>
    <para>In order to install CUBA Studio, take the following steps:</para>
    <orderedlist>
      <listitem>
        <para>Download <filename>studio-&lt;version&gt;.zip</filename> archive at <ulink url="https://www.cuba-platform.com/download">https://www.cuba-platform.com/download</ulink>.</para>
      </listitem>
      <listitem>
        <para>Extract the files to local directory, e.g. <filename>c:/work/studio</filename></para>
      </listitem>
      <listitem>
        <para>Open the command line, go to  <filename>bin</filename> directory and run </para>
        <para><prompt>studio</prompt></para>
      </listitem>
      <listitem>
        <para>In the <guilabel>CUBA Studio Server</guilabel> window, enter the following parameters:</para>
        <itemizedlist>
          <listitem>
            <para><guilabel>Workspace</guilabel> − the directory for creating projects, e.g. <filename>c:/work</filename></para>
          </listitem>
          <listitem>
            <para><guilabel>Gradle home</guilabel> − leave this field empty; in this case, the required <application>Gradle</application> distribution will be downloaded automatically.</para>
            <para>If you want to use a local Gradle distribution, enter the path to the respective directory in the field. For project  build system to work correctly,  Gradle  <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../var/gradleVersion.txt" encoding="UTF-8" parse="text"/> is required.</para>
          </listitem>
          <listitem>
            <para><guilabel>Server port</guilabel> −  CUBA Studio server port (the default port is 8111)</para>
          </listitem>
          <listitem>
            <para><guilabel>IDE port</guilabel> −   IDE plugin listening port (the default port is 48561)</para>
          </listitem>
          <listitem>
            <para><guilabel>Repository</guilabel> − binary artifacts <link linkend="artifact_repository">repository</link> URL and authentication parameters </para>
          </listitem>
        </itemizedlist>
      </listitem>
      <listitem>
        <para>Click <guibutton>Start</guibutton> to run the Studio server.</para>
        <para>The server will download, run, and connect to the Gradle daemon. This may take a significant amount of time on first startup; on subsequent launches, this will take a few seconds.</para>
        <para>After that, the web server will be started, and the URL of the Studio interface will appear in the  <guilabel>URL</guilabel> field. By clicking <guibutton>-&gt;</guibutton>, you can open  the address in browser; by clicking  <guibutton>Copy</guibutton> you can copy the address to clipboard.</para>
      </listitem>
      <listitem>
        <para>Open the web browser and go to the specified address. </para>
      </listitem>
      <listitem>
        <para>Click  <guibutton>Open project</guibutton> in the Studio web interface. In the <guilabel>Select project</guilabel> window, click <guibutton>New</guibutton> to create a new project, or <guibutton>Import</guibutton> to add an existing one to the Studio list.</para>
      </listitem>
      <listitem>
        <para>Once the project is opened, the Studio will download the source code of the platform base projects and save it to the local folder.
            Before building the project, it is recommended to wait until the download is finished and make sure that the background task indicator in the bottom right corner of the Studio has faded out.</para>
      </listitem>
    </orderedlist>
  </section>
  <section id="ide_integration">
    <title>IDE Integration</title>
    <para>In order to integrate the Studio with <application>IntelliJ IDEA</application> or  <application>Eclipse</application>, take the following steps:</para>
    <orderedlist>
      <listitem>
        <para>Open or   <link linkend="qs_studio_setup">create a new</link> project in the Studio.</para>
      </listitem>
      <listitem>
        <para>Switch to <guilabel>Project properties</guilabel> section and click <guibutton>Edit</guibutton>. Select the required  <guilabel>Java IDE</guilabel> by checking <guibutton> IntelliJ IDEA</guibutton> or <guibutton>Eclipse</guibutton>.</para>
      </listitem>
      <listitem>
        <para>Select  <guimenu>Build</guimenu> −&gt; <guimenu>Create or update &lt;IDE&gt; project files</guimenu> in the Studio menu. The corresponding files will be created in the project directory. </para>
      </listitem>
      <listitem>
        <para>For IntelliJ IDEA 12+ integration:<orderedlist>
            <listitem>
              <para>Run IntelliJ IDEA 12+ and install <application>CUBA Framework Integration</application> plugin, from the plugin repository: <guimenu>File</guimenu> -&gt; <guimenu>Settings</guimenu> -&gt; <guimenu>IDE Settings</guimenu> -&gt; <guimenu>Plugins</guimenu> -&gt; <guimenuitem>Browse Repositories</guimenuitem>.</para>
            </listitem>
            <listitem>
              <para> Find  <guilabel>CUBA</guilabel> in the <guilabel>Project Settings</guilabel> section of the  <guimenu>Settings</guimenu> menu. Check <guilabel>Enabled</guilabel> on the <guilabel>Studio integration</guilabel> panel and click <guibutton>OK</guibutton></para>
            </listitem>
          </orderedlist></para>
      </listitem>
      <listitem>
        <para>For Eclipse 4.3 integration:<orderedlist>
            <listitem>
              <para>Run Eclipse, open  <guimenu>Help</guimenu> -&gt; <guimenu>Install New Software</guimenu>,  add <literal>http://files.cuba-platform.com/eclipse-update-site</literal> repository and install the <application>CUBA Plugin</application>.</para>
            </listitem>
            <listitem>
              <para>In the  <guilabel>CUBA</guilabel> section of the <guimenu>Window</guimenu> -&gt; <guimenu>Preferences</guimenu> menu, check <guilabel>Studio Integration Enabled</guilabel>, and click <guibutton>OK.</guibutton></para>
            </listitem>
          </orderedlist></para>
      </listitem>
    </orderedlist>
    <para>Please note that  <guilabel>IDE: on port 48561</guilabel> label has appeared in the bottom left corner of the Studio. Now the corresponding source code files will be opened in IDE when you click  <guilabel>IDE</guilabel> button in the Studio.</para>
  </section>
</chapter>
