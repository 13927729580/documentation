<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN" "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" []>
<chapter id="chapter_quickStart" lang="en">
  <title>Quick Start </title>
  <para>This section describes the process of creating an application using  <application>CUBA Studio</application>.
    Similar information is provided in the videos available at
    <ulink url="https://www.cuba-platform.com/en/quickstart">www.cuba-platform.com/en/quickstart</ulink>.</para>
  <para>Make sure that the necessary software is already installed and set up on your computer, see <xref linkend="chapter_setup"/>.</para>
  <para>Key stages of our application development: </para>
  <orderedlist>
    <listitem>
      <para>Data model development including creation of <link linkend="data_model">entities</link> describing
        application domain and corresponding database tables. </para>
    </listitem>
    <listitem>
      <para>Development of the user interface screens enabling to create, view, update and delete data model entities.</para>
    </listitem>
  </orderedlist>
  <section id="quick_start">
    <title>Application Details </title>
    <para>The application should maintain information about the customers and their orders. </para>
    <para>A customer has the following attributes:</para>
    <itemizedlist>
      <listitem>
        <para>Name</para>
      </listitem>
      <listitem>
        <para>E-mail</para>
      </listitem>
    </itemizedlist>
    <para>Order attributes:</para>
    <itemizedlist>
      <listitem>
        <para>Ownership by a customer </para>
      </listitem>
      <listitem>
        <para>Date</para>
      </listitem>
      <listitem>
        <para>Amount</para>
      </listitem>
    </itemizedlist>
    <para>The application UI should contain: </para>
    <itemizedlist>
      <listitem>
        <para>Customers browser screen;</para>
      </listitem>
      <listitem>
        <para>Customer editor screen, containing as well the list of this customer&apos;s orders;</para>
      </listitem>
      <listitem>
        <para>General orders browser screen;</para>
      </listitem>
      <listitem>
        <para>Order editor screen.</para>
      </listitem>
    </itemizedlist>
    <para>The application should support user interface in English and Russian. </para>
  </section>
  <section id="qs_create_project">
    <title>Creating a Project</title>
    <orderedlist>
      <listitem>
        <para>Start CUBA Studio and open its web interface (See  <xref linkend="cubaStudio_install"/>).</para>
      </listitem>
      <listitem>
        <para>Click <guibutton>Open project</guibutton> in the start window.  </para>
      </listitem>
      <listitem>
        <para>Click <guibutton>New</guibutton> in the appeared <guilabel>Select project</guilabel> window.</para>
      </listitem>
      <listitem>
        <para>Specify the name of the new project in the <guilabel>Project name</guilabel> field of the
          <guilabel>New project</guilabel> window – for example, <code>sales</code>. The name should contain only Latin
          letters, numbers and underscores. Think carefully on the project name at this stage, as changing it later on
          will require complex manual intervention. </para>
      </listitem>
      <listitem>
        <para>The following fields below will be automatically populated: </para>
        <itemizedlist>
          <listitem>
            <para><guilabel>Project path</guilabel> – the path to the new project directory. You can select the
              directory manually by clicking the <guibutton>...</guibutton> button next to the field. The
              <guilabel>Select folder</guilabel> window will appear with the list of folders n your hard drive. You can select one of those, or create a new directory by clicking the
              <guibutton>+</guibutton> button.</para>
          </listitem>
          <listitem>
            <para><guilabel>Project namespace</guilabel> – the namespace which will be used as a prefix for entity
              names and database tables. The namespace can consist of Latin letters only and should be as short as possible.
              For example, if the project name is <code>sales_2</code>, the namespace can be <code>sales</code> or <code>sal</code>.
            </para>
          </listitem>
          <listitem>
            <para><guilabel>Root package</guilabel> − the root package of Java classes. It can be adjusted later, but
              the classes generated at project creation will not be moved.  </para>
          </listitem>
          <listitem>
            <para><guilabel>Base projects version</guilabel> – the platform version used in the project. The platform
              artifacts will be automatically downloaded from the repository on project build.</para>
          </listitem>
        </itemizedlist>
      </listitem>
      <listitem>
        <para>Click <guibutton>OK</guibutton>. Empty project will be created in the specified <code>sales</code>
          directory and the main Studio window will open. </para>
      </listitem>
      <listitem>
        <para>Assemble the project: select option  <guimenu>Build</guimenu> &gt; <guimenu>Assemble project</guimenu> in
          the Studio main menu. At this stage all required libraries will be downloaded and project
          <link linkend="artifact">artifacts</link> will be assembled in <filename>build</filename> subdirectories of the modules.</para>
      </listitem>
      <listitem>
        <para>Create the database on the local <application>HyperSQL</application> server: select option
          <guimenu>Run</guimenu> &gt; <guimenu>Create database</guimenu> in the menu. The database name is the same as project
          namespace by default. </para>
      </listitem>
      <listitem>
        <para>Select <guimenu>Run</guimenu> &gt; <guimenu>Deploy</guimenu> menu option. <application>Tomcat</application>
          server with the built application will be installed in the project <filename>build</filename> subdirectory.</para>
      </listitem>
      <listitem>
        <para>Select <guimenu>Run</guimenu> &gt; <guimenu>Start application server </guimenu>option. The link next to
          the <guilabel>Web application</guilabel> caption in the status panel will become available in a few seconds so
          you will be able to open the application directly from Studio. </para>
        <para>The username and password are <code>admin</code> / <code>admin</code>.</para>
        <para>The running application contains two main menu items (<guimenu>Administration</guimenu> and <guimenu>Help</guimenu>),
          as well as security and administration subsystems functionality.</para>
      </listitem>
    </orderedlist>
  </section>
  <section id="qs_create_entities">
    <title>Creating Entities </title>
    <para>Let us create the <code>Customer</code> entity class.</para>
    <itemizedlist>
      <listitem>
        <para>Go to the <guilabel>Entities</guilabel> tab in the navigation section and click <guibutton>New entity</guibutton>.
          The <guilabel>New entity</guilabel> dialog window will appear.</para>
      </listitem>
      <listitem>
        <para>Enter the name of the entity class – <code>Customer</code> – in the  <guilabel>Class name</guilabel> field.</para>
        <para>
          <mediaobject>
            <imageobject>
              <imagedata align="center" fileref="img/qs_create_customer_entity.png"/>
            </imageobject>
          </mediaobject>
        </para>
      </listitem>
      <listitem>
        <para>Click <guibutton>OK</guibutton>. The entity designer page will be displayed in the workspace.</para>
        <para>
          <mediaobject>
            <imageobject>
              <imagedata fileref="img/qs_customer_entity.png" align="center"/>
            </imageobject>
          </mediaobject>
        </para>
      </listitem>
      <listitem>
        <para>The entity name and the database table name will be automatically generated in the <guilabel>Name</guilabel>
          and the <guilabel>Table</guilabel> fields respectively.</para>
      </listitem>
      <listitem>
        <para>Leave the existing value – <code>StandardEntity</code> - in the <guilabel>Parent class</guilabel> field.</para>
      </listitem>
      <listitem>
        <para>Leave the <guilabel>Inheritance strategy</guilabel> field blank. </para>
      </listitem>
      <listitem>
        <para>Click <inlinemediaobject><imageobject><imagedata fileref="img/localization.png"/></imageobject></inlinemediaobject>
          button next to the <guilabel>Name</guilabel> to open the <guilabel>Localized message</guilabel> window.
          Specify <link linkend="localization">localization</link> for the entity name for the available languages in it. </para>
      </listitem>
    </itemizedlist>
    <para>Next, let us create entity attributes. To do this, click the  <guibutton>New</guibutton> button below the
      <guilabel>Attributes</guilabel> table.</para>
    <itemizedlist>
      <listitem>
        <para><guilabel>Create attribute</guilabel> window will appear. Enter the name  of the entity attribute −
          <code>name</code>, in the <guilabel>Name</guilabel> field. Select <code>DATATYPE</code> value in the
          <guilabel>Attribute type</guilabel> list, specify <code>String</code> attribute type in the <guilabel>Type</guilabel>
          field and then set the length of the text attribute to 100 characters in the <guilabel>Length</guilabel> field.
          Check the <guilabel>Mandatory</guilabel> box. The name of the database table column will be automatically
          generated in the <guilabel>Column</guilabel> field.</para>
        <para>
          <mediaobject>
            <imageobject>
              <imagedata fileref="img/qs_new_attribute.png" align="center"/>
            </imageobject>
          </mediaobject>
        </para>
        <para>Now click <inlinemediaobject><imageobject><imagedata fileref="img/localization.png"/></imageobject></inlinemediaobject>
          button next to the attribute name to open the  <guilabel>Localized message</guilabel> window. Localize the attribute
          name in the available languages. </para>
        <para>Click <guibutton>Add</guibutton> to add the attribute.</para>
      </listitem>
      <listitem>
        <para><code>email</code> attribute is created in the same way but the value in  <guilabel>Length</guilabel> field should be set to  <code>50</code>.</para>
      </listitem>
    </itemizedlist>
    <para>After creating the attributes, go to the <guilabel>Instance name</guilabel> tab in the entity designer to specify
      <link linkend="namePattern">Name pattern</link>. Select the  <guilabel>name</guilabel> attribute in the
      <guilabel>Available attributes</guilabel> list and move it to the <guilabel>Name pattern attributes</guilabel> list
      by clicking the button with the right arrow on it.</para>
    <para><classname>Customer</classname> entity creation is now complete. Click  <guibutton>OK</guibutton> in the upper
      left corner of the entity designer to save the changes and close the page. </para>
    <para>Let us create the  <code>Order</code> entity. Click <guibutton>New entity</guibutton> option on  the
      <guilabel>Entities</guilabel> tab. Enter the  <guilabel>Class name</guilabel> − <code>Order</code>. The entity
      should have the following attributes: </para>
    <itemizedlist>
      <listitem>
        <para><guilabel>Name</guilabel> − <code>customer</code>,
          <guilabel>Attribute type</guilabel> − <code>ASSOCIATION</code>,
          <guilabel>Type</guilabel> − <code>Customer</code>,
          <guilabel>Cardinality</guilabel> − <code>MANY_TO_ONE</code>.</para>
      </listitem>
      <listitem>
        <para><guilabel>Name</guilabel> − <code>date</code>,
          <guilabel>Attribute type</guilabel> − <code>DATATYPE</code>,
          <guilabel>Type</guilabel> − <code>Date</code>.
          Check <guilabel>Mandatory</guilabel> box for <code>date</code> attribute.</para>
      </listitem>
      <listitem>
        <para><guilabel>Name</guilabel> − <code>amount</code>,
          <guilabel>Attribute type</guilabel> − <code>DATATYPE</code>,
          <guilabel>Type</guilabel> − <code>BigDecimal</code>.</para>
      </listitem>
    </itemizedlist>
    <para>Specify localized caption for each of the attributes by clicking the
      <inlinemediaobject><imageobject><imagedata fileref="img/localization.png"/></imageobject></inlinemediaobject>
      button next to the attribute name.</para>
  </section>
  <section id="qs_create_db_tables">
    <title>Creating Database Tables </title>
    <para>It is sufficient to click <guibutton>Generate DB scripts</guibutton> button in  <guilabel>Entities</guilabel>
      tab on the navigation panel to <link linkend="db_update_in_dev">create database tables</link>. After that,
      <guilabel>Database scripts</guilabel> page will open. Both incremental DB update scripts from the current state
      (<guilabel>Update scripts</guilabel>) and initial DB creation scripts  (<guilabel>Init tables</guilabel>,
      <guilabel>Init constraints</guilabel>, <guilabel>Init data</guilabel>) will be generated on this page.
      </para>
    <para>
      <mediaobject>
        <imageobject>
          <imagedata fileref="img/qs_generate_db_scripts.png" align="center"/>
        </imageobject>
      </mediaobject>
    </para>
    <para>Click <guibutton>Save and close</guibutton> button to save the generated scripts. To run update scripts, stop
      the running application using the <guimenu>Run</guimenu> &gt; <guimenu>Stop application server</guimenu> command,
      then select <guimenu>Run</guimenu> &gt; <guimenu>Update database</guimenu>.</para>
  </section>
  <section id="qs_create_ui">
    <title>Creating User Interface Screens</title>
    <para>Now we will create screens for customers and orders data management. </para>
    <section id="qs_create_customer_screens">
      <title>Screens for Customer</title>
      <para>Select <code>Customer</code> entity in the <guilabel>Entities</guilabel> tab on the navigation panel to
        create standard screens for viewing and editing Customers. Click <guibutton>Create standard screens</guibutton>
        link at the bottom of the section. After that, <guilabel>Create standard screens</guilabel> window will appear.</para>
      <para>
        <mediaobject>
          <imageobject>
            <imagedata fileref="img/qs_create_customer_screens.png" align="center"/>
          </imageobject>
        </mediaobject>
      </para>
      <para>All fields in this dialog are already populated with default values, there is no need to change them. Click
        the <guibutton>Create</guibutton> button. </para>
      <para><code>customer-edit.xml</code> and <code>customer-browse.xml</code> items will appear in
        <guilabel>GUI Module</guilabel> on <guilabel>Screens</guilabel> tab of the navigation panel.</para>
      <para>You can specify localized captions for the screens. For this, select a screen and click
        <guibutton>Edit</guibutton> to open the screen designer page. Go to the <guilabel>Properties</guilabel> tab.
        Click the <inlinemediaobject><imageobject><imagedata fileref="img/localization.png"/></imageobject></inlinemediaobject>
        button  next to the  <guilabel>Caption</guilabel> field and specify screen names in different locales.
        Alternatively, you can open <code>messages.properties</code> item located in the screens package and edit
        <code>browseCaption</code> and <code>editCaption</code> messages for available locales.</para>
    </section>
    <section id="qs_create_order_screens">
      <title>Order Screens</title>
      <para><code>Order</code> entity has the following distinction: since one of the attributes is <code>Order.customer</code>
        <link linkend="associationType">reference</link> attribute, you should define a <link linkend="views">view</link>
        including this attribute (standard <code>_local</code> view does not include reference attributes).</para>
      <para>Go to the <guilabel>Entities</guilabel> tab on the navigation panel, select the <code>Order</code> entity and click
        the <guibutton>New view</guibutton>  button. View designer page will open. Enter <code>orderWithCustomer</code>
        as the view name, click on <code>customer</code> attribute and select <code>_minimal</code> view for the
        <code>Customer</code> entity in the panel on the right.</para>
      <para>
        <mediaobject>
          <imageobject>
            <imagedata fileref="img/qs_order_view.png" align="center"/>
          </imageobject>
        </mediaobject>
      </para>
      <para>Click <guibutton>OK</guibutton> in the upper left corner.</para>
      <para>After that select the <code>Order</code> entity and click  <guibutton>Create standard screens</guibutton>.
        Select <code>orderWithCustomer</code> as <guilabel>Browse view</guilabel> and <guilabel>Edit view</guilabel>
        in the appeared <guilabel>Create standard screens</guilabel> window and click  <guibutton>Create</guibutton>.</para>
      <para>
        <mediaobject>
          <imageobject>
            <imagedata fileref="img/qs_create_order_screens.png" align="center"/>
          </imageobject>
        </mediaobject>
      </para>
      <para><code>order-edit.xml</code> and <code>order-browse.xml</code> items will appear in the
        <guilabel>GUI Module</guilabel> on the <guilabel>Screens</guilabel> tab of the navigation panel.</para>
      <para>You can specify localized captions for the Order screens as described above for the Customer screens.</para>
    </section>
    <section id="qs_create_menu">
      <title>Application Menu</title>
      <para>At the moment of their creation, the screens were added to the  <guimenu>application</guimenu> menu item of
        the default application menu. Let us rename it. Switch to the <guilabel>Main menu</guilabel> tab on the navigation
        panel and click  <guibutton>Edit</guibutton>. The Menu designer page will open. Select the
        <code>application</code> menu item to edit its properties. </para>
      <para>Enter the new value of the menu identifier − <code>shop</code> − in the <guilabel>Id</guilabel> field, then click
        the <guilabel>Caption</guilabel> <guibutton>edit</guibutton> button and set localized names of the menu item.</para>
      <para>
        <mediaobject>
          <imageobject>
            <imagedata fileref="img/qs_application_menu.png" align="center"/>
          </imageobject>
        </mediaobject>
      </para>
      <para>After editing the menu, click  <guibutton>OK</guibutton> at the top left corner of the page.</para>
    </section>
    <section id="qs_customer_edit_with_orders">
      <title>Customer Editor With a List of Orders </title>
      <para>Do the following to display the list of Orders in the Customer’s edit screen: </para>
      <itemizedlist>
        <listitem>
          <para>Go to the <guilabel>Screens</guilabel> tab on the navigation panel. Choose  <filename>customer-edit.xml</filename>
            screen and click  <guibutton>Edit</guibutton>.</para>
        </listitem>
        <listitem>
          <para>Go to the <guilabel>Datasources</guilabel> tab on the screen designer page and click
            <guibutton>New</guibutton>.</para>
        </listitem>
        <listitem>
          <para>Select the newly created data source in the list. Its attributes will appear in the right part of the page.</para>
        </listitem>
        <listitem>
          <para>Specify <code>collectionDatasource</code> in the <guilabel>Type</guilabel> field.</para>
        </listitem>
        <listitem>
          <para>In <guilabel>Id</guilabel> field enter the data source identifier − <code>ordersDs</code>.</para>
        </listitem>
        <listitem>
          <para>Select <code>com.sample.sales.entity.Order</code> entity in the <guilabel>Entity</guilabel> list.</para>
        </listitem>
        <listitem>
          <para>Select <code>_local</code> view in the <guilabel>View</guilabel> list.</para>
        </listitem>
        <listitem>
          <para>Enter the following query in the <guilabel>Query</guilabel> field:
            <programlisting>select o from sales$Order o where o.customer.id = :ds$customerDs order by o.date</programlisting>
            The query contains orders selection criterion with <code>ds$customerDs</code> parameter. The parameter value named
            like  <code>ds${datasource_name}</code> will contain id of the entity selected in  <code>datasource_name</code>
            datasource at the moment, in this case it is the id of the Customer being edited.  </para>
          <para>
            <mediaobject>
              <imageobject>
                <imagedata fileref="img/qs_customer_screen_orders_ds.png" align="center"/>
              </imageobject>
            </mediaobject>
          </para>
        </listitem>
        <listitem>
          <para>Click <guibutton>Apply</guibutton> to save the changes. </para>
        </listitem>
        <listitem>
          <para>Next go to the <guilabel>Layout</guilabel> tab in the screen designer and find the <code>Label</code> component
            in the components palette. Drag this component to the screen components hierarchy panel and place it between
            <code>fieldGroup</code> and <code>windowActions</code>. Go to the <guilabel>Properties</guilabel> tab in the
            properties panel. Enter <code>msg://orders</code> in the <guilabel>value</guilabel> field. Click the
            <inlinemediaobject><imageobject><imagedata fileref="img/localization.png"/></imageobject></inlinemediaobject>
            button next to the <guilabel>value</guilabel> field and define label values in available locales.</para>
          <para>
            <mediaobject>
              <imageobject>
                <imagedata fileref="img/qs_customer_screen_label.png" align="center"/>
              </imageobject>
            </mediaobject>
          </para>
          <tip>
            <para>If the application is not intended to be used in multiple languages, the value in the
              <guilabel>value</guilabel> field can be entered straight in the required language. </para>
          </tip>
        </listitem>
        <listitem>
          <para>Drag <code>Table</code> from the components palette to components hierarchy panel and place it between
            <code>label</code> and <code>windowActions</code>. Select this component in the hierarchy and specify table
            size in properties on the <guilabel>Layout</guilabel> tab: set <code>100%</code> in <guilabel>width</guilabel>
            field and<code> 200px</code> in <guilabel>height</guilabel> field. </para>
          <para>Go to the <guilabel>Properties</guilabel> tab. Set <code>ordersTable</code> value as <guilabel>id</guilabel>,
            choose <code>orderDs</code> from the list of available datasources. </para>
          <para>
            <mediaobject>
              <imageobject>
                <imagedata fileref="img/qs_customer_screen_table.png" align="center"/>
              </imageobject>
            </mediaobject>
          </para>
          <para>Next, click the  <guibutton>edit</guibutton> button for  <guilabel>columns</guilabel>. The table columns
            editor window  will appear on the screen. Select  the <code>date</code> value from the drop-down list in
            the first line of the  <guilabel>id</guilabel> column, and <code>amount</code>  in the second line.</para>
          <para>
            <mediaobject>
              <imageobject>
                <imagedata fileref="img/qs_customer_screen_table_columns.png" align="center"/>
              </imageobject>
            </mediaobject>
          </para>
        </listitem>
        <listitem>
          <para>Click <guibutton>OK</guibutton> in the upper left corner of the screen designer page to save the changes
            in Customer edit screen. </para>
        </listitem>
      </itemizedlist>
    </section>
  </section>
  <section id="qs_run">
    <title>Running the Application</title>
    <para>Now let us see how the created screens look in the actual application. Select   <guimenu>Run</guimenu> &gt;  <guimenu>Restart application server</guimenu>.</para>
    <para>Log in selecting English language in the login window. Open the <guimenu>Sales</guimenu> &gt; <guimenu>Customers</guimenu>
      menu item:
      <figure id="figure_customerBrowse">
        <title>The Customers browser</title>
        <mediaobject>
          <imageobject>
            <imagedata align="center" fileref="img/qs_customer_browse.png"/>
          </imageobject>
        </mediaobject>
      </figure>
    </para>
    <para>Click  <guibutton>Create</guibutton>:
      <figure id="figure_customerEdit">
        <title>The Customer editor screen</title>
        <mediaobject>
          <imageobject>
            <imagedata align="center" fileref="img/qs_customer_edit_2.png"/>
          </imageobject>
        </mediaobject>
      </figure>
    </para>
    <para>Open the <guimenu>Sales</guimenu> &gt; <guimenu>Orders</guimenu> menu item:
      <figure id="figure_orderBrowse">
        <title>The Orders browser</title>
        <mediaobject>
          <imageobject>
            <imagedata align="center" fileref="img/qs_order_browse.png"/>
          </imageobject>
        </mediaobject>
      </figure>
    </para>
    <para>Click <guibutton>Create</guibutton>:
      <figure id="figure_orderEdit">
        <title>The Order editor</title>
        <mediaobject>
          <imageobject>
            <imagedata align="center" fileref="img/qs_order_edit.png"/>
          </imageobject>
        </mediaobject>
      </figure>
    </para>
  </section>
</chapter>
