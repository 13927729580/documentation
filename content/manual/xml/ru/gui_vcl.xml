<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE section PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN" "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" []>
<section id="gui_vcl" xmlns:xi="http://www.w3.org/2001/XInclude">
  <title>Библиотека визуальных компонентов</title>
  <para><link linkend="gui_components">Компоненты</link></para>
  <para><link linkend="gui_layouts">Контейнеры</link></para>
  <para><link linkend="gui_misc">Разное</link></para>
  <section id="gui_components">
    <title>Компоненты</title>
    <figure>
      <title>Диаграмма компонентов</title>
      <mediaobject>
        <imageobject>
          <imagedata align="center" fileref="img/Components_new.png"/>
        </imageobject>
      </mediaobject>
    </figure>
    <para><code>Component</code> − предок всех визуальных компонентов. Он содержит базовые атрибуты, позволяющие идентифицировать компонент и располагать его на экране.</para>
    <informaltable frame="none" pgwide="0">
      <tgroup cols="2" colsep="1">
        <colspec colnum="1" colname="c0" colwidth="1*"/>
        <colspec colnum="2" colname="c1" colwidth="4*"/>
        <tbody valign="middle">
          <row>
            <entry align="left">
              <emphasis role="bold">Buttons</emphasis>
            </entry>
            <entry/>
          </row>
          <row>
            <entry align="left">
              <link linkend="gui_Button">Button</link>
            </entry>
            <entry align="left">
              <mediaobject>
                <imageobject>
                  <imagedata fileref="img/Button.png"/>
                </imageobject>
              </mediaobject>
            </entry>
          </row>
          <row valign="middle">
            <entry align="left">
              <link linkend="gui_PopupButton">PopupButton</link>
            </entry>
            <entry align="left">
              <mediaobject>
                <imageobject>
                  <imagedata fileref="img/PopupButton.png"/>
                </imageobject>
              </mediaobject>
            </entry>
          </row>
          <row>
            <entry align="left">
              <link linkend="gui_LinkButton">LinkButton</link>
            </entry>
            <entry align="left">
              <mediaobject>
                <imageobject>
                  <imagedata fileref="img/LinkButton.png"/>
                </imageobject>
              </mediaobject>
            </entry>
          </row>
          <row>
            <entry align="left">
              <link linkend="gui_BulkEditor">BulkEditor</link>
            </entry>
            <entry align="left">
              <mediaobject>
                <imageobject>
                  <imagedata fileref="img/gui_bulkEdit.png"/>
                </imageobject>
              </mediaobject>
            </entry>
          </row>
          <row>
            <entry align="left">
              <link linkend="gui_RelatedEntities">RelatedEntities</link>
            </entry>
            <entry align="left">
              <mediaobject>
                <imageobject>
                  <imagedata fileref="img/gui_relatedEntities.png"/>
                </imageobject>
              </mediaobject>
            </entry>
          </row>
          <row>
            <entry/>
          </row>
          <row>
            <entry align="left">
              <emphasis role="bold">Text</emphasis>
            </entry>
            <entry/>
          </row>
          <row>
            <entry align="left">
              <link linkend="gui_Label">Label</link>
            </entry>
            <entry align="left">
              <mediaobject>
                <imageobject>
                  <imagedata fileref="img/gui_label.png"/>
                </imageobject>
              </mediaobject>
            </entry>
          </row>
          <row>
            <entry/>
          </row>
          <row>
            <entry align="left">
              <emphasis role="bold">Text inputs</emphasis>
            </entry>
            <entry/>
          </row>
          <row>
            <entry align="left">
              <link linkend="gui_TextField">TextField</link>
            </entry>
            <entry align="left">
              <mediaobject>
                <imageobject>
                  <imagedata fileref="img/gui_textField.png"/>
                </imageobject>
              </mediaobject>
            </entry>
          </row>
          <row>P<entry align="left">
              <link linkend="gui_PasswordField">PasswordField</link>
            </entry><entry align="left">
              <mediaobject>
                <imageobject>
                  <imagedata fileref="img/gui_PasswordField.png"/>
                </imageobject>
              </mediaobject>
            </entry></row>
          <row>M<entry align="left">
              <link linkend="gui_MaskedField">MaskedField</link>
            </entry><entry align="left">
              <mediaobject>
                <imageobject>
                  <imagedata fileref="img/gui_MaskedField.png"/>
                </imageobject>
              </mediaobject>
            </entry></row>
          <row>
            <entry align="left">
              <link linkend="gui_TextArea">TextArea</link>
            </entry>
            <entry align="left">
              <mediaobject>
                <imageobject>
                  <imagedata fileref="img/gui_TextArea.png"/>
                </imageobject>
              </mediaobject>
            </entry>
          </row>
          <row>
            <entry align="left">
              <link linkend="gui_RichTextArea">RichTextArea</link>
            </entry>
            <entry align="left">
              <mediaobject>
                <imageobject>
                  <imagedata fileref="img/gui_RichTextArea.png"/>
                </imageobject>
              </mediaobject>
            </entry>
          </row>
          <row>
            <entry/>
          </row>
          <row>
            <entry align="left">
              <emphasis role="bold">Date inputs</emphasis>
            </entry>
            <entry/>
          </row>
          <row>
            <entry align="left">
              <link linkend="gui_DateField">DateField</link>
            </entry>
            <entry align="left">
              <mediaobject>
                <imageobject>
                  <imagedata fileref="img/gui_dateField.png"/>
                </imageobject>
              </mediaobject>
            </entry>
          </row>
          <row>
            <entry align="left">
              <link linkend="gui_TimeField">TimeField</link>
            </entry>
            <entry align="left">
              <mediaobject>
                <imageobject>
                  <imagedata fileref="img/gui_timeField.png"/>
                </imageobject>
              </mediaobject>
            </entry>
          </row>
          <row>
            <entry/>
          </row>
          <row>
            <entry align="left">
              <emphasis role="bold">Selects</emphasis>
            </entry>
            <entry/>
          </row>
          <row>
            <entry align="left">
              <link linkend="gui_CheckBox">CheckBox</link>
            </entry>
            <entry align="left">
              <mediaobject>
                <imageobject>
                  <imagedata fileref="img/CheckBox.png"/>
                </imageobject>
              </mediaobject>
            </entry>
          </row>
          <row>
            <entry align="left">
              <link linkend="gui_OptionsGroup">OptionsGroup</link>
            </entry>
            <entry align="left">
              <mediaobject>
                <imageobject>
                  <imagedata fileref="img/gui_optionsGroup.png"/>
                </imageobject>
              </mediaobject>
            </entry>
          </row>
          <row>
            <entry align="left">
              <link linkend="gui_PickerField">PickerField</link>
            </entry>
            <entry align="left">
              <mediaobject>
                <imageobject>
                  <imagedata fileref="img/PickerField.png"/>
                </imageobject>
              </mediaobject>
            </entry>
          </row>
          <row>
            <entry align="left">
              <link linkend="gui_LookupField">LookupField</link>
            </entry>
            <entry align="left">
              <mediaobject>
                <imageobject>
                  <imagedata fileref="img/LookupField.png"/>
                </imageobject>
              </mediaobject>
            </entry>
          </row>
          <row>
            <entry align="left">
              <link linkend="gui_LookupPickerField">LookupPickerField</link>
            </entry>
            <entry align="left">
              <mediaobject>
                <imageobject>
                  <imagedata fileref="img/LookupPickerField.png"/>
                </imageobject>
              </mediaobject>
            </entry>
          </row>
          <row>
            <entry align="left">
              <link linkend="gui_SearchPickerField">SearchPickerField</link>
            </entry>
            <entry align="left">
              <mediaobject>
                <imageobject>
                  <imagedata fileref="img/gui_searchPickerField.png"/>
                </imageobject>
              </mediaobject>
            </entry>
          </row>
          <row>
            <entry align="left">
              <link linkend="gui_TwinColumn">TwinColumn</link>
            </entry>
            <entry align="left">
              <mediaobject>
                <imageobject>
                  <imagedata fileref="img/TwinColumn.png"/>
                </imageobject>
              </mediaobject>
            </entry>
          </row>
          <row>
            <entry/>
          </row>
          <row>
            <entry align="left">
              <emphasis role="bold">Uploads</emphasis>
            </entry>
            <entry/>
          </row>
          <row>
            <entry align="left">
              <link linkend="gui_FileUploadField">FileUploadField</link>
            </entry>
            <entry align="left">
              <mediaobject>
                <imageobject>
                  <imagedata fileref="img/Upload.png"/>
                </imageobject>
              </mediaobject>
            </entry>
          </row>
          <row>
            <entry align="left">
              <link linkend="gui_FileMultiUploadField">FileMultiUploadField</link>
            </entry>
            <entry align="left">
              <mediaobject>
                <imageobject>
                  <imagedata fileref="img/MultiUpload.png"/>
                </imageobject>
              </mediaobject>
            </entry>
          </row>
          <row>
            <entry/>
          </row>
          <row>
            <entry align="left">
              <emphasis role="bold">Tables and trees</emphasis>
            </entry>
            <entry/>
          </row>
          <row>
            <entry align="left">
              <link linkend="gui_Table">Table</link>
            </entry>
            <entry align="left">
              <mediaobject>
                <imageobject>
                  <imagedata fileref="img/gui_table.png"/>
                </imageobject>
              </mediaobject>
            </entry>
          </row>
          <row>
            <entry align="left">
              <link linkend="gui_GroupTable">GroupTable</link>
            </entry>
            <entry align="left">
              <mediaobject>
                <imageobject>
                  <imagedata fileref="img/gui_groupTable.png"/>
                </imageobject>
              </mediaobject>
            </entry>
          </row>
          <row>
            <entry align="left">
              <link linkend="gui_TreeTable">TreeTable</link>
            </entry>
            <entry align="left">
              <mediaobject>
                <imageobject>
                  <imagedata fileref="img/gui_treeTable.png"/>
                </imageobject>
              </mediaobject>
            </entry>
          </row>
          <row>
            <entry align="left">
              <link linkend="gui_Tree">Tree</link>
            </entry>
            <entry align="left">
              <mediaobject>
                <imageobject>
                  <imagedata fileref="img/gui_Tree.png"/>
                </imageobject>
              </mediaobject>
            </entry>
          </row>
          <row>
            <entry/>
          </row>
          <row>
            <entry align="left">
              <emphasis role="bold">Others</emphasis>
            </entry>
            <entry/>
          </row>
          <row>
            <entry align="left">
              <link linkend="gui_FieldGroup">FieldGroup</link>
            </entry>
            <entry align="left">
              <mediaobject>
                <imageobject>
                  <imagedata fileref="img/gui_fieldGroup.png"/>
                </imageobject>
              </mediaobject>
            </entry>
          </row>
          <row>
            <entry align="left">
              <link linkend="gui_TokenList">TokenList</link>
            </entry>
            <entry align="left">
              <mediaobject>
                <imageobject>
                  <imagedata fileref="img/gui_tokenList.png"/>
                </imageobject>
              </mediaobject>
            </entry>
          </row>
          <row>
            <entry align="left">
              <link linkend="gui_ProgressBar">ProgressBar</link>
            </entry>
            <entry align="left">
              <mediaobject>
                <imageobject>
                  <imagedata fileref="img/gui_progressBar.png"/>
                </imageobject>
              </mediaobject>
            </entry>
          </row>
          <row>
            <entry align="left">
              <link linkend="gui_Filter">Filter</link>
            </entry>
            <entry align="left">
              <mediaobject>
                <imageobject>
                  <imagedata fileref="img/gui_filter_mini.png"/>
                </imageobject>
              </mediaobject>
            </entry>
          </row>
          <row>
            <entry align="left">
              <link linkend="gui_Embedded">Embedded</link>
            </entry>
            <entry align="left">
              <mediaobject>
                <imageobject>
                  <imagedata fileref="img/cuba-64-01.png"/>
                </imageobject>
              </mediaobject>
            </entry>
          </row>
        </tbody>
      </tgroup>
    </informaltable>
    <section id="gui_Button">
      <title>Button</title>
      <para>Кнопка (<code>Button</code>) −  компонент,  обеспечивающий  выполнение действия при нажатии.</para>
      <para>XML-имя компонента: <sgmltag>button</sgmltag></para>
      <mediaobject>
        <imageobject>
          <imagedata align="center" fileref="img/gui_Button_dia.png"/>
        </imageobject>
      </mediaobject>
      <para>Компонент кнопки реализован для блоков <structname>Web Client</structname> и <structname>Desktop Client</structname>.</para>
      <para>Кнопка может содержать  текст или пиктограмму (или и то и другое). На рисунке ниже отображены разные виды кнопок.</para>
      <mediaobject>
        <imageobject>
          <imagedata align="center" fileref="img/gui_buttonTypes.png"/>
        </imageobject>
      </mediaobject>
      <para>Пример кнопки с названием, взятым из <link linkend="message_packs">пакета локализованных сообщений</link>, и с всплывающей подсказкой:<programlisting language="xml">&lt;button id=&quot;textButton&quot; caption=&quot;msg://someAction&quot; description=&quot;Press me&quot;/&gt;</programlisting></para>
      <para>Название кнопки задается с помощью атрибута <link linkend="gui_attr_basic_caption">caption</link>, всплывающая подсказка − с помощью атрибута <link linkend="gui_attr_basic_description">description</link>.</para>
      <para>Атрибут <link linkend="gui_attr_basic_icon">icon</link> указывает на местоположение пиктограммы. Подробную информацию о том, где следует располагать файлы пиктограмм, можно прочитать в  <xref linkend="gui_themes"/></para>
      <para>Пример создания кнопки с пиктограммой:<programlisting language="xml">&lt;button id=&quot;iconButton&quot; caption=&quot;&quot; icon=&quot;icons/save.png&quot;/&gt;</programlisting></para>
      <para id="gui_attr_button_invoke">Основная функция кнопки −  выполнить некоторое действие при нажатии на нее. Определить метод контроллера, который будет вызываться при нажатии на кнопку, можно с помощью атрибута <sgmltag>invoke</sgmltag>. Значением атрибута должно быть    имя  метода контроллера, удовлетворяющего следующим условиям:</para>
      <itemizedlist>
        <listitem>
          <para>Метод должен быть  <code>public</code>.</para>
        </listitem>
        <listitem>
          <para>Метод должен возвращать  <code>void</code>.</para>
        </listitem>
        <listitem>
          <para>Метод должен либо не иметь аргументов, либо иметь один аргумент типа <code>Component</code>. Если метод имеет аргумент <code>Component</code>, то при вызове в него будет передан экземпляр вызвавшей кнопки.</para>
        </listitem>
      </itemizedlist>
      <para>В качестве примера показано описание кнопки, вызывающей метод <code>someMethod:</code><programlisting language="xml">&lt;button invoke=&quot;someMethod&quot; caption=&quot;msg://someButton&quot;/&gt;</programlisting></para>
      <para>В контроллере экрана необходимо определить метод <code>someMethod</code>:<programlisting language="java">public void someMethod() {
//some actions
}</programlisting></para>
      <para id="gui_attr_button_action">Атрибут <sgmltag>invoke</sgmltag> игнорируется, если для кнопки задан атрибут <sgmltag>action</sgmltag>. Атрибут <sgmltag>action</sgmltag> содержит имя <link linkend="gui_Action">действия</link>, соответствующего данной кнопке.</para>
      <para>Пример кнопки с атрибутом <sgmltag>action</sgmltag>:<programlisting language="xml">&lt;actions&gt;
&lt;action id=&quot;someAction&quot; caption=&quot;msg://someAction&quot;/&gt;
&lt;/actions&gt;
&lt;layout&gt;
&lt;button action=&quot;someAction&quot;/&gt;</programlisting></para>
      <para>Кнопке можно назначить любое действие, имеющееся в каком-либо компоненте, реализующем интерфейс <code>Component.ActionsHolder</code> (это актуально для  <link linkend="gui_Table">Table</link>, <link linkend="gui_GroupTable">GroupTable</link>, <link linkend="gui_TreeTable">TreeTable</link>, <link linkend="gui_Tree">Tree</link>). Причем неважно, каким образом эти действия добавлены - декларативно в XML-дескрипторе или программно в контроллере. В любом случае для использования такого действия достаточно в атрибуте <code>action</code> указать через точку имя компонента и идентификатор нужного действия. Например, в следующем примере кнопке назначается действие <code>create</code> таблицы <code>coloursTable</code>:<programlisting language="xml">&lt;button action=&quot;coloursTable.create&quot;/&gt;</programlisting></para>
      <para>Действие для кнопки можно также создавать программно, в контроллере экрана, используя наследование от класса <link linkend="baseAction">AbstractAction</link>.</para>
      <para>Если для <code>Button</code> установлен экземпляр <code>Action</code>, то кнопка возьмет из него следующие свои свойства: <link linkend="gui_attr_basic_caption">caption</link>, <link linkend="gui_attr_basic_description">description</link>, <link linkend="gui_attr_basic_icon">icon</link>, <link linkend="gui_attr_basic_enable">enable</link>, <link linkend="gui_attr_basic_visible">visible</link>. Свойства <code>caption</code> и <code>description</code> будут проставлены из действия только в том случае, если они не установлены в самом <code>Button</code>. Остальные перечисленные свойства действия имеют безусловный приоритет над свойствами кнопки. Если свойства действия меняются уже после установки этого <code>Action</code> для <code>Button</code>, то соответственно меняться будут и свойства <code>Button</code>, то есть кнопка слушает изменение свойств действия. В этом случае меняется и свойства <code>caption</code> и <code>description</code>, причем даже если они изначально были назначены на саму кнопку.</para>
      <para>Атрибуты <sgmltag>button</sgmltag>:</para>
      <informaltable frame="none" pgwide="0" align="left">
        <tgroup cols="3" colsep="1" rowsep="1" align="left"><colspec colname="c1"/><colspec colname="c2"/><colspec colname="c3"/>c <tbody>
            <row>
              <entry align="left">action</entry>
              <entry align="left">
                <link linkend="gui_attr_basic_enable">enable</link>
              </entry>
              <entry align="left">
                <link linkend="gui_attr_basic_stylename">stylename</link>
              </entry>
            </row>
            <row>
              <entry>
                <link linkend="gui_attr_basic_align">align</link>
              </entry>
              <entry align="left">
                <link linkend="gui_attr_basic_icon">icon</link>
              </entry>
              <entry align="left">
                <link linkend="gui_attr_basic_visible">visible</link>
              </entry>
            </row>
            <row>
              <entry align="left">
                <link linkend="gui_attr_basic_caption">caption</link>
              </entry>
              <entry align="left">
                <link linkend="gui_attr_basic_id">id</link>
              </entry>
              <entry>
                <link linkend="gui_attr_basic_width">width</link>
              </entry>
            </row>
            <row>
              <entry align="left">
                <link linkend="gui_attr_basic_description">description</link>
              </entry>
              <entry align="left">invoke</entry>
            </row>
          </tbody></tgroup>
      </informaltable>
    </section>
    <section id="gui_BulkEditor">
      <title>Bulk Editor</title>
      <para><code>Bulk Editor</code> - компонент, позволяющий менять значения атрибутов сразу нескольких выбранных экземпляров сущностей. Компонент представляет собой кнопку, добавляющуюся к <link linkend="gui_Table">таблице</link> или <link linkend="gui_Tree">дереву</link> и при нажатии открывающую редактор сущностей. </para>
      <mediaobject>
        <imageobject>
          <imagedata align="center" fileref="img/gui_bulkEdit.png"/>
        </imageobject>
      </mediaobject>
      <para>XML-имя компонента: <code>bulkEditor</code></para>
      <mediaobject>
        <imageobject>
          <imagedata align="center" fileref="img/gui_BulkEditor_dia.png"/>
        </imageobject>
      </mediaobject>
      <para>Компонент реализован для блоков <structname>Web Client</structname> и <structname>Desktop Client</structname>.</para>
      <para>Для использования Bulk Editor у таблицы или дерева должен быть задан атрибут <code>multiselect=&quot;true&quot;</code>.</para>
      <para>Экран редактирования сущностей генерируется автоматически на основе заданного представления (содержащего только поля данной сущности, в том числе ссылки) и разрешений пользователя. Системные атрибуты в редакторе также не отображаются. </para>
      <para>Атрибуты сущности в редакторе сортируются по алфавиту. По умолчанию они пусты. При коммите экрана заданные на экране непустые значения атрибутов проставляются всем выбранным экземплярам сущности. </para>
      <para>Редактор позволяет удалить значение определенного поля в БД у всех выбранных сущностей, установив его в <code>null</code>. Для этого необходимо нажать на кнопку <inlinemediaobject>
          <imageobject>
            <imagedata fileref="img/gui_bulkEditorSetNullButton.png"/>
          </imageobject>
        </inlinemediaobject>  рядом с соответствующим полем. После этого поле становится нередактируемым.
        Разблокировать поле можно, нажав на кнопку эту же кнопку снова.</para>
      <mediaobject>
        <imageobject>
          <imagedata align="center" fileref="img/gui_invoiceBulkEdit.png"/>
        </imageobject>
      </mediaobject>
      <para>Пример описания компонента <code>bulkEditor</code> для таблицы:</para>
      <programlisting language="xml"><xi:include href="../../source/gui/bulkEditor_1.xml" encoding="UTF-8" parse="text"/></programlisting>
      <para id="gui_attr_bulkedit_for">Атрибут <code>for</code> является обязательным. В нем указывается идентификатор таблицы или дерева, в данном случае - <code>invoiceTable</code>.</para>
      <para id="gui_attr_bulkedit_exclude">Атрибут <code>exclude</code> может содержать регулярное выражения для явного
        исключения определенных полей из списка редактируемых. Например: <code>date|customer</code></para>
      <mediaobject>
        <imageobject>
          <imagedata align="center" fileref="img/gui_TableBulkEdit.png"/>
        </imageobject>
      </mediaobject>
      <para>Атрибуты <code>BulkEditor</code>:</para>
      <informaltable frame="none" pgwide="0" align="left">
        <tgroup cols="3" colsep="1" rowsep="1" align="left"><colspec colname="c1"/><colspec colname="c2"/><colspec colname="c3"/>c <tbody>
            <row><entry align="left">
                <link linkend="gui_attr_basic_align">align</link>
              </entry>editable<entry align="left">
                <link linkend="gui_attr_bulkedit_exclude">exclude</link>
              </entry><entry align="left">
                <link linkend="gui_attr_tokenList_lookup_openType">openType</link>
              </entry></row>
            <row>
              <entry>
                <link linkend="gui_attr_basic_caption">caption</link>
              </entry>
              <entry align="left">
                <link linkend="gui_attr_bulkedit_for">for</link>
              </entry>
              <entry>
                <link linkend="gui_attr_basic_stylename">stylename</link>
              </entry>
            </row>
            <row>
              <entry align="left">
                <link linkend="gui_attr_basic_description">description</link>
              </entry>
              <entry align="left">
                <link linkend="gui_attr_basic_icon">icon</link>
              </entry>
              <entry>
                <link linkend="gui_attr_basic_visible">visible</link>
              </entry>
            </row>
            <row>
              <entry align="left">
                <link linkend="gui_attr_basic_enable">enable</link>
              </entry>
              <entry align="left">
                <link linkend="gui_attr_basic_id">id</link>
              </entry>
              <entry>
                <link linkend="gui_attr_basic_width">width</link>
              </entry>
            </row>
          </tbody></tgroup>
      </informaltable>
    </section>
    <section id="gui_CheckBox">
      <title>CheckBox</title>
      <para>Флажок (<code>CheckBox</code>) − компонент, имеющий два состояния: выбран, не выбран.</para>
      <mediaobject>
        <imageobject>
          <imagedata align="center" fileref="img/CheckBox.png"/>
        </imageobject>
      </mediaobject>
      <para>XML-имя компонента: <sgmltag>checkBox</sgmltag>.</para>
      <mediaobject>
        <imageobject>
          <imagedata align="center" fileref="img/gui_checkBox_dia.png"/>
        </imageobject>
      </mediaobject>
      <para>Компонент <code>CheckBox</code> реализован для блоков <structname>Web Client</structname> и <structname>Desktop Client</structname>.</para>
      <para>Пример флажка с надписью, взятой из <link linkend="message_packs">пакета локализованных сообщений</link>:</para>
      <programlisting language="xml">&lt;checkBox id=&quot;accessField&quot; caption=&quot;msg://accessFieldCaption&quot;/&gt;</programlisting>
      <para>Сброс или установка флажка изменяет его значение: <code>Boolean.TRUE</code> или <code>Boolean.FALSE</code>. Значение может быть получено с помощью метода  <code>getValue()</code> и установлено с помощью метода <code>setValue()</code>. Если в <code>setValue()</code> передать <code>null</code>, то устанавливается значение <code>Boolean.FALSE</code> и флажок снимается.</para>
      <para>Изменение значения флажка, так же как и любого другого компонента, реализующего интерфейс <code>Field</code>, можно отслеживать с помощью слушателя <code>ValueListener</code>. Например:<programlisting language="java">@Inject
private CheckBox accessField;

@Override
public void init(Map&lt;String, Object&gt; params) {
accessField.addListener(new ValueListener&lt;Object&gt;() {
    @Override
    public void valueChanged(Object source, String property, Object prevValue, Object value) {
        if (Boolean.TRUE.equals(value)) {
            showNotification(&quot;set&quot;, NotificationType.HUMANIZED);
        } else {
            showNotification(&quot;not set&quot;, NotificationType.HUMANIZED);
        }
    }
});
}</programlisting></para>
      <para>Для создания флажка, связанного с данными, необходимо использовать атрибуты <link linkend="gui_attr_basic_datasource">datasource</link> и <link linkend="gui_attr_basic_property">property</link>.<programlisting language="xml">&lt;dsContext&gt;
&lt;datasource id=&quot;customerDs&quot; class=&quot;com.sample.sales.entity.Customer&quot; view=&quot;_local&quot;/&gt;
&lt;/dsContext&gt;
&lt;layout&gt;
&lt;checkBox datasource=&quot;customerDs&quot; property=&quot;active&quot;/&gt;</programlisting></para>
      <para>Как видно из примера, в экране описывается <link linkend="datasources">источник данных</link> <code>customerDs</code> для некоторой сущности Покупатель (<code>Customer</code>), имеющей атрибут <code>active</code>. В компоненте <code>checkBox</code> в атрибуте <code>datasource</code> указывается ссылка на источник данных, а в атрибуте <code>property</code> − название атрибута сущности, значение которого должно быть отображено флажком. Атрибут должен быть типа <code>Boolean</code>. Значением атрибута может быть <code>null</code>, при этом флажок снимается.</para>
      <para>Атрибуты <sgmltag>checkBox</sgmltag>:</para>
      <informaltable frame="none" pgwide="0" align="left">
        <tgroup cols="3" colsep="1" rowsep="1" align="left"><colspec colname="c1"/><colspec colname="c2"/><colspec colname="c3"/>c <tbody>
            <row><entry align="left">
                <link linkend="gui_attr_basic_align">align</link>
              </entry>editable<entry align="left">
                <link linkend="gui_attr_basic_editable">editable</link>
              </entry><entry align="left">
                <link linkend="gui_attr_basic_property">property</link>
              </entry></row>
            <row>
              <entry>
                <link linkend="gui_attr_basic_caption">caption</link>
              </entry>
              <entry align="left">
                <link linkend="gui_attr_basic_enable">enable</link>
              </entry>
              <entry>
                <link linkend="gui_attr_basic_stylename">stylename</link>
              </entry>
            </row>
            <row>
              <entry align="left">
                <link linkend="gui_attr_basic_datasource">datasource</link>
              </entry>
              <entry align="left">
                <link linkend="gui_attr_basic_height">height</link>
              </entry>
              <entry>
                <link linkend="gui_attr_basic_visible">visible</link>
              </entry>
            </row>
            <row>
              <entry align="left">
                <link linkend="gui_attr_basic_description">description</link>
              </entry>
              <entry align="left">
                <link linkend="gui_attr_basic_id">id</link>
              </entry>
              <entry>
                <link linkend="gui_attr_basic_width">width</link>
              </entry>
            </row>
          </tbody></tgroup>
      </informaltable>
    </section>
    <section id="gui_DateField">
      <title>DateField</title>
      <para>Поле для отображения и ввода даты и времени. Представляет собой поле  даты, внутри которого имеется кнопка с выпадающим календарем, а правее находится поле для ввода времени.</para>
      <mediaobject>
        <imageobject>
          <imagedata align="center" fileref="img/gui_dateFieldSimple.png"/>
        </imageobject>
      </mediaobject>
      <para>XML-имя компонента: <sgmltag>dateField</sgmltag>.</para>
      <mediaobject>
        <imageobject>
          <imagedata align="center" fileref="img/gui_dateField_dia.png"/>
        </imageobject>
      </mediaobject>
      <para>Компонент <code>DateField</code> реализован для блоков <structname>Web Client</structname> и <structname>Desktop Client</structname>.<itemizedlist>
          <listitem>
            <para>Для создания  поля даты, связанного с данными, необходимо использовать атрибуты <link linkend="gui_attr_basic_datasource">datasource</link> и <link linkend="gui_attr_basic_property">property</link>:</para>
            <programlisting language="xml">&lt;dsContext&gt;
&lt;datasource id=&quot;orderDs&quot; class=&quot;com.sample.sales.entity.Order&quot; view=&quot;_local&quot;/&gt;
&lt;/dsContext&gt;
&lt;layout&gt;
&lt;dateField datasource=&quot;orderDs&quot; property=&quot;date&quot;/&gt;</programlisting>
            <para>Как видно из примера, в экране описывается источник данных <literal>orderDs</literal> для некоторой сущности Заказ (<code>Order</code>), имеющей атрибут <code>date</code>. В компоненте ввода даты   в атрибуте <link linkend="gui_attr_basic_datasource">datasource</link> указывается ссылка на источник данных, а в атрибуте <link linkend="gui_attr_basic_property">property</link> − название атрибута сущности, значение которого должно быть отображено в  поле.</para>
          </listitem>
          <listitem>
            <para>Если поле связано с атрибутом сущности, то оно автоматически принимает соответствующий вид:<itemizedlist>
                <listitem>
                  <para>Если атрибут типа <code>java.sql.Date</code> или указана аннотация <code>@Temporal(TemporalType.DATE)</code>, то поле времени не отображается. Формат даты определяется <link linkend="datatype">типом данных</link> <code>date</code> и задается в <link linkend="main_message_pack">главном пакете локализованных сообщений</link> в ключе <code>dateFormat</code>.</para>
                </listitem>
                <listitem>
                  <para>В противном случае отображается также поле времени с часами и минутами. Формат времени определяется <link linkend="datatype">типом данных</link> <code>time</code> и задается в <link linkend="main_message_pack">главном пакете локализованных сообщений</link> в ключе <code>timeFormat</code>.</para>
                </listitem>
              </itemizedlist></para>
          </listitem>
          <listitem>
            <para id="gui_attr_dateField_dateFormat">Изменить формат представления даты и времени можно с помощью атрибута <sgmltag>dateFormat</sgmltag>. Значением атрибута может быть либо сама строка формата, либо ключ в пакете сообщений (если значение начинается с <code>msg://</code>).</para>
            <para>Формат задается по правилам класса <code>SimpleDateFormat</code> (<ulink url="http://docs.oracle.com/javase/7/docs/api/java/text/SimpleDateFormat.html">http://docs.oracle.com/javase/7/docs/api/java/text/SimpleDateFormat.html</ulink>). Если в формате отсутствуют символы <code>H</code> или <code>h</code>, то поле времени не выводится.</para>
            <programlisting language="xml">&lt;dateField dateFormat=&quot;MM/yy&quot; caption=&quot;msg://monthOnlyDateField&quot;/&gt;</programlisting>
            <mediaobject>
              <imageobject>
                <imagedata align="center" fileref="img/gui_dateField_format.png"/>
              </imageobject>
            </mediaobject>
          </listitem>
          <listitem>
              <para>Если для пользователя методом <code>setTimeZone()</code> задан <link linkend="timeZone">часовой пояс</link>, то <code>DateField</code> может преобразовывать
                  значения типа timestamp между часовыми поясами сервера и пользователя. Если компонент привязан к атрибуту типа timestamp, часовой пояс автоматически берется
                  из текущей <link linkend="userSession">пользовательской сессии</link>. Если нет, то можно вызвать метод <code>setTimeZone()</code> в контроллере экрана, чтобы
                  <code>DateField</code> выполнил необходимые преобразования.</para>
          </listitem>
          <listitem>
            <para id="gui_attr_dateField_resolution">Точность представления даты и времени можно определить с помощью  атрибута <sgmltag>resolution</sgmltag>.  Значение атрибута должно соответствовать перечислению <code>DateField.Resolution</code> − <literal>SEC</literal>, <literal>MIN</literal>, <literal>HOUR</literal>, <literal>DAY</literal>, <literal>MONTH</literal>, <literal>YEAR</literal>. По умолчанию - <code>MIN</code>, то есть до минут.</para>
            <para>Если <code>resolution=&quot;DAY&quot;</code> и не указан атрибут <sgmltag>dateFormat</sgmltag>, то в качестве формата будет взят формат, указанный в <link linkend="main_message_pack">главном пакете сообщений</link> с ключом <sgmltag>dateFormat</sgmltag>.</para>
            <para>Если <code>resolution=&quot;MIN&quot;</code> и не указан атрибут <sgmltag>dateFormat</sgmltag>, то в качестве формата будет взят формат, указанный в <link linkend="main_message_pack">главном пакете сообщений</link> с ключом <sgmltag>dateTimeFormat</sgmltag>.</para>
            <para>Ниже показано определения поля для ввода даты с точностью до месяца.</para>
            <programlisting language="xml">&lt;dateField resolution=&quot;MONTH&quot; caption=&quot;msg://monthOnlyDateField&quot;/&gt;</programlisting>
            <mediaobject>
              <imageobject>
                <imagedata align="center" fileref="img/gui_dateField_resolution.png"/>
              </imageobject>
            </mediaobject>
          </listitem>
        </itemizedlist>.</para>
      <para>Атрибуты <sgmltag>dateField</sgmltag>:</para>
      <informaltable frame="none" pgwide="0" align="left">
        <tgroup cols="4" colsep="1" rowsep="1" align="left"><colspec colname="c1"/><colspec colname="c2"/><colspec colname="c3"/><colspec colname="c4"/>c <tbody>
            <row><entry align="left">
                <link linkend="gui_attr_basic_align">align</link>
              </entry>editable<entry align="left">
                <link linkend="gui_attr_basic_description">description</link>
              </entry><entry align="left">
                <link linkend="gui_attr_basic_id">id</link>
              </entry><entry>
                <link linkend="gui_attr_dateField_resolution">resolution</link>
              </entry></row>
            <row>
              <entry>
                <link linkend="gui_attr_basic_caption">caption</link>
              </entry>
              <entry align="left">
                <link linkend="gui_attr_basic_editable">editable</link>
              </entry>
              <entry>
                <link linkend="gui_attr_basic_property">property</link>
              </entry>
              <entry>
                <link linkend="gui_attr_basic_stylename">stylename</link>
              </entry>
            </row>
            <row>
              <entry align="left">
                <link linkend="gui_attr_basic_datasource">datasource</link>
              </entry>
              <entry align="left">
                <link linkend="gui_attr_basic_enable">enable</link>
              </entry>
              <entry>
                <link linkend="gui_attr_basic_required">required</link>
              </entry>
              <entry>
                <link linkend="gui_attr_basic_visible">visible</link>
              </entry>
            </row>
            <row>
              <entry align="left">
                <link linkend="gui_attr_dateField_dateFormat">dateFormat</link>
              </entry>
              <entry align="left">
                <link linkend="gui_attr_basic_height">height</link>
              </entry>
              <entry>
                <link linkend="gui_attr_basic_requiredMessage">requiredMessage</link>
              </entry>
              <entry>
                <link linkend="gui_attr_basic_width">width</link>
              </entry>
            </row>
          </tbody></tgroup>
      </informaltable>
      <para>Элементы <sgmltag>dateField</sgmltag>:</para>
      <informaltable frame="none" pgwide="0" align="left">
        <tgroup cols="1" colsep="1" rowsep="1" align="left">
          <colspec colname="c1"/>
          <tbody>
            <row>
              <entry>
                <link linkend="gui_validator">validator</link>
              </entry>
            </row>
          </tbody>
        </tgroup>
      </informaltable>
    </section>
    <section id="gui_Embedded">
      <title>Embedded</title>
      <para>Компонент <code>Embedded</code> предназначен для вывода изображений и встраивания в экран произвольных веб-страниц.</para>
      <para>XML-имя компонента: <sgmltag>embedded</sgmltag></para>
      <mediaobject>
        <imageobject>
          <imagedata align="center" fileref="img/gui_Embedded_dia.png"/>
        </imageobject>
      </mediaobject>
      <para>Компонент реализован для блоков <structname>Web Client</structname> и <structname>Desktop Client</structname>. В десктоп-клиенте поддерживается только вывод изображений.</para>
      <para>Рассмотрим пример использования компонента для вывода изображения из файла, сохраненного в <link linkend="file_storage">FileStorage</link>. <itemizedlist>
          <listitem>
            <para>Объявляем компонент в XML-дескрипторе экрана:<programlisting language="xml">&lt;groupBox caption=&quot;Embedded&quot; spacing=&quot;true&quot;
      height=&quot;250px&quot; width=&quot;250px&quot; expand=&quot;embedded&quot;&gt;
&lt;embedded id=&quot;embedded&quot; width=&quot;100%&quot;
          align=&quot;MIDDLE_CENTER&quot;/&gt;
&lt;/groupBox&gt;</programlisting></para>
          </listitem>
          <listitem>
            <para>В контроллере экрана инжектируем компонент и интерфейс <code>FileStorageService</code>. Затем в методе <code>init()</code> получаем из параметров экрана переданный из вызывающего кода <code>FileDescriptor</code>, загружаем соответствующий файл в байтовый массив, создаем для него <code>ByteArrayInputStream</code> и передаем в метод <code>setSource()</code> компонента:<programlisting language="java">@Inject
private Embedded embedded;

@Inject
private FileStorageService fileStorageService;

@Override
public void init(Map&lt;String, Object&gt; params) {
FileDescriptor imageFile = (FileDescriptor) params.get(&quot;imageFile&quot;);

byte[] bytes = null;
if (imageFile != null) {
    try {
        bytes = fileStorageService.loadFile(imageFile);
    } catch (FileStorageException e) {
        showNotification(&quot;Unable to load image file&quot;, NotificationType.HUMANIZED);
    }
}
if (bytes != null) {
    embedded.setSource(imageFile.getName(), new ByteArrayInputStream(bytes));
    embedded.setType(Embedded.Type.IMAGE);
} else {
    embedded.setVisible(false);
}
}</programlisting></para>
          </listitem>
        </itemizedlist></para>
      <para>Веб-клиент позволяет выводить изображения из произвольных файлов на диске, доступных блоку Web Client. Для этого нужно определить каталог ресурсных файлов в свойстве приложения <link linkend="cuba.web.resourcesRoot">cuba.web.resourcesRoot</link>, и указать для компонента <code>Embedded</code> имя файла внутри этого каталога:<programlisting language="java">embedded.setSource(&quot;my-logo.png&quot;);</programlisting></para>
      <para>Для встраивания в экран веб-клиента внешней веб-страницы необходимо передать компоненту URL:<programlisting language="java">try {
embedded.setSource(new URL(&quot;http://www.cuba-platform.com&quot;));
} catch (MalformedURLException e) {
throw new RuntimeException(e);
}</programlisting></para>
      <para>Атрибуты <code>embedded</code>:</para>
      <informaltable frame="none" pgwide="0" align="left">
        <tgroup cols="3" colsep="1" rowsep="1" align="left"><colspec colname="c1"/><colspec colname="c2"/><colspec colname="c3"/>c <tbody>
            <row><entry align="left">
                <link linkend="gui_attr_basic_align">align</link>
              </entry>editable<entry align="left">
                <link linkend="gui_attr_basic_id">id</link>
              </entry></row>
            <row>
              <entry>
                <link linkend="gui_attr_basic_height">height</link>
              </entry>
              <entry align="left">
                <link linkend="gui_attr_basic_visible">visible</link>
              </entry>
            </row>
            <row>
              <entry align="left">
                <link linkend="gui_attr_basic_width">width</link>
              </entry>
            </row>
          </tbody></tgroup>
      </informaltable>
    </section>
    <section id="gui_FieldGroup">
      <title>FieldGroup</title>
      <para>Компонент <code>FieldGroup</code> предназначен для совместного отображения и редактирования нескольких атрибутов сущностей. </para>
      <mediaobject>
        <imageobject>
          <imagedata align="center" fileref="img/gui_fieldGroup.png"/>
        </imageobject>
      </mediaobject>
      <para>XML-имя компонента: <sgmltag>fieldGroup</sgmltag></para>
      <mediaobject>
        <imageobject>
          <imagedata align="center" fileref="img/gui_FieldGroup_dia.png"/>
        </imageobject>
      </mediaobject>
      <para>Компонент реализован для блоков <structname>Web Client</structname> и <structname>Desktop Client</structname>.</para>
      <para>Пример описания группы полей в XML-дескрипторе экрана:<programlisting language="xml">&lt;dsContext&gt;
&lt;datasource id=&quot;orderDs&quot;
            class=&quot;com.sample.sales.entity.Order&quot;
            view=&quot;orderWithCustomer&quot;&gt;
&lt;/datasource&gt;
&lt;/dsContext&gt;
&lt;layout&gt;
&lt;fieldGroup id=&quot;orderFieldGroup&quot; datasource=&quot;orderDs&quot; width=&quot;250px&quot;&gt;
    &lt;field id=&quot;date&quot;/&gt;
    &lt;field id=&quot;customer&quot;/&gt;
    &lt;field id=&quot;amount&quot;/&gt;
&lt;/fieldGroup&gt;</programlisting></para>
      <para>Здесь в элементе <code>dsContext</code> определен <link linkend="datasources">источник данных</link> <code>datasource</code>, который содержит один экземпляр  сущности <code>Order</code>. Для компонента <code>fieldGroup</code> в атрибуте <code>datasource</code> указывается используемый источник данных, а в элементах <code>field</code> - какие атрибуты сущности, содержащейся в источнике данных, необходимо отобразить.</para>
      <para>Элементы <code>fieldGroup</code>:<itemizedlist>
          <listitem>
            <para><code>column</code> - необязательный элемент, позволяющий располагать поля в несколько колонок. Для этого элементы <code>field</code> должны находиться не непосредственно внутри <code>fieldGroup</code>, а внутри своего <code>column</code>. Например:<programlisting language="xml">&lt;fieldGroup id=&quot;orderFieldGroup&quot; datasource=&quot;orderDs&quot; width=&quot;100%&quot;&gt;
&lt;column width=&quot;250px&quot;&gt;
    &lt;field id=&quot;num&quot;/&gt;
    &lt;field id=&quot;date&quot;/&gt;
    &lt;field id=&quot;amount&quot;/&gt;
&lt;/column&gt;
&lt;column width=&quot;400px&quot;&gt;
    &lt;field id=&quot;customer&quot;/&gt;
    &lt;field id=&quot;info&quot;/&gt;
&lt;/column&gt;
&lt;/fieldGroup&gt;</programlisting></para>
            <para>В данном случае поля будут расположены в две колонки, причем в первой колонке все поля будут шириной <code>250px</code>, а во второй - <code>400px</code>.</para>
            <para>Элемент <code>column</code> может иметь следующие атрибуты:<itemizedlist>
                <listitem id="gui_attr_fieldGroup_width">
                  <para><code>width</code> - задает ширину полей данной колонки. По умолчанию ширина полей - <code>200px</code>. В данном атрибуте ширина может быть задана как в пикселах, так и в процентах от общего размера колонки по горизонтали.</para>
                </listitem>
                <listitem id="gui_attr_fieldGroup_flex">
                  <para><code>flex</code> - число, задающее степень изменения общего размера  данной колонки по горизонтали относительно других колонок при изменении ширины всего компонента <code>fieldGroup</code>. Например, можно задать одной колонке <code>flex=1</code> а другой <code>flex=3</code>.</para>
                </listitem>
                <listitem>
                  <para><code>id</code> - необязательный идентификатор колонки, позволяющий ссылаться на нее в случае <link linkend="screen_extension">расширении экрана</link>.</para>
                </listitem>
              </itemizedlist></para>
          </listitem>
          <listitem>
            <para><code>field</code> - основной элемент компонента, описывает одно поле компонента. </para>
            <para>Атрибуты элемента <code>field</code>:<itemizedlist>
                <listitem id="gui_attr_fieldGroup_field_id">
                  <para><code>id</code> - обязательный атрибут, должен содержать либо название атрибута сущности, выводимого в поле, либо произвольный уникальный идентификатор программно определяемого поля. В последнем случае элемент <code>field</code> должен иметь также атрибут <code>custom=&quot;true&quot;</code> (см. далее).</para>
                </listitem>
                <listitem id="gui_attr_fieldGroup_field_caption">
                  <para><code>caption</code> − позволяет задать  заголовок поля. Если не задан, будет отображено <link linkend="entity_localization">локализованное название атрибута</link> сущности.</para>
                </listitem>
                <listitem>
                  <para><code>visible</code> − позволяет  скрыть поле вместе с заголовком.</para>
                </listitem>
                <listitem id="gui_attr_fieldGroup_field_datasource">
                  <para><code>datasource</code> − позволяет задать для данного поля <link linkend="datasources">источник данных</link>, отличный от заданного для всего компонента <code>fieldGroup</code>. Таким образом в группе полей могут отображаться атрибуты разных сущностей.</para>
                </listitem>
                <listitem>
                  <para><code>optionsDatasource</code> − задает имя <link linkend="datasources">источника данных</link>, используемого для формирования списка опций. Данный атрибут можно задать для поля, связанного со ссылочным атрибутом сущности. По умолчанию выбор связанной сущности производится через экран выбора, а если <code>optionsDatasource</code> указан, то связанную сущность можно выбирать из выпадающего списка опций. Фактически указание <code>optionsDatasource</code> приводит к тому, что вместо компонента <link linkend="gui_PickerField">PickerField</link> в поле используется <link linkend="gui_LookupPickerField">LookupPickerField</link>. </para>
                </listitem>
                <listitem>
                  <para><code>width</code> − позволяет задать  ширину поля без учета заголовка. По умолчанию ширина поля - <code>200px</code>. Ширина может быть задана как в пикселах, так и в процентах от общего размера колонки по горизонтали. Для указания ширины всех полей одновременно можно использовать атрибут <code>width</code> элемента <code>column</code>, описанный выше.</para>
                </listitem>
                <listitem id="gui_attr_fieldGroup_field_custom">
                  <para><code>custom</code> - установка этого атрибута в <code>true</code> позволяет задать собственное представление поля, или говорит о том, что идентификатор поля не ссылается на атрибут сущности, и компонент, находящийся в поле, будет задан программно с помощью метода <code>addCustomField()</code> компонента <code>FieldGroup</code> (см. ниже). </para>
                </listitem>
                <listitem id = "gui_attr_fieldGroup_link">
                  <para><code>link</code> - установка атрибута в <code>true</code> позволяет отобразить вместо поля выбора сущности ссылку на экран просмотра экземпляра сущности (поддерживается только для <structname>Web Client</structname>). Такое поведение может быть необходимо, если требуется дать пользователю возможность просматривать связанную сущность, но саму связь он менять не должен.</para>
                </listitem>
                <listitem id = "gui_attr_fieldGroup_linkScreen">
                   <para><code>linkScreen</code> - позволяет указать идентификатор экрана, который будет открыт по нажатию на ссылку, включенную свойством <code>link</code>.</para>
                </listitem>
                <listitem id = "gui_attr_fieldGroup_linkScreenOpenType">
                    <para><code>linkScreenOpenType</code> - задает режим открытия экрана редактирования (<code>THIS_TAB</code>, <code>NEW_TAB</code> или <code>DIALOG</code>).</para>
                </listitem>
                <listitem id = "gui_attr_fieldGroup_linkInvoke">
                    <para><code>linkInvoke</code> - позволяет заменить открытие окна на вызов метода контроллера.</para>
                </listitem>
            </itemizedlist></para>
            <para>Следующие атрибуты элемента <code>field</code> можно применять в зависимости от типа атрибута сущности, отображаемого полем:<itemizedlist>
                <listitem>
                  <para>Если для текстового атрибута сущности задать значение атрибута <sgmltag>mask</sgmltag>, то в поле вместо компонента <link linkend="gui_TextField">TextField</link> будет использоваться компонент <link linkend="gui_MaskedField">MaskedField</link> с соотвествующей маской. В этом случае можно также задать атрибут <code>valueMode</code>.</para>
                </listitem>
                <listitem id="gui_attr_fieldGroup_field_rows">
                  <para>Если для текстового атрибута сущности задать значение атрибута <sgmltag>rows</sgmltag>, то в поле вместо компонента <link linkend="gui_TextField">TextField</link> будет использоваться компонент <link linkend="gui_TextArea">TextArea</link> с соответствующим количеством строк. В этом случае можно также задать атрибут <code>cols</code>.</para>
                </listitem>
                <listitem>
                  <para>Для текстового атрибута сущности можно задать атрибут <code>maxLength</code> аналогично описанному для <link linkend="gui_TextField">TextField</link>.</para>
                </listitem>
                <listitem>
                  <para>Для атрибута сущности типа <code>date</code> или <code>dateTime</code> можно задать атрибуты <code>dateFormat</code> и <code>resolution</code> для параметризации находящегося в поле компонента <link linkend="gui_DateField">DateField</link>.</para>
                </listitem>
                <listitem>
                  <para>Для атрибута сущности типа <code>time</code> можно задать атрибут <code>showSeconds</code> для параметризации находящегося в поле компонента <link linkend="gui_TimeField">TimeField</link>.</para>
                </listitem>
              </itemizedlist></para>
          </listitem>
        </itemizedlist></para>
      <para>Атрибуты <code>fieldGroup</code>:<itemizedlist>
          <listitem id="gui_attr_fieldGroup_border">
            <para>Атрибут <sgmltag>border</sgmltag> может принимать значение <literal>hidden</literal> или <literal>visible</literal>. По умолчанию - <code>hidden</code>. При установке  в значение <literal>visible</literal> компонент <sgmltag>fieldGroup</sgmltag> выделяется рамкой. В веб-реализации компонента отображение рамки осуществляется добавлением CSS-класса <code>cuba-fieldgroup-border</code>. </para>
          </listitem>
        </itemizedlist></para>
      <para>Методы интерфейса <code>FieldGroup</code>:<itemizedlist>
          <listitem>
            <para>Метод <code>addCustomField()</code> используется вместе с атрибутом <code>custom=&quot;true&quot;</code> элемента <code>field</code> и позволяет задать собственное представление поля. Он принимает два параметра: идентификатор поля, заданный в атрибуте <code>id</code> элемента <code>field</code>,  и реализацию интерфейса <code>FieldGroup.CustomFieldGenerator</code>.</para>
            <para>Метод <code>generateField()</code> интерфейса <code>CustomFieldGenerator</code> вызывается компонентом <code>FieldGroup</code>, и в него передается <link linkend="datasources">источник данных</link> и идентификатор поля, для которого зарегистрирован данный генератор. Метод должен вернуть визуальный компонент (или контейнер), который и будет отображен в поле.</para>
            <para>Пример использования:<programlisting language="java">@Inject
protected FieldGroup fieldGroup;

@Inject
protected ComponentsFactory componentsFactory;

@Override
public void init(Map&lt;String, Object&gt; params) {
fieldGroup.addCustomField(&quot;password&quot;, new FieldGroup.CustomFieldGenerator() {
    @Override
    public Component generateField(Datasource datasource, String propertyId) {
        PasswordField passwordField = componentsFactory.createComponent(PasswordField.NAME);
        passwordField.setDatasource(datasource, propertyId);
        return passwordField;
    }
});
}</programlisting></para>
          </listitem>
          <listitem>
            <para>Метод <code>getFieldComponent()</code> возвращает визуальный компонент, находящийся в поле с указанным идентификатором. Это может потребоваться для дополнительной параметризации компонента, недоступной через атрибуты XML-элемента <code>field</code>, описанные выше. </para>
            <para>Вместо явного вызова <code>getFieldComponent()</code> для получения ссылки на компонент поля в контроллере экрана можно использовать <link linkend="screen_controller_injection">инжекцию</link>. Для этого следует использовать аннотацию <code>@Named</code> с указанием идентификатора самого <code>fieldGroup</code>, и через точку - идентификатора поля. </para>
            <para>Например, следующим образом в поле выбора связанной сущности  можно добавить действие открытия экземпляра и убрать действие очистки поля:<programlisting language="xml">&lt;fieldGroup id=&quot;orderFieldGroup&quot; datasource=&quot;orderDs&quot;&gt;
&lt;field id=&quot;date&quot;/&gt;
&lt;field id=&quot;customer&quot;/&gt;
&lt;field id=&quot;amount&quot;/&gt;
&lt;/fieldGroup&gt;</programlisting><programlisting language="java">@Named(&quot;orderFieldGroup.customer&quot;)
protected PickerField customerField;

@Override
public void init(Map&lt;String, Object&gt; params) {
customerField.addOpenAction();
customerField.removeAction(customerField.getAction(PickerField.ClearAction.NAME));
}</programlisting></para>
            <para>Для использования метода <code>getFieldComponent()</code> или инжекции компонентов полей необходимо знать тип компонента, находящегося в поле. В следующей таблице приведено соответствие типов атрибутов сущностей и создаваемых для них компонентов:<informaltable frame="all">
                <tgroup cols="3">
                  <colspec colnum="1" colname="c1" align="left"/>
                  <colspec colnum="2" colname="c2" align="left"/>
                  <colspec colnum="3" colname="c3" align="left"/>
                  <thead>
                    <row>
                      <entry>Тип атрибута сущности</entry>
                      <entry>Дополнительные условия</entry>
                      <entry>Тип компонента поля</entry>
                    </row>
                  </thead>
                  <tbody>
                    <row>
                      <entry morerows="1">Связанная сущность</entry>
                      <entry>Задан атрибут <code> optionsDatasource</code></entry>
                      <entry>
                        <link linkend="gui_LookupPickerField">LookupPickerField</link>
                      </entry>
                    </row>
                    <row>
                      <entry/>
                      <entry>
                        <link linkend="gui_PickerField">PickerField</link>
                      </entry>
                    </row>
                    <row>
                      <entry>Перечисление (<code>enum</code>)</entry>
                      <entry/>
                      <entry>
                        <link linkend="gui_LookupField">LookupField</link>
                      </entry>
                    </row>
                    <row>
                      <entry morerows="2">
                        <code>string</code>
                      </entry>
                      <entry>Задан атрибут <code>mask</code></entry>
                      <entry>
                        <link linkend="gui_MaskedField">MaskedField</link>
                      </entry>
                    </row>
                    <row>
                      <entry>Задан атрибут <code>rows</code></entry>
                      <entry>
                        <link linkend="gui_TextArea">TextArea</link>
                      </entry>
                    </row>
                    <row>
                      <entry/>
                      <entry>
                        <link linkend="gui_TextField">TextField</link>
                      </entry>
                    </row>
                    <row>
                      <entry>
                        <code>boolean</code>
                      </entry>
                      <entry/>
                      <entry>
                        <link linkend="gui_CheckBox">CheckBox</link>
                      </entry>
                    </row>
                    <row>
                      <entry><code>date</code>, <code>dateTime</code></entry>
                      <entry/>
                      <entry>
                        <link linkend="gui_DateField">DateField</link>
                      </entry>
                    </row>
                    <row>
                      <entry>
                        <code>time</code>
                      </entry>
                      <entry/>
                      <entry>
                        <link linkend="gui_TimeField">TimeField</link>
                      </entry>
                    </row>
                    <row>
                      <entry><code>int</code>, <code>long</code>, <code>double</code>, <code>decimal</code></entry>
                      <entry/>
                      <entry>
                        <link linkend="gui_TextField">TextField</link>
                      </entry>
                    </row>
                  </tbody>
                </tgroup>
              </informaltable></para>
          </listitem>
        </itemizedlist></para>
      <para>Все атрибуты <sgmltag>fieldGroup</sgmltag>:</para>
      <informaltable frame="none" pgwide="0" align="left">
        <tgroup cols="3" colsep="1" rowsep="1" align="left"><colspec colname="c1"/><colspec colname="c2"/><colspec colname="c3"/>c <tbody>
            <row><entry align="left">
                <link linkend="gui_attr_fieldGroup_border">border</link>
              </entry>editable<entry align="left">
                <link linkend="gui_attr_basic_enable">enable</link>
              </entry><entry align="left">
                <link linkend="gui_attr_basic_visible">visible</link>
              </entry></row>
            <row>
              <entry>
                <link linkend="gui_attr_basic_caption">caption</link>
              </entry>
              <entry align="left">
                <link linkend="gui_attr_basic_height">height</link>
              </entry>
              <entry>
                <link linkend="gui_attr_basic_width">width</link>
              </entry>
            </row>
            <row>
              <entry align="left">
                <link linkend="gui_attr_basic_datasource">datasource</link>
              </entry>
              <entry align="left">
                <link linkend="gui_attr_basic_id">id</link>
              </entry>
            </row>
            <row>
              <entry align="left">
                <link linkend="gui_attr_basic_editable">editable</link>
              </entry>
              <entry align="left">
                <link linkend="gui_attr_basic_stylename">stylename</link>
              </entry>
            </row>
          </tbody></tgroup>
      </informaltable>
      <para>Все атрибуты <code>field</code>:</para>
      <informaltable frame="none" pgwide="0" align="left">
        <tgroup cols="4" colsep="1" rowsep="1" align="left"><colspec colname="c1"/><colspec colname="c2"/><colspec colname="c3"/><colspec colname="c4"/>c <tbody>
            <row><entry align="left">
                <link linkend="gui_attr_fieldGroup_field_caption">caption</link>
              </entry>editable<entry align="left">
                <link linkend="gui_attr_basic_description">description</link>
              </entry><entry>
                <link linkend="gui_attr_fieldGroup_linkScreen">linkScreen</link>
              </entry><entry>
                <link linkend="gui_attr_dateField_resolution">resolution</link>
              </entry></row>
            <row>
              <entry>
                <link linkend="gui_attr_basic_captionProperty">captionProperty</link>
              </entry>
              <entry align="left">
                <link linkend="gui_attr_basic_editable">editable</link>
              </entry>
              <entry>
                <link linkend="gui_attr_fieldGroup_linkScreenOpenType">linkScreenOpenType</link>
              </entry>
              <entry>
                <link linkend="gui_attr_fieldGroup_field_rows">rows</link>
              </entry>
            </row>
            <row>
              <entry align="left">
                <link linkend="gui_attr_textArea_cols_rows">cols</link>
              </entry>
              <entry>
                <link linkend="gui_attr_basic_enable">enable</link>
              </entry>
              <entry>
               <link linkend="gui_attr_textField_maxLength">maxLength</link>
              </entry>
              <entry>
                <link linkend="gui_attr_timeField_showSeconds">showSeconds</link>
              </entry>
            </row>
            <row>
              <entry align="left">
                <link linkend="gui_attr_fieldGroup_field_custom">custom</link>
              </entry>
              <entry align="left">
                <link linkend="gui_attr_fieldGroup_field_id">id</link>
              </entry>
              <entry>
                <link linkend="gui_attr_basic_optionsDatasource">optionsDatasource</link>
              </entry>
              <entry>
                  <link linkend="gui_attr_basic_visible">visible</link>
              </entry>
            </row>
            <row>
              <entry align="left">
                <link linkend="gui_attr_dateField_dateFormat">dateFormat</link>
              </entry>
              <entry>
                  <link linkend="gui_attr_fieldGroup_link">link</link>
              </entry>
              <entry>
              <link linkend="gui_attr_basic_required">required</link>
              </entry>
              <entry>
                  <link linkend="gui_attr_basic_width">width</link>
              </entry>
            </row>
            <row>
              <entry align="left">
                <link linkend="gui_attr_fieldGroup_field_datasource">datasource</link>
              </entry>
              <entry align="left">
                  <link linkend="gui_attr_fieldGroup_linkInvoke">linkInvoke</link>
              </entry>
              <entry>
                  <link linkend="gui_attr_basic_requiredMessage">requiredMessage</link>
              </entry>
            </row>
          </tbody></tgroup>
      </informaltable>
      <para>Элементы <code>field</code>:</para>
      <informaltable frame="none" pgwide="0" align="left">
        <tgroup cols="1" colsep="1" rowsep="1" align="left">
          <colspec colname="c1"/>
          <tbody>
            <row>
              <entry>
                <link linkend="gui_validator">validator</link>
              </entry>
            </row>
          </tbody>
        </tgroup>
      </informaltable>
      <para>Атрибуты <code>column</code>:</para>
      <informaltable frame="none" pgwide="0" align="left">
        <tgroup cols="1" colsep="1" rowsep="1" align="left"><colspec colname="c1"/>c <tbody>
            <row><entry align="left">
                <link linkend="gui_attr_fieldGroup_flex">flex</link>
              </entry>editable</row>
            <row>
              <entry>
                <link linkend="gui_attr_fieldGroup_width">width</link>
              </entry>
            </row>
          </tbody></tgroup>
      </informaltable>
    </section>
    <section id="gui_FileMultiUploadField">
      <title>FileMultiUploadField</title>
      <para>Компонент <code>FileMultiUploadField</code> позволяет пользователю загружать файлы на сервер. Компонент представляет собой кнопку, при нажатии на которую на экране отображается стандартное для операционной системы окно выбора файлов, в котором можно выбрать сразу несколько файлов для загрузки.</para>
      <mediaobject>
        <imageobject>
          <imagedata align="center" fileref="img/gui_multipleUpload.png"/>
        </imageobject>
      </mediaobject>
      <para>XML-имя компонента: <sgmltag>multiUpload</sgmltag>.</para>
      <mediaobject>
        <imageobject>
          <imagedata align="center" fileref="img/gui_FileMultiUploadField_dia.png"/>
        </imageobject>
      </mediaobject>
      <para>Компонент реализован для блоков <structname>Web Client</structname> и <structname>Desktop Client</structname>. Для работы веб-версии компонента необходима поддержка браузером технологии <productname>Flash</productname>.</para>
      <para>Рассмотрим пример использования  компонента.</para>
      <itemizedlist>
        <listitem>
          <para>Объявляем компонент в XML-дескрипторе экрана:<programlisting language="xml">&lt;multiUpload id=&quot;multiUploadField&quot; caption=&quot;msg://upload&quot;/&gt;</programlisting></para>
        </listitem>
        <listitem>
          <para>В контроллере экрана инжектируем сам компонент, а также интерфейсы <link linkend="file_upload">FileUploadingAPI</link> и <link linkend="dataSupplier">DataSupplier</link>. Затем в методе <code>init()</code> добавляем компоненту слушатель, который будет реагировать на события успешной загрузки или ошибки:<programlisting language="java">@Inject
protected FileMultiUploadField multiUploadField;

@Inject
protected FileUploadingAPI fileUploading;

@Inject
protected DataSupplier dataSupplier;

@Override
public void init(Map&lt;String, Object&gt; params) {
multiUploadField.addListener(new FileMultiUploadField.UploadListener() {
    @Override
    public void queueUploadComplete() {
        Map&lt;UUID, String&gt; uploadMap = multiUploadField.getUploadsMap();
        for (Map.Entry&lt;UUID, String&gt; entry : uploadMap.entrySet()) {
            UUID fileId = entry.getKey();
            String fileName = entry.getValue();
            FileDescriptor fd = fileUploading.getFileDescriptor(fileId, fileName);
            // save file to FileStorage
            try {
                fileUploading.putFileIntoStorage(fileId, fd);
            } catch (FileStorageException e) {
                new RuntimeException(e);
            }
            // save file descriptor to database
            dataSupplier.commit(fd, null);
        }
        multiUploadField.clearUploads();
    }
});
}</programlisting></para>
          <para>Метод <code>queueUploadComplete()</code> будет вызван компонентом после успешной загрузки всех выбранных файлов во временное хранилище клиентского <link linkend="app_tiers">уровня</link>.   В этот момент вызовом метода <code>getUploadsMap()</code> у компонента можно получить мэп идентификаторов файлов во временном хранилище на имена файлов. Далее по этим данным для каждого файла создается соответствующий   объект <code>FileDescriptor</code>. Объект <code>com.haulmont.cuba.core.entity.FileDescriptor</code> (не путать с <code>java.io.FileDescriptor</code>) является персистентной сущностью, которая однозначно идентифицирует загруженный файл и впоследствии используется для выгрузки файла из системы.</para>
          <para>Метод <code>FileUploadingAPI.putFileIntoStorage()</code> используется для перемещения загружаемого файла из временного хранилища клиентского уровня в <link linkend="file_storage">FileStorage</link>. Параметрами этого метода являются идентификатор файла во временном хранилище и объект <code>FileDescriptor</code>. </para>
          <para>После загрузки файла в <code>FileStorage</code> выполняется сохранение экземпляра <code>FileDescriptor</code> в базе данных посредством вызова <code>DataSupplier.commit()</code>. Возвращаемый этим методом сохраненный экземпляр может быть установлен в атрибут какой-либо сущности предметной области, связанной с данным файлом. В данном же случае <code>FileDescriptor</code> просто хранится в системе и дает доступ к файлу через экран <guimenu>Administration</guimenu> &gt; <guimenu>External Files</guimenu>.</para>
          <para>После обработки файлов необходимо очистить список файлов вызовом <code>clearUploads()</code>  на случай повторной загрузки.</para>
        </listitem>
        <listitem>
          <para>Максимальный размер загружаемого файла определяется свойством приложения <link linkend="cuba.client.maxUploadSizeMb">cuba.client.maxUploadSizeMb</link> и по умолчанию равен 20Мб. При выборе пользователем файла большего размера выдается соответствующее сообщение и загрузка прерывается.</para>
        </listitem>
      </itemizedlist>
      <para>Атрибуты <sgmltag>multiUpload</sgmltag>:</para>
      <informaltable frame="none" pgwide="0" align="left">
        <tgroup cols="3" colsep="1" rowsep="1" align="left"><colspec colname="c1"/><colspec colname="c2"/><colspec colname="c3"/>c <tbody>
            <row><entry align="left">
                <link linkend="gui_attr_basic_align">align</link>
              </entry>editable<entry align="left">
                <link linkend="gui_attr_basic_enable">enable</link>
              </entry><entry align="left">
                <link linkend="gui_attr_basic_stylename">stylename</link>
              </entry></row>
            <row>
              <entry>
                <link linkend="gui_attr_basic_caption">caption</link>
              </entry>
              <entry align="left">
                <link linkend="gui_attr_basic_height">height</link>
              </entry>
              <entry>
                <link linkend="gui_attr_basic_visible">visible</link>
              </entry>
            </row>
            <row>
              <entry align="left">
                <link linkend="gui_attr_basic_description">description</link>
              </entry>
              <entry align="left">
                <link linkend="gui_attr_basic_id">id</link>
              </entry>
              <entry>
                <link linkend="gui_attr_basic_width">width</link>
              </entry>
            </row>
          </tbody></tgroup>
      </informaltable>
    </section>
    <section id="gui_FileUploadField">
      <title>FileUploadField</title>
      <para>Компонент <code>FileUploadField</code> позволяет пользователю загружать файлы на сервер. Компонент представляет собой кнопку, при нажатии на которую на экране отображается стандартное для операционной системы окно, в котором можно выбрать  один файл. Чтобы дать пользователю возможность загружать сразу несколько файлов, используйте компонент <link linkend="gui_FileMultiUploadField">FileMultiUploadField</link>.</para>
      <mediaobject>
        <imageobject>
          <imagedata align="center" fileref="img/gui_upload.png"/>
        </imageobject>
      </mediaobject>
      <para>XML-имя компонента: <sgmltag>upload</sgmltag>.</para>
      <mediaobject>
        <imageobject>
          <imagedata align="center" fileref="img/gui_FileUploadField_dia.png"/>
        </imageobject>
      </mediaobject>
      <para>Компонент реализован для блоков <structname>Web Client</structname> и <structname>Desktop Client</structname>. </para>
      <para>Рассмотрим пример использования  компонента.</para>
      <itemizedlist>
        <listitem>
          <para>Объявляем компонент в XML-дескрипторе экрана:<programlisting language="xml">&lt;upload id=&quot;uploadField&quot; caption=&quot;msg://upload&quot;/&gt;</programlisting></para>
        </listitem>
        <listitem>
          <para>В контроллере экрана инжектируем сам компонент, а также интерфейсы <link linkend="file_upload">FileUploadingAPI</link> и <link linkend="dataSupplier">DataSupplier</link>. Затем в методе <code>init()</code> добавляем компоненту слушатель, который будет реагировать на события успешной загрузки или ошибки:<programlisting language="java">@Inject
protected FileUploadField uploadField;

@Inject
protected FileUploadingAPI fileUploading;

@Inject
protected DataSupplier dataSupplier;

@Override
public void init(Map&lt;String, Object&gt; params) {
uploadField.addListener(new FileUploadField.ListenerAdapter() {
    @Override
    public void uploadSucceeded(Event event) {
        FileDescriptor fd = uploadField.getFileDescriptor();
        try {
            // save file to FileStorage
            fileUploading.putFileIntoStorage(uploadField.getFileId(), fd);
        } catch (FileStorageException e) {
            throw new RuntimeException(e);
        }
        // save file descriptor to database
        dataSupplier.commit(fd, null);

        showNotification(&quot;File uploaded: &quot; + uploadField.getFileName(), NotificationType.HUMANIZED);
    }

    @Override
    public void uploadFailed(Event event) {
        showNotification(&quot;File upload error&quot;, NotificationType.HUMANIZED);
    }
});
}</programlisting></para>
          <para>Метод <code>uploadSucceeded()</code> будет вызван компонентом после успешной загрузки файла во временное хранилище клиентского <link linkend="app_tiers">уровня</link>. В этот момент у компонента можно получить объект <code>FileDescriptor</code>, соответствующий загруженному файлу. Объект <code>com.haulmont.cuba.core.entity.FileDescriptor</code> (не путать с <code>java.io.FileDescriptor</code>) является персистентной сущностью, которая однозначно идентифицирует загруженный файл и впоследствии используется для выгрузки файла из системы.</para>
          <para>Метод <code>FileUploadingAPI.putFileIntoStorage()</code> используется для перемещения загружаемого файла из временного хранилища клиентского уровня в <link linkend="file_storage">FileStorage</link>. Параметрами этого метода являются идентификатор файла во временном хранилище и объект <code>FileDescriptor</code>. Оба эти параметра предоставляет <code>FileUploadField</code>.</para>
          <para>После загрузки файла в <code>FileStorage</code> выполняется сохранение экземпляра <code>FileDescriptor</code> в базе данных посредством вызова <code>DataSupplier.commit()</code>. Возвращаемый этим методом сохраненный экземпляр может быть установлен в атрибут какой-либо сущности предметной области, связанной с данным файлом. В данном же случае <code>FileDescriptor</code> просто хранится в системе и дает доступ к файлу через экран <guimenu>Administration</guimenu> &gt; <guimenu>External Files</guimenu>.</para>
          <para>Метод <code>uploadFailed()</code> вызывается компонентом <code>FileUploadField</code> в случае ошибки загрузки файла во временное хранилище клиентского уровня.</para>
        </listitem>
        <listitem>
          <para>Максимальный размер загружаемого файла определяется свойством приложения <link linkend="cuba.client.maxUploadSizeMb">cuba.client.maxUploadSizeMb</link> и по умолчанию равен 20Мб. При выборе пользователем файла большего размера выдается соответствующее сообщение и загрузка прерывается.</para>
        </listitem>
      </itemizedlist>
      <para>Атрибуты <sgmltag>upload</sgmltag>:</para>
      <informaltable frame="none" pgwide="0" align="left">
        <tgroup cols="3" colsep="1" rowsep="1" align="left"><colspec colname="c1"/><colspec colname="c2"/><colspec colname="c3"/>c <tbody>
            <row><entry align="left">
                <link linkend="gui_attr_basic_align">align</link>
              </entry>editable<entry align="left">
                <link linkend="gui_attr_basic_enable">enable</link>
              </entry><entry align="left">
                <link linkend="gui_attr_basic_stylename">stylename</link>
              </entry></row>
            <row>
              <entry>
                <link linkend="gui_attr_basic_caption">caption</link>
              </entry>
              <entry align="left">
                <link linkend="gui_attr_basic_height">height</link>
              </entry>
              <entry>
                <link linkend="gui_attr_basic_visible">visible</link>
              </entry>
            </row>
            <row>
              <entry align="left">
                <link linkend="gui_attr_basic_description">description</link>
              </entry>
              <entry align="left">
                <link linkend="gui_attr_basic_id">id</link>
              </entry>
              <entry>
                <link linkend="gui_attr_basic_width">width</link>
              </entry>
            </row>
          </tbody></tgroup>
      </informaltable>
    </section>
      <section id="gui_Filter">
          <title>Filter</title>
          <para>Компонент <code>Filter</code> − универсальное средство фильтрации списков сущностей, извлекаемых из базы данных для отображения в табличном виде. Компонент позволяет производить быструю фильтрацию данных по произвольному набору условий, а также создавать фильтры для многократного использования.</para>
          <para><code>Filter</code> должен быть связан с <link linkend="datasources">источником данных</link> <code>collectionDatasource</code> содержащим <link linkend="datasource_query">запрос</link> на JPQL. Принцип действия фильтра основан на модификации этого запроса в соответствии с критериями, заданными пользователем. Таким образом фильтрация осуществляется на уровне БД при выполнении транслированного из JPQL в SQL запроса, и на Middleware и клиентский <link linkend="app_tiers">уровень</link> загружаются только отобранные данные.</para>
          <section id="gui_Filter_use">
            <title>Использование фильтра</title>
              <para>Типичный фильтр выглядит следующим образом:</para>
              <mediaobject>
                  <imageobject>
                      <imagedata align="center" fileref="img/gui_filter_descr.png"/>
                  </imageobject>
              </mediaobject>
              <para>По умолчанию, компонент находится в режиме быстрой фильтрации. Это означает, что пользователь может добавить набор условий для однократного поиска данных. После закрытия экрана просмотра экземпляров сущности условия будут удалены.</para>
              <para>Для того чтобы создать быстрый фильтр, нажмите на ссылку <guibutton>Add search condition (Добавить условие поиска)</guibutton>. Отобразится экран выбора условий:</para>
              <mediaobject>
                  <imageobject>
                      <imagedata align="center" fileref="img/gui_filter_conditions.png"/>
                  </imageobject>
              </mediaobject>
              <para>Рассмотрим возможные типы условий:<itemizedlist>
                  <listitem>
                      <para><guilabel>Properties (Атрибуты)</guilabel> – атрибуты данной сущности и связанных с ней сущностей. Отображаются персистентные атрибуты, явно заданные в элементе <sgmltag>property</sgmltag> XML-описателя фильтра, либо соответствующие правилам, указанным в элементе <sgmltag>properties</sgmltag> (см. ниже).</para>
                  </listitem>
                  <listitem>
                      <para><guilabel>Custom conditions (Специальные условия) </guilabel> – условия, заданные разработчиком в элементах <code>custom</code> XML-описателя фильтра.</para>
                  </listitem>
                  <listitem>
                      <para><guilabel>Create new (Создать новое)</guilabel> – позволяет создать новое произвольное условие на JPQL. Данный пункт доступен пользователю, если у него есть специфическое <link linkend="permissions">разрешение</link> <code>cuba.gui.filter.customConditions</code>.</para>
                  </listitem>
              </itemizedlist></para>
              <para>Выбранные условия отображаются в верхней части панель фильтра. Рядом с каждым условием находится  кнопка <inlinemediaobject><imageobject><imagedata fileref="img/gui_filter_remove_condition.png"/></imageobject></inlinemediaobject>, позволяющая удалить их из набора.</para>
              <para>Быстрый фильтр можно сохранить для повторного использования в дальнейшем. Для этого нажмите на кнопку настроек фильтра и выберите <guibutton>Save/Save as (Сохранить/Сохранить как)</guibutton>. Во всплывающем окне задайте имя нового фильтра:</para>
              <mediaobject>
                  <imageobject>
                      <imagedata align="center" fileref="img/gui_filter_name.png"/>
                  </imageobject>
              </mediaobject>
              <para>Фильтр будет сохранен в выпадающем меню кнопки <guibutton>Search (Поиск)</guibutton>.</para>
              <para>Пункт меню <guimenuitem>Reset filter (Сбросить фильтр)</guimenuitem> позволяет сбросить все текущие условия поиска.</para>
              <mediaobject>
                  <imageobject>
                      <imagedata align="center" fileref="img/gui_filter_reset.png"/>
                  </imageobject>
              </mediaobject>
              <para>Кнопка настроек фильтра содержит выпадающий список опций для управления фильтром:</para>
              <itemizedlist>
                  <listitem><para><guimenuitem>Save (Сохранить)</guimenuitem> – сохранить изменения в текущем фильтре.</para></listitem>
                  <listitem><para><guimenuitem>Save as (Сохранить как)</guimenuitem> – сохранить фильтр под новым именем.</para></listitem>
                  <listitem><para><guimenuitem>Edit (Редактировать)</guimenuitem> – открыть редактор фильтра (см. ниже).</para></listitem>
                  <listitem><para><guimenuitem>Make default (Установить по умолчанию)</guimenuitem> – установить фильтр по умолчанию для данного экрана. Фильтр будет автоматически выводиться на панель при каждом открытии экрана.</para></listitem>
                  <listitem><para><guimenuitem>Remove (Удалить)</guimenuitem> – удалить текущий фильтр.  </para></listitem>
                  <listitem><para><guimenuitem>Pin applied (Закрепить)</guimenuitem> – использовать результаты последнего поиска для последовательной фильтрации данных (см. <xref linkend="sequential_filter"/>).</para></listitem>
                  <listitem><para><guimenuitem>Save as search folder (Сохранить как папку поиска)</guimenuitem> – создать <link linkend="search_folder">папку поиска</link> на основе текущего фильтра.</para></listitem>
                  <listitem><para><guimenuitem>Save as application folder (Сохранить как папку приложения)</guimenuitem> – создать <link linkend="search_folder">папку приложения</link> на основе текущего фильтра. Эта опция доступна только пользователям со специфическим разрешением <code>cuba.gui.appFolder.global</code>.</para></listitem>
              </itemizedlist>
              <para>Опция <guimenuitem>Edit</guimenuitem> открывает редактор фильтра, который дает возможность расширенной настройки текущего фильтра:</para>
              <mediaobject>
                  <imageobject>
                      <imagedata align="center" fileref="img/gui_filter_editor.png"/>
                  </imageobject>
              </mediaobject>
              <para>Название фильтра указывается в поле <guilabel>Filter name (Имя фильтра)</guilabel>. Это имя будет отображаться в списке доступных фильтров для текущего экрана.</para>
              <para>Фильтр можно сделать <firstterm>global</firstterm> (то есть доступным для всех пользователей) с помощью установки флажка <guilabel>Available for all users (Общий)</guilabel> для всех пользователей, или установить текущий фильтр в качестве фильтра по умолчанию с помощью установки флажка <guilabel>Default (По умолчанию)</guilabel>.</para>
              <para>В дереве содержатся условия фильтра. Условия можно добавлять с помощью кнопки <guibutton>Add (Добавить)</guibutton> менять местами при помощи кнопок <inlinemediaobject>
                  <imageobject>
                      <imagedata fileref="img/gui_filter_cond_down.png"/>
                  </imageobject>
              </inlinemediaobject>/<inlinemediaobject>
                  <imageobject>
                      <imagedata fileref="img/gui_filter_cond_up.png"/>
                  </imageobject>
              </inlinemediaobject> или удалять с помощью кнопки <guibutton>Remove (Удалить)</guibutton>.</para>
              <para>Группировку условий по И или ИЛИ можно добавить с помощью соответствующих кнопок. Все добавленные на верхний уровень (то есть без явной группировки) условия объединяются по И.</para>
              <para>При выборе условия в дереве в правой части редактора открывается список его свойств.</para>
              <para>С помощью соответствующих флажков можно сделать выбранное в таблице условие скрытым или обязательным для заполнения. Параметр скрытого условия не отображается пользователю, поэтому он должны быть введен во время редактирования фильтра.</para>
              <para>Свойство <guilabel>Width</guilabel> позволяет задать ширину поля ввода параметра для текущего условия. По умолчанию, условия на панели фильтров отображаются в три колонки. Ширина поля равняется количеству колонок, которое оно может занять (1, 2 или 3).</para>
              <para>Значение параметра текущего условия по умолчанию можно задать в поле <guilabel>Default value (Значение по умолчанию)</guilabel>.</para>
              <para>Специальный заголовок условия фильтрации можно задать в поле <guilabel>Caption (Заголовок)</guilabel>.</para>
              <para>Поле <guilabel>Operation</guilabel> позволяет выбрать оператор поиска. Список доступных операторов зависит от типа атрибута.</para>
              <warning>
                  <para>При нажатии <guibutton>ОК</guibutton> в редакторе фильтра изменения сохраняются только для текущего быстрого поиска. Для того чтобы сохранить их для повторного использования в дальнейшем, нажмите на кнопку настройки фильтра и выберите <guimenuitem>Сохранить/Сохранить как</guimenuitem>. Иначе при закрытии экрана просмотра экземпляров сущности все изменения будут утеряны.</para>
              </warning>
          </section>
      <section id="gui_Filter_component">
        <title>Описание компонента Filter</title>
        <para>XML-имя компонента: <sgmltag>filter</sgmltag>.</para>
        <mediaobject>
          <imageobject>
            <imagedata align="center" fileref="img/gui_filter_dia.png"/>
          </imageobject>
        </mediaobject>
        <para>Компонент реализован для блоков <structname>Web Client</structname> и <structname>Desktop Client</structname>.</para>
        <para>Пример объявления компонента в XML-дескрипторе экрана:<programlisting language="xml">&lt;dsContext&gt;
&lt;collectionDatasource id=&quot;carsDs&quot; class=&quot;com.company.sample.entity.Car&quot; view=&quot;carBrowse&quot;&gt;
    &lt;query&gt;
        select c from ref$Car c order by c.createTs
    &lt;/query&gt;
&lt;/collectionDatasource&gt;
&lt;/dsContext&gt;
&lt;layout spacing=&quot;true&quot;&gt;

&lt;filter id=&quot;carsFilter&quot; datasource=&quot;carsDs&quot;&gt;
    &lt;properties include=&quot;.*&quot;/&gt;
&lt;/filter&gt;

&lt;table id=&quot;carsTable&quot; width=&quot;100%&quot;&gt;
    &lt;buttonsPanel&gt;
        &lt;button action=&quot;carsTable.create&quot;/&gt;
        &lt;button action=&quot;carsTable.edit&quot;/&gt;
        &lt;button action=&quot;carsTable.remove&quot;/&gt;
    &lt;/buttonsPanel&gt;
    &lt;rowsCount/&gt;
    &lt;columns&gt;
        &lt;column id=&quot;vin&quot;/&gt;
        &lt;column id=&quot;model.name&quot;/&gt;
        &lt;column id=&quot;colour.name&quot;/&gt;
    &lt;/columns&gt;
    &lt;rows datasource=&quot;carsDs&quot;/&gt;
&lt;/table&gt;</programlisting></para>
        <para>Здесь в элементе <code>dsContext</code> определен <link linkend="datasources">источник данных</link> <code>collectionDatasource</code>, который выбирает экземпляры сущности <code>Car</code> с помощью JPQL запроса. Для компонента <code>filter</code>  в его атрибуте <code>datasource</code> указан фильтруемый источник данных. Данные отображаются компонентом <link linkend="gui_Table">Table</link>, связанным с этим же источником. </para>
        <para>Элемент    <sgmltag>filter</sgmltag> может содержать вложенные элементы. Все они описывают условия, доступные пользователю для выбора в диалоге добавления условий:<itemizedlist>
            <listitem id="gui_element_filter_properties">
              <para><code>properties</code> - позволяет сделать доступными  сразу несколько атрибутов сущности. Данный элемент может иметь следующие атрибуты:<itemizedlist>
                  <listitem id="gui_attr_filter_include">
                    <para><code>include</code> - обязательный атрибут, содержит  регулярное выражение, которому должно соответствовать имя атрибута сущности.</para>
                  </listitem>
                  <listitem id="gui_attr_filter_exclude">
                    <para><code>exclude</code> - содержит регулярное выражение, при соответствии которому атрибут сущности исключается из ранее включенных с помощью <code>include</code>.</para>
                  </listitem>
                </itemizedlist></para>
              <para>Например:<programlisting language="xml">&lt;filter id=&quot;transactionsFilter&quot; datasource=&quot;transactionsDs&quot;&gt;
&lt;properties include=&quot;.*&quot; exclude=&quot;(masterTransaction)|(authCode)&quot;/&gt;
&lt;/filter&gt;</programlisting></para>
              <para>При использовании элемента  <code>properties</code> автоматически игнорируются следующие атрибуты сущности:<itemizedlist>
                  <listitem>
                    <para>Коллекции (<code>@OneToMany</code>, <code>@ManyToMany</code>).</para>
                  </listitem>
                  <listitem>
                    <para>Атрибуты, не имеющие <link linkend="entity_localization">локализованного названия</link>.</para>
                  </listitem>
                  <listitem>
                    <para>Атрибут <code>version</code>.</para>
                  </listitem>
                </itemizedlist></para>
            </listitem>
            <listitem id="gui_element_filter_property">
              <para><code>property</code> - явно включает атрибут сущности по имени. Данный элемент может иметь следующие атрибуты:<itemizedlist>
                  <listitem id="gui_attr_filter_name">
                    <para><code>name</code> - обязательный атрибут, содержит имя включаемого атрибута сущности. Может быть путем (через &quot;.&quot;) по графу сущностей. Например:<programlisting language="xml">&lt;filter id=&quot;transactionsFilter&quot; datasource=&quot;transactionDs&quot; applyTo=&quot;table&quot;&gt;
&lt;properties include=&quot;.*&quot; exclude=&quot;(masterTransaction)|(authCode)&quot;/&gt;
&lt;property name=&quot;creditCard.maskedPan&quot; caption=&quot;msg://EmbeddedCreditCard.maskedPan&quot;/&gt;
&lt;property name=&quot;creditCard.startDate&quot; caption=&quot;msg://EmbeddedCreditCard.startDate&quot;/&gt;
&lt;/filter&gt;</programlisting></para>
                  </listitem>
                  <listitem id="gui_attr_filter_caption">
                    <para><code>caption</code> - локализованное название атрибута сущности для отображения условия фильтра. Как правило, представляет из себя строку с префиксом <code>msg://</code> по правилам <code>MessageTools.<link linkend="messageTools.loadString">loadString</link>()</code>.</para>
                    <para>Если в атрибуте <code>name</code> указан путь (через &quot;.&quot;) по графу сущностей, то атрибут <code>caption</code> является обязательным.</para>
                  </listitem>
                  <listitem>
                    <para id="gui_attr_filter_paramWhere"><sgmltag>paramWhere</sgmltag> − задает выражение на JPQL для  отбора списка значений параметра условия, если параметр является связанной сущностью. Вместо алиаса отбираемой сущности в выражении нужно использовать метку (placeholder) <code> {E}</code>. </para>
                    <para>Например, для фильтра на сущность <code>Car</code> добавляется условие по связанной сущности <code>Model</code>. Тогда можно ограничить список возможных значений параметра условия  только моделями марки <userinput>Audi</userinput>:<programlisting language="xml">&lt;filter id=&quot;carsFilter&quot; datasource=&quot;carsDs&quot;&gt;
&lt;property name=&quot;model&quot; paramWhere=&quot;{E}.manufacturer = &apos;Audi&apos;&quot;/&gt;
&lt;/filter&gt;</programlisting><mediaobject>
                        <imageobject>
                          <imagedata align="center" fileref="img/gui_filter_paramWhere.png"/>
                        </imageobject>
                      </mediaobject></para>
                    <para>В выражении JPQL можно использовать параметры экрана, атрибуты сессии, а также компоненты экрана, в том числе отображающие другие параметры. Правила задания параметров запроса описаны в <xref linkend="datasource_query"/>. </para>
                    <para>Пример использования параметра сессии и параметра экрана:<programlisting>{E}.createdBy = :session$userLogin and {E}.name like :param$groupName</programlisting></para>
                    <para>Пример использования значения параметра другого условия фильтра:<programlisting>{E}.proc.id = :component$cardsFilter.proc68779</programlisting></para>
                    <para>Имя компонента, отображающего параметр условия, можно узнать, вызвав контекстное меню на строке таблицы условий в редакторе фильтра:</para>
                    <mediaobject>
                      <imageobject>
                        <imagedata align="center" fileref="img/gui_filter_component_name.png"/>
                      </imageobject>
                    </mediaobject>
                  </listitem>
                  <listitem>
                    <para id="gui_attr_filter_paramView"><sgmltag>paramView</sgmltag> − задает <link linkend="views">представление</link>, с которым будет загружаться список значений параметра условия, если параметр является связанной сущностью. Например, <literal>_local</literal>. Если не указано, используется <code>_minimal</code>.</para>
                  </listitem>
                </itemizedlist></para>
            </listitem>
            <listitem id="gui_element_filter_custom">
              <para><code>custom</code> - элемент, определяющий произвольное условие. Содержимым элемента должно быть выражение на JPQL (возможно использование <link linkend="jpql_macro">JPQL Macros</link>), которое будет добавлено в условие <code>where</code> запроса источника данных. Параметр условия может быть только один, и если он есть, обозначается символом <literal>?</literal>. </para>
              <para>Пример фильтра с произвольными условиями:<programlisting language="xml">&lt;filter id=&quot;carsFilter&quot; datasource=&quot;carsDs&quot;&gt;
&lt;properties include=&quot;.*&quot;/&gt;
&lt;custom name=&quot;vin&quot; paramClass=&quot;java.lang.String&quot; caption=&quot;msg://vin&quot;&gt;
  {E}.vin like ?
&lt;/custom&gt;
&lt;custom name=&quot;colour&quot; paramClass=&quot;com.company.sample.entity.Colour&quot; caption=&quot;msg://colour&quot; inExpr=&quot;true&quot;&gt;
  ({E}.colour.id in (?))
&lt;/custom&gt;
&lt;custom name=&quot;repair&quot; paramClass=&quot;java.lang.String&quot; caption=&quot;msg://repair&quot;
       join=&quot;join {E}.repairs cr&quot;&gt;
  cr.description like ?
&lt;/custom&gt;
&lt;custom name=&quot;updateTs&quot; caption=&quot;msg://updateTs&quot;&gt;
  @between({E}.updateTs, now-1, now+1, day)
&lt;/custom&gt;
&lt;/filter&gt;</programlisting></para>
              <para>Созданные <code>custom</code> условия отображаются в секции <guilabel>Специальные условия</guilabel>  диалога добавления условий:<mediaobject>
                  <imageobject>
                    <imagedata align="center" fileref="img/gui_filter_custom.png"/>
                  </imageobject>
                </mediaobject></para>
              <para>Атрибуты элемента <sgmltag>custom</sgmltag>:</para>
              <itemizedlist>
                <listitem>
                  <para id="gui_attr_filter_custom_name"><sgmltag>name</sgmltag> − обязательный атрибут - имя условия.</para>
                </listitem>
                <listitem>
                  <para id="gui_attr_filter_custom_caption"><sgmltag>caption</sgmltag> − обязательный атрибут - локализованное название условия. Как правило, представляет из себя строку с префиксом <code>msg://</code> по правилам <code>MessageTools.<link linkend="messageTools.loadString">loadString</link>()</code>.</para>
                </listitem>
                <listitem>
                  <para id="gui_attr_filter_custom_paramClass"><sgmltag>paramClass</sgmltag>  − Java-класс параметра условия. Если параметр отсутствует, то данный атрибут не обязателен.</para>
                </listitem>
                <listitem>
                  <para id="gui_attr_filter_custom_inExpr"><sgmltag>inExpr</sgmltag> − должен быть установлен в <literal>true</literal>, если выражение JPQL содержит условие <code>in (?)</code>. При этом пользователь будет иметь возможность ввести несколько значений параметра данного условия.</para>
                </listitem>
                <listitem>
                  <para id="gui_attr_filter_custom_join"><sgmltag>join</sgmltag> − необязательный атрибут для задания строки, которая будет добавлена в секцию <literal>from</literal> запроса источника данных. Это может потребоваться для создания условия по атрибуту связанной коллекции. Значение данного атрибута должно включать в себя предложения <code>join</code> или <code>left join</code>. </para>
                  <para>Например, предположим что сущность <code>Car</code> имеет атрибут <code>repairs</code>, который представляет собой коллекцию экземпляров связанной сущности <code>Repair</code>. Тогда для фильтрации <code>Car</code> по атрибуту <code>description</code> сущности <code>Repair</code> можно написать следующее условие:<programlisting language="xml">&lt;filter id=&quot;carsFilter&quot; datasource=&quot;carsDs&quot;&gt;
&lt;custom name=&quot;repair&quot;
        caption=&quot;msg://repair&quot;
        paramClass=&quot;java.lang.String&quot;
        join=&quot;join {E}.repairs cr&quot;&gt;
  cr.description like ?
&lt;/custom&gt;</programlisting></para>
                  <para>При использовании такого условия исходный запрос источника данных:<programlisting>select c from sample$Car c order by c.createTs</programlisting>будет трансформирован в следующий:<programlisting>select c from sample$Car c join c.repairs cr
where (cr.description like :component_carsFilter_YpzKVsCpmF64816 )
order by c.createTs</programlisting></para>
                </listitem>
                <listitem>
                  <para><sgmltag>paramWhere</sgmltag> − задает выражение на JPQL для  отбора списка значений параметра условия, если параметр является связанной сущностью. См. описание одноименного атрибута элемента <code>property</code>.</para>
                </listitem>
                <listitem>
                  <para><sgmltag>paramView</sgmltag> − задает <link linkend="views">представление</link>, с которым будет загружаться список значений параметра условия, если параметр является связанной сущностью. Например, <literal>_local</literal>. Если не указано, используется <code>_minimal</code>.</para>
                </listitem>
              </itemizedlist>
            </listitem>
          </itemizedlist></para>
        <para>Атрибуты <code>filter</code>:<itemizedlist>
            <listitem>
              <para id="gui_attr_filter_editable"><code>editable</code> - если значение этого атрибута  равно <literal>false</literal>, то кнопка <guibutton>Фильтр</guibutton> скрывается.</para>
            </listitem>
            <listitem>
              <para id="gui_attr_filter_required"><code>required</code> - если значение этого атрибута  равно <literal>true</literal>, то  в списке фильтров значение <literal>&lt;без фильтрации&gt;</literal> не отображается, и пользователь обязательно должен выбрать один из доступных фильтров. Если для экрана не установлен фильтр по умолчанию, то в списке выбора фильтра автоматически устанавливается первый созданный фильтр.</para>
            </listitem>
            <listitem>
              <para id="gui_attr_filter_manualApplyRequired"><sgmltag>manualApplyRequired</sgmltag> − определяет, в какой момент будет   применяться фильтр. Если значение атрибута равно <literal>false</literal>, то сразу при открытии экрана будет применяться фильтр по умолчанию. Если фильтр по умолчанию отсутствует, то установка значения <literal>false</literal> для атрибута теряет смысл. Если значение атрибута равно <code>true</code>, то фильтр будет применяться только после нажатия на кнопку <guibutton>Применить</guibutton>.  </para>
              <para id="gui_attr_filter_manualApplyRequired_1">Данный атрибут имеет приоритет над свойством приложения  <link linkend="cuba.gui.genericFilterManualApplyRequired">cuba.gui.genericFilterManualApplyRequired</link>.</para>
            </listitem>
            <listitem id="gui_attr_filter_useMaxResults">
              <para><code>useMaxResults</code>  − ограничивает размер страницы загружаемых в источник данных экземпляров сущности. По умолчанию <code>true</code>.</para>
              <para>Если значение этого атрибута  равно <literal>false</literal>, то  фильтр не будет отображать поле и флажок <guilabel>Показывать N строк</guilabel>. Количество записей в источнике данных (и соответственно, показываемых таблицей) будет ограничено только параметром <code>MaxFetchUI</code> механизма <link linkend="entity_statistics">статистики сущностей</link>, по умолчанию - 10000.</para>
              <para>Если данный атрибут не указан, или равен <code>true</code>, то флажок и поле <guilabel>Показывать N строк</guilabel> отображается, если у пользователя также есть специфическое разрешение <code>cuba.gui.filter.maxResults</code> (см.  руководство <productname>Подсистема безопасности</productname>). Если  разрешение <code>cuba.gui.filter.maxResults</code> отсутствует, то фильтр будет принудительно отбирать только первые N строк без возможности пользователя отключить это или указать другое N. Число N  определяется параметрами <literal>FetchUI</literal>, <literal>DefaultFetchUI</literal>, получаемыми из механизма <link linkend="entity_statistics">статистики сущностей</link>.
            </para>
              <para>На рисунке далее показан вид фильтра со значением атрибута <code>useMaxResults=&quot;true&quot;</code>, запретом специфического разрешения <code>cuba.gui.filter.maxResults</code> и параметром <code>DefaultFetchUI=2</code></para>
              <mediaobject>
                <imageobject>
                  <imagedata align="center" fileref="img/gui_filter_useMaxRezult.png"/>
                </imageobject>
              </mediaobject>
            </listitem>
            <listitem>
              <para id="gui_attr_filter_folderActionsEnabled"><sgmltag>folderActionsEnabled</sgmltag> − при указании значения <literal>false</literal> позволяет скрыть следующие действия с фильтром: <guilabel>Сохранить как папку поиска</guilabel>, <guilabel>Сохранить как папку приложения</guilabel>. По умолчанию значение атрибута равно <literal>true</literal>, действия <guilabel>Сохранить как папку поиска</guilabel>, <guilabel>Сохранить как папку приложения</guilabel> доступны.</para>
            </listitem>
            <listitem>
              <para id="gui_attr_filter_applyTo"><sgmltag>applyTo</sgmltag> − необязательный атрибут, содержит идентификатор компонента, с которым связан фильтр. Используется в случае, когда необходимо иметь доступ к <link linkend="gui_Table_presentations">представлениям</link> связанного компонента-таблицы. Например, сохраняя фильтр как <link linkend="search_folder">папку поиска</link> или как <link linkend="application_folder">папку приложения</link>, можно указать, какое представление будет применятся при просмотре этой папки.</para>
              <mediaobject>
                <imageobject>
                  <imagedata align="center" fileref="img/gui_filter_apply_to.png"/>
                </imageobject>
              </mediaobject>
            </listitem>
            <listitem>
                    <para id="gui_attr_filter_caption"><sgmltag>caption</sgmltag> - позволяет задать заголовок панели фильтров.</para>
                </listitem>
                <listitem>
                    <para id="gui_attr_filter_columnsQty"><sgmltag>columnsQty</sgmltag> - задает количество колонок с условиями для конкретного фильтра. Значение по умолчанию - 3.</para>
                </listitem>
            </itemizedlist></para>
        <para>Все атрибуты <sgmltag>filter</sgmltag>:</para>
        <informaltable frame="none" pgwide="0" align="left">
          <tgroup cols="4" colsep="1" rowsep="1" align="left"><colspec colname="c1"/><colspec colname="c2"/><colspec colname="c3"/><colspec colname="c4"/>c <tbody>
              <row><entry align="left">
                  <link linkend="gui_attr_filter_applyTo">applyTo</link>
              </entry><entry>
                  <link linkend="gui_attr_basic_datasource">datasource</link>
              </entry><entry align="left">
                  <link linkend="gui_attr_filter_folderActionsEnabled">folderActionsEnabled</link>
              </entry><entry>
                  <link linkend="gui_attr_basic_margin">margin</link>
              </entry>
              </row>
              <row>
                  <entry>
                      <link linkend="gui_attr_filter_panel_caption">caption</link>
                  </entry>
                  <entry align="left">
                      <link linkend="gui_attr_basic_editable">editable</link>
                  </entry>
                  <entry align="left">
                      <link linkend="gui_attr_basic_id">id</link>
                  </entry>
                  <entry>
                      <link linkend="gui_attr_filter_required">required</link>
                  </entry>
              </row>
              <row>
                  <entry align="left">
                      <link linkend="gui_attr_filter_columnsQty">columnsQty</link>
                  </entry>
                  <entry align="left">
                      <link linkend="gui_attr_basic_enable">enable</link>
                  </entry>
                  <entry>
                      <link linkend="gui_attr_filter_manualApplyRequired">manualApplyRequired</link>
                  </entry>
                  <entry>
                      <link linkend="gui_attr_basic_stylename">stylename</link>
                  </entry>
              </row>
              <row>
                  <entry>
                      <link linkend="gui_attr_filter_useMaxResults">useMaxResults</link>
                  </entry>
                  <entry>
                      <link linkend="gui_attr_basic_visible">visible</link>
                  </entry>
              </row>
            </tbody></tgroup>
        </informaltable>
        <para>Элементы <sgmltag>filter</sgmltag>:</para>
        <informaltable frame="none" pgwide="0" align="left">
          <tgroup cols="1" colsep="1" rowsep="1" align="left"><colspec colname="c1"/>c <tbody>
              <row><entry align="left">
                  <link linkend="gui_element_filter_custom">custom</link>
                </entry>editable</row>
              <row>
                <entry>
                  <link linkend="gui_element_filter_properties">properties</link>
                </entry>
              </row>
              <row>
                <entry>
                  <link linkend="gui_element_filter_property">property</link>
                </entry>
              </row>
            </tbody></tgroup>
        </informaltable>
        <para>Атрибуты элемента <sgmltag>properties</sgmltag>:</para>
        <informaltable frame="none" pgwide="0" align="left">
          <tgroup cols="1" colsep="1" rowsep="1" align="left"><colspec colname="c1"/>c <tbody>
              <row><entry align="left">
                  <link linkend="gui_attr_filter_exclude">exclude</link>
                </entry>editable</row>
              <row>
                <entry>
                  <link linkend="gui_attr_filter_include">include</link>
                </entry>
              </row>
            </tbody></tgroup>
        </informaltable>
        <para>Атрибуты элемента <sgmltag>property</sgmltag>:</para>
        <informaltable frame="none" pgwide="0" align="left">
          <tgroup cols="2" colsep="1" rowsep="1" align="left"><colspec colname="c1"/><colspec colname="c2"/><colspec colname="c3"/>c <tbody>
              <row><entry align="left">
                  <link linkend="gui_attr_filter_caption">caption</link>
                </entry>editable<entry align="left">
                  <link linkend="gui_attr_filter_paramView">paramView</link>
                </entry></row>
              <row>
                <entry>
                  <link linkend="gui_attr_filter_name">name</link>
                </entry>
                <entry align="left">
                  <link linkend="gui_attr_filter_paramWhere">paramWhere</link>
                </entry>
              </row>
            </tbody></tgroup>
        </informaltable>
        <para>Атрибуты элемента <sgmltag>custom</sgmltag>:</para>
        <informaltable frame="none" pgwide="0" align="left">
          <tgroup cols="3" colsep="1" rowsep="1" align="left"><colspec colname="c1"/><colspec colname="c2"/><colspec colname="c3"/>c <tbody>
              <row><entry align="left">
                  <link linkend="gui_attr_filter_custom_caption">caption</link>
                </entry>editable<entry align="left">
                  <link linkend="gui_attr_filter_custom_name">name</link>
                </entry><entry align="left">
                  <link linkend="gui_attr_filter_paramWhere">paramWhere</link>
                </entry></row>
              <row>
                <entry>
                  <link linkend="gui_attr_filter_custom_inExpr">inExpr</link>
                </entry>
                <entry>
                  <link linkend="gui_attr_filter_custom_paramClass">paramClass</link>
                </entry>
              </row>
              <row>
                <entry align="left">
                  <link linkend="gui_attr_filter_custom_join">join</link>
                </entry>
                <entry align="left">
                  <link linkend="gui_attr_filter_paramView">paramView</link>
                </entry>
              </row>
            </tbody></tgroup>
        </informaltable>
      </section>
      <section id="gui_Filter_permissions">
        <title>Права пользователей</title>
        <itemizedlist>
          <listitem>
            <para>Для создания/изменения/удаления глобальных (доступных всем пользователям) фильтров пользователь должен иметь разрешение <property>cuba.gui.filter.global</property>.</para>
          </listitem>
          <listitem>
            <para>Для создания/изменения<code> custom</code> условий пользователь должен иметь разрешение <property>cuba.gui.filter.customConditions</property>.</para>
          </listitem>
          <listitem>
            <para>Чтобы иметь возможность изменять максимальное количество строк на странице таблицы с помощью флажка и поля  <guilabel>Show first N rows</guilabel> пользователь должен иметь разрешение <property>cuba.gui.filter.maxResults</property>. См. также атрибут фильтра <link linkend="gui_attr_filter_useMaxResults">useMaxResults</link>.</para>
          </listitem>
        </itemizedlist>
        <para>Информация о том, как настраивать  специфические разрешения, приведена в руководстве <productname>Подсистема безопасности</productname>.</para>
      </section>
      <section id="gui_Filter_ext_params">
        <title>Внешние параметры для управления фильтрами</title>
        <para><emphasis role="bold">Общесистемные параметры</emphasis></para>
        <para>Следующие свойства приложения влияют на поведение фильтров:</para>
        <itemizedlist>
          <listitem>
            <para><link linkend="cuba.gui.genericFilterManualApplyRequired">cuba.gui.genericFilterManualApplyRequired</link>  − позволяет отключить автоматическое применение фильтра (то есть загрузку данных) сразу при открытии экрана.</para>
          </listitem>
          <listitem>
            <para><link linkend="cuba.gui.genericFilterChecking">cuba.gui.genericFilterChecking</link> − позволяет
                включить проверку заполненности хотя-бы одного условия перед применением фильтра.</para>
          </listitem>
          <listitem>
            <para><link linkend="cuba.gui.genericFilterControlsLayout">cuba.gui.genericFilterControlsLayout</link> −
              определяет расположение элементов внутри фильтра.</para>
          </listitem>
          <listitem>
            <para><link linkend="cuba.allowQueryFromSelected">cuba.allowQueryFromSelected</link> позволяет отключить механизм  <link linkend="sequential_filter_para">последовательного наложения фильтров</link>.</para>
          </listitem>
          <listitem>
            <para><link linkend="cuba.cuba.gui.genericFilterColumnsQty">cuba.gui.genericFilterColumnsQty</link> - задает количество колонок по умолчанию для размещения условий фильтра.</para>
          </listitem>
          <listitem>
            <para><link linkend="cuba.gui.genericFilterConditionsLocation">cuba.gui.genericFilterConditionsLocation</link> - задает расположение панели условий.</para>
          </listitem>
          <listitem>
            <para><link linkend="cuba.gui.genericFilterPopupListSize">cuba.gui.genericFilterPopupListSize</link> - задает количество позиций в выпадающем списке кнопки <guibutton>Search</guibutton>.</para>
          </listitem>
        </itemizedlist>
        <para><emphasis role="bold">Параметры вызова экрана</emphasis></para>
        <para>При вызове экрана можно указать, какой фильтр и с какими параметрами должен быть применен сразу после открытия экрана. Для этого фильтр должен быть заранее создан, сохранен в базе данных,  и соответствующая запись в таблице <database>SEC_FILTER</database> должна иметь заполненное поле <database>CODE</database>.</para>
        <para>Для указания кода фильтра в экран следует передать параметр с именем, равным идентификатору компонента фильтра в данном экране. Значением параметра должен быть код фильтра, который нужно установить и применить.</para>
        <para>Для установки значений параметров фильтра в экран нужно передать параметры с именами, равными именам параметров, и значения в виде строк.</para>
        <para>Пример описателя пункта главного меню, устанавливающего в открываемом экране <code>sample$Car.browse</code> в компоненте <code>carsFilter</code> фильтр с кодом <userinput>FilterByVIN</userinput>, с подстановкой в параметр условия <code>component$carsFilter.vin79216</code> значения <userinput>TMA</userinput>:<programlisting language="xml">&lt;item id=&quot;sample$Car.browse&quot;&gt;
&lt;param name=&quot;carsFilter&quot; value=&quot;FilterByVIN&quot;/&gt;
&lt;param name=&quot;component$carsFilter.vin79216&quot; value=&quot;TMA&quot;/&gt;
&lt;/item&gt;</programlisting></para>
        <para>Следует отметить, что фильтр с установленным полем <database>CODE</database> обладает особыми свойствами:</para>
        <itemizedlist>
          <listitem>
            <para>Его не могут редактировать пользователи.</para>
          </listitem>
          <listitem>
            <para>Название такого фильтра можно отображать на нескольких языках. Для этого в <link linkend="main_message_pack">главном пакете сообщений</link> приложения должна быть строка с ключом, равным коду фильтра.</para>
          </listitem>
        </itemizedlist>
      </section>
      <section id="sequential_filter">
        <title>Последовательное наложение фильтров</title>
        <para id="sequential_filter_para"><emphasis role="bold">Последовательное наложение фильтров</emphasis></para>
        <para>При включенном свойстве приложения <link linkend="cuba.allowQueryFromSelected">cuba.allowQueryFromSelected</link> в пользовательском интерфейсе компонента можно закреплять последний примененный фильтр и текущие результаты фильтрации. После этого можно выбрать другой фильтр или параметры и применить их на уже выбранных записях.</para>
        <para>Данный подход позволяет решить две проблемы:</para>
        <itemizedlist>
          <listitem>
            <para>Декомпозировать сложные фильтры.</para>
          </listitem>
          <listitem>
            <para>Применять фильтры на записи, отобранные с помощью папок <link linkend="application_folder">приложения</link> или <link linkend="search_folder">поиска</link>.</para>
          </listitem>
        </itemizedlist>
        <para>Чтобы применить этот механизм в пользовательском интерфейсе, выберите и примените один из фильтров. Затем нажмите на кнопку настроек фильтра и выберите
            <guibutton>Pin applied (Закрепить)</guibutton>. Фильтр закрепится в верхней части панели фильтров. Далее можно применить к выбранным записям другой фильтр. Так последовательно можно накладывать друг на друга любое количество фильтров. Также фильтры можно удалять последовательно с помощью кнопки <inlinemediaobject>
            <imageobject>
              <imagedata fileref="img/gui_filter_remove.png"/>
            </imageobject>
          </inlinemediaobject></para>
        <mediaobject>
          <imageobject>
            <imagedata align="center" fileref="img/gui_filter_sequential.png"/>
          </imageobject>
        </mediaobject>
        <para>Механизм последовательного наложения фильтров основан на возможности <link linkend="dataManager">DataManager</link> выполнять <link linkend="query_from_selected">последовательные запросы</link>.</para>
      </section>
    </section>
    <section id="gui_GroupTable">
      <title>GroupTable</title>
      <para>Компонент <code>GroupTable</code> - это таблица с возможностью динамической группировки по любому полю. Для того чтобы сгруппировать таблицу по какой-либо колонке, нужно в заголовке таблицы перетащить эту колонку в позицию слева от элемента <inlinemediaobject>
          <imageobject>
            <imagedata fileref="img/gui_groupTableIcon.png"/>
          </imageobject>
        </inlinemediaobject>. Сгруппированные значения можно разворачивать и сворачивать с помощью кнопок <inlinemediaobject>
          <imageobject>
            <imagedata fileref="img/gui_groupBox_plus.png"/>
          </imageobject>
        </inlinemediaobject>/<inlinemediaobject>
          <imageobject>
            <imagedata fileref="img/gui_groupBox_minus.png"/>
          </imageobject>
        </inlinemediaobject>.</para>
      <mediaobject>
        <imageobject>
          <imagedata align="center" fileref="img/gui_groupTableDragColumn.png"/>
        </imageobject>
      </mediaobject>
      <para>XML-имя компонента: <sgmltag>groupTable</sgmltag>.</para>
      <mediaobject>
        <imageobject>
          <imagedata align="center" fileref="img/gui_GroupTable_dia.png"/>
        </imageobject>
      </mediaobject>
      <para>Компонент реализован только для блока <structname>Web Client</structname>. В <structname>Desktop Client</structname> ведет себя как обычная таблица.</para>
      <para>Для    <code>GroupTable</code> в атрибуте <code>datasource</code> элемента <code>rows</code> должен быть указан <link linkend="datasources">groupDatasource</link>. В противном случае группировка работать не будет.</para>
      <para>Пример использования:<programlisting language="xml">&lt;dsContext&gt;
&lt;groupDatasource id=&quot;ordersDs&quot; class=&quot;com.sample.sales.entity.Order&quot;
                view=&quot;orderWithCustomer&quot;&gt;
   &lt;query&gt;
       select o from sales$Order o order by o.date
   &lt;/query&gt;
&lt;/groupDatasource&gt;
&lt;/dsContext&gt;
&lt;layout&gt;
&lt;groupTable id=&quot;ordersTable&quot; width=&quot;100%&quot;&gt;
    &lt;columns&gt;
        &lt;group&gt;
            &lt;column id=&quot;date&quot;/&gt;
        &lt;/group&gt;
        &lt;column id=&quot;customer.name&quot;/&gt;
        &lt;column id=&quot;amount&quot;/&gt;
    &lt;/columns&gt;
    &lt;rows datasource=&quot;ordersDs&quot;/&gt;
&lt;/groupTable&gt;</programlisting></para>
      <para id="gui_element_groupTable_group"><sgmltag>group</sgmltag> − необязательный элемент, может в единственном экземпляре находиться внутри <link linkend="gui_element_table_columns">columns</link>. Содержит набор элементов <code>column</code>, по которым будет выполняться первоначальная группировка при открытии экрана.</para>
      <para>При включенном атрибуте <code>aggregatable</code> таблица отображает результаты агрегации по всем строкам в дополнительной строке вверху, а также результаты агрегации по группам. Отображение агрегации по всем строкам можно отключить, установив <code>false</code> в атрибуте <code>showTotalAggregation</code>.</para>
      <para>В остальном функциональность <code>GroupTable</code> аналогична простой таблице <link linkend="gui_Table">Table</link>.</para>
      <para>Атрибуты <sgmltag>groupTable</sgmltag>:</para>
      <informaltable frame="none" pgwide="0" align="left">
        <tgroup cols="4" colsep="1" rowsep="1" align="left"><colspec colname="c1"/><colspec colname="c2"/><colspec colname="c3"/><colspec colname="c4"/>c <tbody>
            <row><entry align="left">
                <link linkend="gui_attr_table_allowPopupMenu">allowPopupMenu</link>
              </entry><entry align="left">
                <link linkend="gui_attr_basic_height">height</link>
              </entry><entry>
                <link linkend="gui_attr_table_reorderingAllowed">reorderingAllowed</link>
              </entry><entry>
                <link linkend="gui_attr_basic_width">width</link>
              </entry>editable</row>
            <row>
              <entry>
                <link linkend="gui_attr_table_columnControlVisible">columnControlVisible</link>
              </entry>
              <entry align="left">
                <link linkend="gui_attr_basic_id">id</link>
              </entry>
              <entry align="left">
                <link linkend="gui_attr_table_sortable">sortable</link>
              </entry>
            </row>
            <row>
              <entry>
                <link linkend="gui_attr_basic_editable">editable</link>
              </entry>
              <entry align="left">
                <link linkend="gui_attr_table_multiselect">multiselect</link>
              </entry>
              <entry>
                <link linkend="gui_attr_basic_stylename">stylename</link>
              </entry>
            </row>
            <row>
              <entry align="left">
                <link linkend="gui_attr_basic_enable">enable</link>
              </entry>
              <entry>
                <link linkend="gui_attr_table_presentations">presentations</link>
              </entry>
              <entry>
                <link linkend="gui_attr_basic_visible">visible</link>
              </entry>
            </row>
          </tbody></tgroup>
      </informaltable>
      <para>Элементы <sgmltag>groupTable</sgmltag>:</para>
      <informaltable frame="none" pgwide="0" align="left">
        <tgroup cols="1" colsep="1" rowsep="1" align="left">
          <colspec colname="c1"/>
          <tbody>
            <row>
              <entry>
                <link linkend="gui_element_table_actions">actions</link>
              </entry>
            </row>
            <row>buttonsPanel<entry>
                <link linkend="gui_ButtonsPanel">buttonsPanel</link>
              </entry></row>
            <row>
              <entry>
                <link linkend="gui_element_table_columns">columns</link>
              </entry>
            </row>
            <row>
              <entry>
                <link linkend="gui_element_table_rows">rows</link>
              </entry>
            </row>
            <row>
              <entry>
                <link linkend="gui_attr_table_rowsCount">rowsCount</link>
              </entry>
            </row>
          </tbody>
        </tgroup>
      </informaltable>
      <para>Элементы <sgmltag>columns</sgmltag>:</para>
      <informaltable frame="none" align="left">
        <tgroup cols="1">
          <colspec colname="c1"/>
          <tbody>
            <row>
              <entry>
                <link linkend="gui_element_table_columns">column</link>
              </entry>
            </row>
            <row>
              <entry>
                <link linkend="gui_element_groupTable_group">group</link>
              </entry>
            </row>
          </tbody>
        </tgroup>
      </informaltable>
      <para>Атрибуты  <link linkend="gui_element_table_columns">column</link>:</para>
      <informaltable frame="none" pgwide="0" align="left">
        <tgroup cols="4" colsep="1" rowsep="1" align="left"><colspec colname="c1"/><colspec colname="c2"/><colspec colname="c3"/><colspec colname="c4"/>c <tbody>
            <row>
              <entry align="left">
                <link linkend="gui_attr_table_column_caption">caption</link>
              </entry>
              <entry align="left">
                <link linkend="gui_attr_dateField_dateFormat">dateFormat</link>
              </entry>
              <entry>
                <link linkend="gui_attr_dateField_resolution">resolution</link>
              </entry>
            </row>
            <row>
              <entry align="left">
                <link linkend="gui_attr_basic_captionProperty">captionProperty</link>
              </entry>
              <entry>
                <link linkend="gui_attr_table_column_editable">editable</link>
              </entry>
              <entry>
                <link linkend="gui_attr_basic_visible">visible</link>
              </entry>
            </row>
            <row>
              <entry align="left">
                <link linkend="gui_attr_basic_clickAction">clickAction</link>
              </entry>
              <entry align="left">
                <link linkend="gui_attr_table_column_id">id</link>
              </entry>
              <entry>
                <link linkend="gui_attr_table_column_width">width</link>
              </entry>
            </row>
            <row>
              <entry align="left">
                <link linkend="gui_attr_table_column_collapsed">collapsed</link>
              </entry>
              <entry align="left">
                <link linkend="gui_attr_basic_optionsDatasource">optionsDatasource</link>
              </entry>
            </row>
          </tbody></tgroup>
      </informaltable>
      <para>Элементы  <link linkend="gui_element_table_columns">column</link>:</para>
      <informaltable frame="none" pgwide="0" align="left">
        <tgroup cols="1" colsep="1" rowsep="1" align="left"><colspec colname="c1"/>c <tbody>
            <row><entry align="left">
                <link linkend="gui_formatter">formatter</link>
              </entry>editable</row>
          </tbody></tgroup>
      </informaltable>
      <para>Атрибуты <link linkend="gui_element_table_rows">rows</link>:</para>
      <informaltable frame="none" pgwide="0" align="left">
        <tgroup cols="1" colsep="1" rowsep="1" align="left"><colspec colname="c1"/>c <tbody>
            <row><entry align="left">
                <link linkend="gui_attr_basic_datasource">datasource</link>
              </entry>editable</row>
          </tbody></tgroup>
      </informaltable>
    </section>
    <section id="gui_Label">
      <title>Label</title>
      <para>Надпись (<code>Label</code>) − текстовый компонент, отображающий  статический текст либо значение атрибута сущности.</para>
      <para>XML-имя компонента: <sgmltag>label</sgmltag></para>
      <mediaobject>
        <imageobject>
          <imagedata align="center" fileref="img/gui_label_dia.png"/>
        </imageobject>
      </mediaobject>
      <para>Компонент <code>Label</code> реализован для блоков <structname>Web Client</structname> и <structname>Desktop Client</structname>.</para>
      <para>Пример задания надписи с текстом, взятым из <link linkend="message_packs">пакета локализованных сообщений</link>:<programlisting language="xml">&lt;label value=&quot;msg://orders&quot;/&gt;</programlisting></para>
      <para id="gui_attr_label_value">Атрибут <sgmltag>value</sgmltag> предназначен для задания текста надписи. </para>
      <para>В веб клиенте текст, содержащийся в атрибуте <sgmltag>value</sgmltag>, будет разбит на несколько строк, если по длине он превысит значение атрибута <link linkend="gui_attr_basic_width">width</link>. Поэтому для отображения  многострочной надписи, достаточно указать абсолютное значение атрибута <link linkend="gui_attr_basic_width">width</link>. Если текст надписи слишком длинный, а значение атрибута <link linkend="gui_attr_basic_width">width</link> не определено, то текст будет урезан.<programlisting language="xml">&lt;label
   value=&quot;Надпись, которая должна быть разбита на несколько строк&quot;
   width=&quot;200px&quot;/&gt;</programlisting></para>
      <para>Параметры надписи можно задать в контроллере экрана. Для этого необходимо задать компоненту идентификатор, по которому получить ссылку на него в контроллере:<programlisting language="xml">&lt;label id=&quot;dynamicLabel&quot;/&gt;</programlisting><programlisting>@Inject
private Label dynamicLabel;

public void init(Map&lt;String, Object&gt; params) {
dynamicLabel.setValue(&quot;Some value&quot;);
}</programlisting></para>
      <para>Компонент <code>Label</code> может отображать значение атрибута сущности. Для этого используются атрибуты <link linkend="gui_attr_basic_datasource">datasource</link> и <link linkend="gui_attr_basic_property">property</link>. Например:<programlisting language="xml">&lt;dsContext&gt;
&lt;datasource id=&quot;customerDs&quot; class=&quot;com.sample.sales.entity.Customer&quot; view=&quot;_local&quot;/&gt;
&lt;/dsContext&gt;
&lt;layout&gt;
...
&lt;label datasource=&quot;customerDs&quot; property=&quot;name&quot;/&gt;</programlisting></para>
      <para>В данном случае компонент отображает атрибут <code>name</code> сущности <code>Customer</code>, находящейся в источнике данных <code>customerDs</code>.</para>
      <para id="gui_attr_label_htmlEnabled">Атрибут <sgmltag>htmlEnabled</sgmltag> указывает, каким образом будет рассматриваться значение атрибута <link linkend="gui_attr_label_value">value</link>: как <code>html</code>-код, при <code>htmlEnabled=&quot;true&quot;</code>, или как строка. Обратите внимание, что не все <code>html</code>-теги поддерживаются в десктоп-реализации экрана. </para>
      <para>Атрибуты <sgmltag>label</sgmltag>:</para>
      <informaltable frame="none" pgwide="0" align="left">
        <tgroup cols="4" colsep="1" rowsep="1" align="left"><colspec colname="c1"/><colspec colname="c2"/><colspec colname="c3"/><colspec colname="c4"/>c <tbody>
            <row>
              <entry align="left">
                <link linkend="gui_attr_basic_align">align</link>
              </entry>
              <entry align="left">
                <link linkend="gui_attr_label_htmlEnabled">htmlEnabled</link>
              </entry>
              <entry align="left">
                <link linkend="gui_attr_label_value">value</link>
              </entry>
            </row>
            <row>
              <entry>
                <link linkend="gui_attr_basic_datasource">datasource</link>
              </entry>
              <entry align="left">
                <link linkend="gui_attr_basic_id">id</link>
              </entry>
              <entry align="left">
                <link linkend="gui_attr_basic_visible">visible</link>
              </entry>
            </row>
            <row>
              <entry align="left">
                <link linkend="gui_attr_basic_enable">enable</link>
              </entry>
              <entry align="left">
                <link linkend="gui_attr_basic_property">property</link>
              </entry>
              <entry>
                <link linkend="gui_attr_basic_width">width</link>
              </entry>
            </row>
            <row>
              <entry align="left">
                <link linkend="gui_attr_basic_height">height</link>
              </entry>
              <entry align="left">
                <link linkend="gui_attr_basic_stylename">stylename</link>
              </entry>
            </row>
          </tbody></tgroup>
      </informaltable>
      <para>Элементы <sgmltag>label</sgmltag>:</para>
      <informaltable frame="none" pgwide="0" align="left">
        <tgroup cols="1" colsep="1" rowsep="1" align="left">
          <colspec colname="c1"/>
          <tbody>
            <row>
              <entry align="left">
                <link linkend="gui_formatter">formatter</link>
              </entry>
            </row>
          </tbody>
        </tgroup>
      </informaltable>
    </section>
    <section id="gui_Link">
      <title>Link</title>
      <para>Ссылка (<code>Link</code>) − компонент-гиперссылка, позволяющая открывать внешние веб-ресурсы единообразно для веб и десктоп клиента.</para>
      <para>XML-имя компонента: <sgmltag>link</sgmltag></para>
      <mediaobject>
        <imageobject>
          <imagedata align="center" fileref="img/gui_link_dia.png"/>
        </imageobject>
      </mediaobject>
      <para>Пример XML-описания компонента <code>link</code>: <programlisting language="xml">&lt;link caption=&quot;Link&quot; url=&quot;https://www.cuba-platform.com&quot; target=&quot;_blank&quot;/&gt;</programlisting></para>
      <para>Атрибуты <sgmltag>link</sgmltag>:
        <itemizedlist>
          <listitem>
            <para><code>url</code> - адрес ресурса.</para>
          </listitem>
          <listitem>
            <para><code>target</code> - для веб клиента задает способ открытия страницы, аналогичен атрибуту <code>target</code> HTML-тега <code>&lt;a&gt;</code>.</para>
          </listitem>
        </itemizedlist>
      </para>
      <para>Другие атрибуты <code>Link</code>:
        <link linkend="gui_attr_basic_align">align</link> |
        <link linkend="gui_attr_basic_caption">caption</link> |
        <link linkend="gui_attr_basic_description">description</link> |
        <link linkend="gui_attr_basic_enable">enable</link> |
        <link linkend="gui_attr_basic_id">id</link> |
        <link linkend="gui_attr_basic_icon">icon</link> |
        <link linkend="gui_attr_basic_stylename">stylename</link> |
        <link linkend="gui_attr_basic_visible">visible</link> |
        <link linkend="gui_attr_basic_width">width</link>
      </para>
    </section>
    <section id="gui_LinkButton">
      <title>LinkButton</title>
      <para>Кнопка-ссылка (<code>LinkButton</code>) − кнопка, выглядящая как гиперссылка.</para>
      <para>XML-имя компонента: <sgmltag>linkButton</sgmltag></para>
      <mediaobject>
        <imageobject>
          <imagedata align="center" fileref="img/gui_linkButton_dia.png"/>
        </imageobject>
      </mediaobject>
      <para>Компонент кнопки-ссылки реализован для блоков <structname>Web Client</structname> и <structname>Desktop Client</structname>.</para>
      <para>Кнопка-ссылка  может содержать  текст или пиктограмму (или и то и другое). На рисунке ниже отражены разные виды кнопок.</para>
      <mediaobject>
        <imageobject>
          <imagedata align="center" fileref="img/gui_linkButtonTypes.png"/>
        </imageobject>
      </mediaobject>
      <para>Кнопка-ссылка отличается от обычной кнопки <code>Button</code> только своим внешним видом. Все свойства и поведение идентичны <link linkend="gui_Button">описанным для Button</link>.</para>
      <para>Пример XML-описания кнопки-ссылки, вызывающей метод <code>someMethod()</code> контроллера,  с надписью (атрибут <link linkend="gui_attr_basic_caption">caption</link>),  всплывающей подсказкой (атрибут <link linkend="gui_attr_basic_description">description</link>) и  пиктограммой (атрибут <link linkend="gui_attr_basic_icon">icon</link>): <programlisting language="xml">&lt;linkButton id=&quot;linkButton&quot;
        caption=&quot;msg://linkButton&quot;
        description=&quot;Press me&quot;
        icon=&quot;icons/save.png&quot;
        invoke=&quot;someMethod&quot;/&gt;</programlisting></para>
      <para>Атрибуты <sgmltag>linkButton</sgmltag>:</para>
      <informaltable frame="none" pgwide="0" align="left">
        <tgroup cols="4" colsep="1" rowsep="1" align="left"><colspec colname="c1"/><colspec colname="c2"/><colspec colname="c3"/><colspec colname="c4"/>c <tbody>
            <row>
              <entry align="left">
                <link linkend="gui_attr_button_action">action</link>
              </entry>
              <entry align="left">
                <link linkend="gui_attr_basic_enable">enable</link>
              </entry>
              <entry align="left">
                <link linkend="gui_attr_basic_stylename">stylename</link>
              </entry>
            </row>
            <row>
              <entry>
                <link linkend="gui_attr_basic_align">align</link>
              </entry>
              <entry align="left">
                <link linkend="gui_attr_basic_icon">icon</link>
              </entry>
              <entry align="left">
                <link linkend="gui_attr_basic_visible">visible</link>
              </entry>
            </row>
            <row>
              <entry align="left">
                <link linkend="gui_attr_basic_caption">caption</link>
              </entry>
              <entry align="left">
                <link linkend="gui_attr_basic_id">id</link>
              </entry>
              <entry>
                <link linkend="gui_attr_basic_width">width</link>
              </entry>
            </row>
            <row>
              <entry align="left">
                <link linkend="gui_attr_basic_description">description</link>
              </entry>
              <entry align="left">
                <link linkend="gui_attr_button_invoke">invoke</link>
              </entry>
            </row>
          </tbody></tgroup>
      </informaltable>
    </section>
    <section id="gui_LookupField">
      <title>LookupField</title>
      <para>Компонент для выбора значения из выпадающего списка. Выпадающий список реализует фильтрацию значений по мере ввода пользователя и постраничный вывод доступных значений.</para>
      <mediaobject>
        <imageobject>
          <imagedata align="center" fileref="img/gui_lookupField.png"/>
        </imageobject>
      </mediaobject>
      <para>XML-имя компонента: <sgmltag>lookupField</sgmltag>.</para>
      <mediaobject>
        <imageobject>
          <imagedata align="center" fileref="img/gui_LookupField_dia.png"/>
        </imageobject>
      </mediaobject>
      <para>Компонент LookupField реализован для блоков <structname>Web Client</structname> и <structname>Desktop Client</structname>.</para>
      <itemizedlist>
        <listitem>
          <para>Простейший вариант использования <code>LookupField</code> - выбор значения перечисления (<code>enum</code>) для атрибута сущности. Например, сущность <code>Role</code> имеет атрибут <code>type</code> типа <code>RoleType</code>, который является перечислением. Тогда для редактирования этого атрибута можно использовать <code>LookupField</code> следующим образом:<programlisting language="xml">&lt;dsContext&gt;
&lt;datasource id=&quot;roleDs&quot; class=&quot;com.haulmont.cuba.security.entity.Role&quot; view=&quot;_local&quot;/&gt;
&lt;/dsContext&gt;
&lt;layout&gt;
&lt;lookupField datasource=&quot;roleDs&quot; property=&quot;type&quot;/&gt;</programlisting></para>
          <para>Как видно из примера, в экране описывается <link linkend="datasources">источник данных</link> <literal>roleDs</literal> для сущности <code>Role</code>. В компоненте <code>lookupField</code>  в атрибуте <link linkend="gui_attr_basic_datasource">datasource</link> указывается ссылка на источник данных, а в атрибуте <link linkend="gui_attr_basic_property">property</link> − название атрибута сущности, значение которого должно быть отображено. В данном случае атрибут является перечислением, и в выпадающем списке будут отображены <link linkend="enum_localization">локализованные названия</link> всех значений этого перечисления.</para>
        </listitem>
        <listitem>
          <para>Аналогично можно использовать <code>LookupField</code> для выбора экземпляра связанной сущности. Для формирования списка опций используется атрибут <link linkend="gui_attr_basic_optionsDatasource">optionsDatasource</link>:<programlisting language="xml">&lt;dsContext&gt;
&lt;datasource id=&quot;carDs&quot; class=&quot;com.company.sample.entity.Car&quot; view=&quot;_local&quot;/&gt;
&lt;collectionDatasource id=&quot;coloursDs&quot; class=&quot;com.company.sample.entity.Colour&quot; view=&quot;_local&quot;&gt;
    &lt;query&gt;select c from sample$Colour c&lt;/query&gt;
&lt;/collectionDatasource&gt;
&lt;/dsContext&gt;
&lt;layout&gt;
&lt;lookupField datasource=&quot;carDs&quot; property=&quot;colour&quot; optionsDatasource=&quot;coloursDs&quot;/&gt;</programlisting></para>
          <para>В данном случае компонент отобразит отобразит <link linkend="namePattern">имена экземпляров</link> сущности <code>Colour</code>, находящихся в источнике данных <code>colorsDs</code>, а выбранное значение подставится в атрибут <code>colour</code> сущности <code>Car</code>, находящейся в источнике данных <code>carDs</code>.</para>
          <para>С помощью атрибута <link linkend="gui_attr_basic_captionProperty">captionProperty</link> можно указать, какой атрибут сущности использовать вместо имени экземпляра для строковых названий опций. </para>
        </listitem>
        <listitem>
          <para>Список опций компонента может быть задан произвольно с помощью методов <code>setOptionsList()</code> и <code>setOptionsMap()</code>, либо с помощью XML-атрибута <code>optionsDatasource</code>.</para>
          <itemizedlist>
            <listitem>
              <para>Метод <code>setOptionsList()</code> позволяет программно задать список опций компонента. Для этого объявляем компонент в XML-дескрипторе:</para>
              <programlisting language="xml">&lt;lookupField id=&quot;numberOfSeatsField&quot; datasource=&quot;modelDs&quot; property=&quot;numberOfSeats&quot;/&gt;</programlisting>
              <para>Затем инжектируем компонент в контроллер и в методе <code>init()</code> задаем ему список опций:<programlisting>@Inject
protected LookupField numberOfSeatsField;

@Override
public void init(Map&lt;String, Object&gt; params) {
List&lt;Integer&gt; list = new ArrayList&lt;&gt;();
list.add(2);
list.add(4);
list.add(5);
list.add(7);
numberOfSeatsField.setOptionsList(list);
}</programlisting></para>
              <para>В выпадающем списке компонента отобразятся числа 2, 4, 5, 7. Выбранное число подставится в атрибут <code>numberOfSeats</code> сущности, находящейся в источнике данных <code>modelDs</code>.</para>
            </listitem>
            <listitem>
              <para>Метод <code>setOptionsMap()</code> позволяет задать строковые названия и значения опций по отдельности. Например, для описанного в XML-дескрипторе компонента <code>numberOfSeatsField</code> в методе <code>init()</code> контроллера задаем мэп опций:<programlisting language="java">@Inject
protected LookupField numberOfSeatsField;

@Override
public void init(Map&lt;String, Object&gt; params) {
Map&lt;String, Object&gt; map = new LinkedHashMap&lt;&gt;();
map.put(&quot;two&quot;, 2);
map.put(&quot;four&quot;, 4);
map.put(&quot;five&quot;, 5);
map.put(&quot;seven&quot;, 7);
numberOfSeatsField.setOptionsMap(map);
}</programlisting></para>
              <para>В выпадающем списке компонента отобразятся строки <userinput>two</userinput>, <userinput>four</userinput>, <userinput>five</userinput>, <userinput>seven</userinput>. Однако значением компонента будет число, соответствующее выбранной строке. Оно и подставится в атрибут <code>numberOfSeats</code> сущности, находящейся в источнике данных <code>modelDs</code>.</para>
            </listitem>
          </itemizedlist>
        </listitem>
        <listitem>
          <para id="gui_attr_lookupField_filterMode">С помощью атрибута <sgmltag>filterMode</sgmltag> можно задать тип фильтрации опций при вводе пользователя:</para>
          <itemizedlist>
            <listitem>
              <para><literal>NO</literal> − нет фильтрации.</para>
            </listitem>
            <listitem>
              <para><literal>STARTS_WITH</literal> − по началу фразы.</para>
            </listitem>
            <listitem>
              <para><literal>CONTAINS</literal> − по любому вхождению (используется по умолчанию).</para>
            </listitem>
          </itemizedlist>
        </listitem>
        <listitem>
          <para>Если у компонента <code>LookupField</code> не установлен атрибут <link linkend="gui_attr_basic_required">required</link>, и если связанный атрибут сущности не объявлен как обязательный, то в списке опций компонента присутствует пустая строка, при выборе которой компонент возвращает значение <code>null</code>. Атрибут <link linkend="gui_attr_nullName">nullName</link> позволяет задать строку, отображаемую в этом случае вместо пустой. Пример использования:<programlisting language="xml">&lt;lookupField datasource=&quot;carDs&quot; property=&quot;colour&quot; optionsDatasource=&quot;coloursDs&quot; nullName=&quot;(none)&quot;/&gt;</programlisting></para>
          <para>В данном случае вместо пустой строки отобразится строка <userinput>(none)</userinput>, при выборе которой в связанный атрибут сущности подставится значение <code>null</code>.</para>
          <para>При программном задании списка опций методом <code>setOptionsList()</code> можно одну из опций передать в метод <code>setNullOption()</code>. Тогда при ее выборе пользователем значением компонента будет <code>null</code>.</para>
        </listitem>
        <listitem id="gui_attr_newOptionHandler">
          <para>Компонент <code>LookupField</code>  способен обрабатывать ввод пользователя при отсутствии подходящей опции в списке. Для этого используются методы <code>setNewOptionAllowed()</code> и <code>setNewOptionHandler()</code>. Например:<programlisting language="java">@Inject
protected LookupField colourField;

@Inject
protected CollectionDatasource&lt;Colour, UUID&gt; coloursDs;

@Override
public void init(Map&lt;String, Object&gt; params) {
colourField.setNewOptionAllowed(true);
colourField.setNewOptionHandler(new LookupField.NewOptionHandler() {
    @Override
    public void addNewOption(String caption) {
        Colour colour = new Colour();
        colour.setName(caption);
        coloursDs.addItem(colour);
        colourField.setValue(colour);
    }
});
}</programlisting></para>
          <para>Обработчик <code>NewOptionHandler</code> вызывается, если пользователь ввел некоторое значение, не совпадающее ни с одной из опций, и нажал <keycap>Enter</keycap>. В данном случае в обработчике создается новый экземпляр сущности <code>Colour</code>, его атрибут <code>name</code> устанавливается в значение, введенное пользователем, этот экземпляр добавляется в источник данных опций и выбирается в компоненте.</para>
          <para>Вместо имплементации интерфейса <code>LookupField.NewOptionHandler</code> для обработки ввода пользователя можно использовать XML-атрибут <code>newOptionHandler</code> с указанным в нем методом контроллера. Данный метод должен иметь два параметра - первый типа <code>LookupField</code>, второй типа <code>String</code>. В них будут переданы соответственно экзампляр компонента и введенное пользователем значение.</para>
        </listitem>
      </itemizedlist>
      <para>Атрибуты <sgmltag>lookupField</sgmltag>: </para>
        <para>
            <link linkend="gui_attr_basic_align">align</link> |
            <link linkend="gui_attr_basic_caption">caption</link> |
            <link linkend="gui_attr_basic_captionProperty">captionProperty</link> |
            <link linkend="gui_attr_basic_datasource">datasource</link> |
            <link linkend="gui_attr_basic_description">description</link> |
            <link linkend="gui_attr_basic_editable">editable</link> |
            <link linkend="gui_attr_basic_enable">enable</link> |
            <link linkend="gui_attr_lookupField_filterMode">filterMode</link> |
            <link linkend="gui_attr_basic_height">height</link> |
            <link linkend="gui_attr_basic_id">id</link> |
            <link linkend="gui_attr_basic_inputPrompt">inputPrompt</link> |
            <link linkend="gui_attr_newOptionHandler">newOptionHandler</link> |
            <link linkend="gui_attr_nullName">nullName</link> |
            <link linkend="gui_attr_basic_optionsDatasource">optionsDatasource</link> |
            <link linkend="gui_attr_basic_property">property</link> |
            <link linkend="gui_attr_basic_required">required</link> |
            <link linkend="gui_attr_basic_requiredMessage">requiredMessage</link> |
            <link linkend="gui_attr_basic_stylename">stylename</link> |
            <link linkend="gui_attr_basic_visible">visible</link> |
            <link linkend="gui_attr_basic_width">width</link>
        </para>
      <para>Элементы <sgmltag>lookupField</sgmltag>:</para>
        <para><link linkend="gui_validator">validator</link></para>
    </section>
    <section id="gui_LookupPickerField">
      <title>LookupPickerField</title>
      <para>Компонент <code>LookupPickerField</code> позволяет отображать экземпляр сущности в текстовом поле, выбирать экземпляр в выпадающем списке и выполнять действия нажатием на кнопки справа.</para>
      <mediaobject>
        <imageobject>
          <imagedata align="center" fileref="img/gui_lookupPickerField.png"/>
        </imageobject>
      </mediaobject>
      <para>XML-имя компонента: <sgmltag>lookupPickerField</sgmltag>.</para>
      <mediaobject>
        <imageobject>
          <imagedata align="center" fileref="img/gui_LookupPickerField_dia.png"/>
        </imageobject>
      </mediaobject>
      <para>Компонент реализован для блоков <structname>Web Client</structname> и <structname>Desktop Client</structname>.</para>
      <para><code>LookupPickerField</code> является по сути гибридом <link linkend="gui_LookupField">LookupField</link> и <link linkend="gui_PickerField">PickerField</link>, поэтому все описанное для этих интерфейсов верно и для него. Исключением является список действий по умолчанию, добавляемых при определении компонента в XML: для <code>LookupPickerField</code> это действия <code>lookup</code> <inlinemediaobject>
          <imageobject>
            <imagedata fileref="img/lookupBtn.png"/>
          </imageobject>
        </inlinemediaobject> и <code>open</code> <inlinemediaobject>
          <imageobject>
            <imagedata fileref="img/openBtn.png"/>
          </imageobject>
        </inlinemediaobject>.</para>
      <para>Пример использования <code>LookupPickerField</code> для выбора значения ссылочного атрибута <code>colour</code> сущности <code>Car</code>:<programlisting language="xml">&lt;dsContext&gt;
&lt;datasource id=&quot;carDs&quot; class=&quot;com.company.sample.entity.Car&quot; view=&quot;_local&quot;/&gt;
&lt;collectionDatasource id=&quot;coloursDs&quot; class=&quot;com.company.sample.entity.Colour&quot; view=&quot;_local&quot;&gt;
    &lt;query&gt;select c from sample$Colour c&lt;/query&gt;
&lt;/collectionDatasource&gt;
&lt;/dsContext&gt;
&lt;layout&gt;
&lt;lookupPickerField datasource=&quot;carDs&quot; property=&quot;colour&quot; optionsDatasource=&quot;coloursDs&quot;/&gt;</programlisting></para>
      <para>Атрибуты <sgmltag>lookupPickerField</sgmltag>: </para>
        <para>
            <link linkend="gui_attr_basic_align">align</link> |
            <link linkend="gui_attr_basic_caption">caption</link> |
            <link linkend="gui_attr_basic_captionProperty">captionProperty</link> |
            <link linkend="gui_attr_basic_datasource">datasource</link> |
            <link linkend="gui_attr_basic_description">description</link> |
            <link linkend="gui_attr_basic_editable">editable</link> |
            <link linkend="gui_attr_basic_enable">enable</link> |
            <link linkend="gui_attr_lookupField_filterMode">filterMode</link> |
            <link linkend="gui_attr_basic_height">height</link> |
            <link linkend="gui_attr_basic_id">id</link> |
            <link linkend="gui_attr_basic_inputPrompt">inputPrompt</link> |
            <link linkend="gui_attr_pickerField_metaclass">metaClass</link> |
            <link linkend="gui_attr_nullName">nullName</link> |
            <link linkend="gui_attr_basic_optionsDatasource">optionsDatasource</link> |
            <link linkend="gui_attr_basic_property">property</link> |
            <link linkend="gui_attr_basic_required">required</link> |
            <link linkend="gui_attr_basic_requiredMessage">requiredMessage</link> |
            <link linkend="gui_attr_basic_stylename">stylename</link> |
            <link linkend="gui_attr_basic_visible">visible</link> |
            <link linkend="gui_attr_basic_width">width</link>
        </para>
      <para>Элементы <sgmltag>lookupPickerField</sgmltag>:</para>
        <para>
            <link linkend="gui_Action">actions</link> |
            <link linkend="gui_validator">validator</link>
        </para>
    </section>
    <section id="gui_MaskedField">
      <title>MaskedField</title>
      <para>Текстовое поле, в которое данные вводятся в определенном формате. <code>MaskedField</code> удобно использовать, например, для ввода телефонных номеров. </para>
      <para>XML-имя компонента: <sgmltag>maskedField</sgmltag>.</para>
      <mediaobject>
        <imageobject>
          <imagedata align="center" fileref="img/gui_MaskedField_dia.png"/>
        </imageobject>
      </mediaobject>
      <para>Компонент <code>MaskedField</code> реализован только для блока <structname>Web Client</structname>.</para>
      <para><code>MaskedField</code> в основном повторяет функциональность <link linkend="gui_TextField">TextField</link>, за исключением того, что ему нельзя установить <code>datatype</code>. То есть <code>MaskedField</code> предназначен для работы только с текстом и строковыми атрибутами сущностей. <code>MaskedField</code> имеет следующие специфические атрибуты:</para>
      <itemizedlist>
        <listitem>
          <para id="gui_attr_maskedField_mask"><sgmltag>mask</sgmltag> - задает маску для поля. Чтобы задать маску, используются следующие символы:</para>
          <itemizedlist>
            <listitem>
              <para><sgmltag>#</sgmltag> - цифра</para>
            </listitem>
            <listitem>
              <para><sgmltag>U</sgmltag> -  буква верхнего регистра</para>
            </listitem>
            <listitem>
              <para><sgmltag>L</sgmltag> -  буква нижнего регистра</para>
            </listitem>
            <listitem>
              <para><sgmltag>?</sgmltag> - буква</para>
            </listitem>
            <listitem>
              <para><sgmltag>А</sgmltag> - буква или цифра</para>
            </listitem>
            <listitem>
              <para><sgmltag>*</sgmltag> - любой символ</para>
            </listitem>
            <listitem>
              <para><sgmltag>H</sgmltag> - hex символ</para>
            </listitem>
            <listitem>
              <para><sgmltag>~</sgmltag> - знак + или -</para>
            </listitem>
          </itemizedlist>
        </listitem>
        <listitem>
          <para id="gui_attr_maskedField_valueMode"><sgmltag>valueMode</sgmltag> - определяет формат возвращаемого значения (с маской, или без) и может принимать значение <sgmltag>masked</sgmltag> или <sgmltag>clear</sgmltag>.</para>
        </listitem>
      </itemizedlist>
      <para>Пример текстового поля с маской для ввода номеров телефонов: </para>
      <programlisting language="xml">&lt;maskedField id=&quot;phoneNumberField&quot; mask=&quot;(###)###-##-##&quot; valueMode=&quot;masked&quot;/&gt;
&lt;button caption=&quot;msg://showPhoneNumberBtn&quot; invoke=&quot;showPhoneNumber&quot;/&gt;</programlisting>
      <programlisting>@Inject
private MaskedField phoneNumberField;

public void showPhoneNumber(){
showNotification((String) phoneNumberField.getValue(), NotificationType.HUMANIZED);
}</programlisting>
      <mediaobject>
        <imageobject>
          <imagedata align="center" fileref="img/gui_MaskedField.png"/>
        </imageobject>
      </mediaobject>
      <mediaobject>
        <imageobject>
          <imagedata align="center" fileref="img/gui_MaskedField_maskedValueMode.png"/>
        </imageobject>
      </mediaobject>
      <para>Атрибуты <sgmltag>maskedField</sgmltag>:</para>
      <informaltable frame="none" pgwide="0" align="left">
        <tgroup cols="5" colsep="1" rowsep="1" align="left"><colspec colname="c0"/><colspec colname="c1"/><colspec colname="c2"/><colspec colname="c3"/><colspec colname="c4"/>c <tbody>
            <row><entry>
                <link linkend="gui_attr_basic_align">align</link>
              </entry><entry>
                <link linkend="gui_attr_basic_editable">editable</link>
              </entry><entry align="left">
                <link linkend="gui_attr_maskedField_mask">mask</link>
              </entry>editable<entry align="left">
                <link linkend="gui_attr_basic_requiredMessage">requiredMessage</link>
              </entry><entry align="left">
                <link linkend="gui_attr_basic_visible">visible</link>
              </entry></row>
            <row>
              <entry>
                <link linkend="gui_attr_basic_caption">caption</link>
              </entry>
              <entry>
                <link linkend="gui_attr_basic_enable">enable</link>
              </entry>
              <entry align="left">
                <link linkend="gui_attr_textField_maxLength">maxLength</link>
              </entry>
              <entry>
                <link linkend="gui_attr_basic_stylename">stylename</link>
              </entry>
              <entry>
                <link linkend="gui_attr_basic_width">width</link>
              </entry>
            </row>
            <row>
              <entry>
                <link linkend="gui_attr_basic_datasource">datasource</link>
              </entry>
              <entry align="left">
                <link linkend="gui_attr_basic_height">height</link>
              </entry>
              <entry align="left">
                <link linkend="gui_attr_basic_property">property</link>
              </entry>
              <entry>
                <link linkend="gui_attr_textField_trim">trim</link>
              </entry>
            </row>
            <row>
              <entry align="left">
                <link linkend="gui_attr_basic_description">description</link>
              </entry>
              <entry align="left">
                <link linkend="gui_attr_basic_id">id</link>
              </entry>
              <entry>
                <link linkend="gui_attr_basic_required">required</link>
              </entry>
              <entry>
                <link linkend="gui_attr_maskedField_valueMode">valueMode</link>
              </entry>
            </row>
          </tbody></tgroup>
      </informaltable>
      <para>Элементы <sgmltag>maskedField</sgmltag>:</para>
      <informaltable frame="none" pgwide="0" align="left">
        <tgroup cols="1" colsep="1" rowsep="1" align="left">
          <colspec colname="c1"/>
          <tbody>
            <row>
              <entry>
                <link linkend="gui_validator">validator</link>
              </entry>
            </row>
          </tbody>
        </tgroup>
      </informaltable>
    </section>
    <section id="gui_OptionsGroup">
      <title>OptionsGroup</title>
      <para>Компонент, который обеспечивает выбор из списка опций, используя группу переключателей для выбора единственного значения или группу флажков для выбора нескольких значений.</para>
      <mediaobject>
        <imageobject>
          <imagedata align="center" fileref="img/gui_optionsGroup.png"/>
        </imageobject>
      </mediaobject>
      <para>XML-имя компонента: <sgmltag>optionsGroup</sgmltag>.</para>
      <mediaobject>
        <imageobject>
          <imagedata align="center" fileref="img/gui_OptionsGroup_dia.png"/>
        </imageobject>
      </mediaobject>
      <para>Компонент <code>OptionsGroup</code> реализован для блоков <structname>Web Client</structname> и <structname>Desktop Client</structname>.</para>
      <itemizedlist>
        <listitem>
          <para>Простейший вариант использования <code>OptionsGroup</code> - выбор значения перечисления (<code>enum</code>) для атрибута сущности. Например, сущность <code>Role</code> имеет атрибут <code>type</code> типа <code>RoleType</code>, который является перечислением. Тогда для редактирования этого атрибута можно использовать <code>OptionsGroup</code> следующим образом:<programlisting language="xml">&lt;dsContext&gt;
&lt;datasource id=&quot;roleDs&quot; class=&quot;com.haulmont.cuba.security.entity.Role&quot; view=&quot;_local&quot;/&gt;
&lt;/dsContext&gt;
&lt;layout&gt;
&lt;optionsGroup datasource=&quot;roleDs&quot; property=&quot;type&quot;/&gt;</programlisting></para>
          <para>Как видно из примера, в экране описывается <link linkend="datasources">источник данных</link> <literal>roleDs</literal> для сущности <code>Role</code>. В компоненте <code>optionsGroup</code>  в атрибуте <link linkend="gui_attr_basic_datasource">datasource</link> указывается ссылка на источник данных, а в атрибуте <link linkend="gui_attr_basic_property">property</link> − название атрибута сущности, значение которого должно быть отображено.</para>
          <para>В результате компонент примет следующий вид:<mediaobject>
              <imageobject>
                <imagedata align="center" fileref="img/gui_optionsGroup_roleType.png"/>
              </imageobject>
            </mediaobject></para>
        </listitem>
        <listitem>
          <para>Список опций компонента может быть задан произвольно с помощью методов <code>setOptionsList()</code> и <code>setOptionsMap()</code>, либо с помощью XML-атрибута <code>optionsDatasource</code>.</para>
          <itemizedlist>
            <listitem>
              <para>Метод <code>setOptionsList()</code> позволяет программно задать список опций компонента. Для этого объявляем компонент в XML-дескрипторе:</para>
              <programlisting language="xml">&lt;optionsGroup id=&quot;numberOfSeatsField&quot;/&gt;</programlisting>
              <para>Затем инжектируем компонент в контроллер и в методе <code>init()</code> задаем ему список опций:<programlisting language="java">@Inject
protected OptionsGroup numberOfSeatsField;

@Override
public void init(Map&lt;String, Object&gt; params) {
List&lt;Integer&gt; list = new ArrayList&lt;&gt;();
list.add(2);
list.add(4);
list.add(5);
list.add(7);
numberOfSeatsField.setOptionsList(list);
}</programlisting></para>
              <para>Компонент примет следующий вид:<mediaobject>
                  <imageobject>
                    <imagedata align="center" fileref="img/gui_optionsGroup_integerList.png"/>
                  </imageobject>
                </mediaobject></para>
              <para>При этом  метод <code>getValue()</code> компонента в зависимости от выбранной опции будет возвращать  <code>Integer</code> значения 2,4,5,7.</para>
            </listitem>
            <listitem>
              <para>Метод <code>setOptionsMap()</code> позволяет задать строковые названия и значения опций по отдельности. Например, для описанного в XML-дескрипторе компонента <code>numberOfSeatsField</code> в методе <code>init()</code> контроллера задаем мэп опций:<programlisting language="java">@Inject
protected OptionsGroup numberOfSeatsField;

@Override
public void init(Map&lt;String, Object&gt; params) {
Map&lt;String, Object&gt; map = new LinkedHashMap&lt;&gt;();
map.put(&quot;two&quot;, 2);
map.put(&quot;four&quot;, 4);
map.put(&quot;five&quot;, 5);
map.put(&quot;seven&quot;, 7);
numberOfSeatsField.setOptionsMap(map);
}</programlisting></para>
              <para>Компонент примет следующий вид:<mediaobject>
                  <imageobject>
                    <imagedata align="center" fileref="img/gui_optionsGroup_integerMap.png"/>
                  </imageobject>
                </mediaobject></para>
              <para>При этом  метод <code>getValue()</code> компонента в зависимости от выбранной опции будет возвращать <code>Integer</code> значения 2,4,5,7, а не строки, отображаемые на экране.</para>
            </listitem>
            <listitem>
              <para>Компонент может брать список опций из источника данных. Для этого используется атрибут <link linkend="gui_attr_basic_optionsDatasource">optionsDatasource</link>. Например:<programlisting language="xml">&lt;dsContext&gt;
&lt;collectionDatasource id=&quot;coloursDs&quot; class=&quot;com.company.sample.entity.Colour&quot; view=&quot;_local&quot;&gt;
    &lt;query&gt;select c from sample$Colour c&lt;/query&gt;
&lt;/collectionDatasource&gt;
&lt;/dsContext&gt;
&lt;layout&gt;
&lt;optionsGroup id=&quot;coloursField&quot; optionsDatasource=&quot;coloursDs&quot;/&gt;</programlisting></para>
              <para>В данном случае компонент <code>coloursField</code> отобразит <link linkend="namePattern">имена экземпляров</link> сущности <code>Colour</code>,  находящихся в источнике данных <code>coloursDs</code>, а его метод <code>getValue()</code> вернет выбранный экземпляр сущности.</para>
              <para>С помощью атрибута <link linkend="gui_attr_basic_captionProperty">captionProperty</link> можно указать, какой атрибут сущности использовать вместо имени экземпляра для строковых названий опций.</para>
            </listitem>
          </itemizedlist>
        </listitem>
        <listitem id="gui_attr_optionsGroup_multiselect">
          <para>С помощью атрибута <sgmltag>multiselect</sgmltag> можно переключить <code>OptionsGroup</code> в режим множественного выбора. Если <code>multiselect</code> включен, то компонент отображается как группа независимых флажков, а значением компонента является список выбранных опций.</para>
          <para>Например, создадим в XML-дескрипторе экрана компонент:<programlisting language="xml">&lt;optionsGroup id=&quot;roleTypesField&quot; multiselect=&quot;true&quot;/&gt;</programlisting></para>
          <para>И в контроллере зададим для него список опций - значения перечисления <code>RoleType</code>:<programlisting language="java">@Inject
protected OptionsGroup roleTypesField;

@Override
public void init(Map&lt;String, Object&gt; params) {
roleTypesField.setOptionsList(Arrays.asList(RoleType.values()));
}</programlisting></para>
          <para>Компонент примет следующий вид:<mediaobject>
              <imageobject>
                <imagedata align="center" fileref="img/gui_optionsGroup_roleType_multi.png"/>
              </imageobject>
            </mediaobject></para>
          <para>В данном случае метод <code>getValue()</code> компонента вернет объект типа <code>java.util.List</code>, содержащий значения <code>RoleType.READONLY</code> и <code>RoleType.DENYING</code>.</para>
          <para>Этот пример иллюстрирует также способность компонента <code>OptionsGroup</code> автоматически отображать локализованные значения перечислений, входящих в модель данных приложения.</para>
        </listitem>
        <listitem>
          <para id="gui_attr_optionsGroup_orientation">Атрибут <sgmltag>orientation</sgmltag> задает расположение элементов группы. По умолчанию элементы располагаются по вертикали. Значение <literal>horizontal</literal> задает горизонтальное расположение.</para>
        </listitem>
      </itemizedlist>
      <para>Атрибуты <sgmltag>optionsGroup</sgmltag>:</para>
      <informaltable frame="none" pgwide="0" align="left">
        <tgroup cols="4" colsep="1" rowsep="1" align="left"><colspec colname="c1"/><colspec colname="c2"/><colspec colname="c3"/><colspec colname="c4"/>c <tbody>
            <row><entry align="left">
                <link linkend="gui_attr_basic_align">align</link>
              </entry>editable<entry align="left">
                <link linkend="gui_attr_basic_editable">editable</link>
              </entry><entry align="left">
                <link linkend="gui_attr_basic_optionsDatasource">optionsDatasource</link>
              </entry><entry>
                <link linkend="gui_attr_basic_stylename">stylename</link>
              </entry></row>
            <row><entry>
                <link linkend="gui_attr_basic_caption">caption</link>
              </entry><entry align="left">
                <link linkend="gui_attr_basic_enable">enable</link>
              </entry>required<entry>
                <link linkend="gui_attr_optionsGroup_orientation">orientation</link>
              </entry><entry>
                <link linkend="gui_attr_basic_visible">visible</link>
              </entry></row>
            <row>
              <entry align="left">
                <link linkend="gui_attr_basic_captionProperty">captionProperty</link>
              </entry>
              <entry align="left">
                <link linkend="gui_attr_basic_height">height</link>
              </entry>
              <entry>
                <link linkend="gui_attr_basic_property">property</link>
              </entry>
              <entry>
                <link linkend="gui_attr_basic_width">width</link>
              </entry>
            </row>
            <row>
              <entry align="left">
                <link linkend="gui_attr_basic_datasource">datasource</link>
              </entry>
              <entry align="left">
                <link linkend="gui_attr_basic_id">id</link>
              </entry>
              <entry>
                <link linkend="gui_attr_basic_required">required</link>
              </entry>
            </row>
            <row>
              <entry>
                <link linkend="gui_attr_basic_description">description</link>
              </entry>
              <entry>
                <link linkend="gui_attr_optionsGroup_multiselect">multiselect</link>
              </entry>
              <entry>
                <link linkend="gui_attr_basic_requiredMessage">requiredMessage</link>
              </entry>
            </row>
          </tbody></tgroup>
      </informaltable>
      <para>Элементы <sgmltag>optionsGroup</sgmltag>:</para>
      <informaltable frame="none" pgwide="0" align="left">
        <tgroup cols="1" colsep="1" rowsep="1" align="left">
          <colspec colname="c1"/>
          <tbody>
            <row>
              <entry align="left">
                <link linkend="gui_validator">validator</link>
              </entry>
            </row>
          </tbody>
        </tgroup>
      </informaltable>
    </section>
    <section id="gui_PasswordField">
      <title>PasswordField</title>
      <para>Текстовое поле, которое вместо символов, введенных пользователем, отображает эхо-символы. </para>
      <para>XML-имя компонента: <code>passwordField</code>.</para>
      <mediaobject>
        <imageobject>
          <imagedata align="center" fileref="img/gui_PasswordField_dia.png"/>
        </imageobject>
      </mediaobject>
      <para><code>PasswordField</code> реализован для блоков <structname>Web Client</structname> и <structname>Desktop Client</structname>.</para>
      <para><code>PasswordField</code> в основном аналогичен компоненту <link linkend="gui_TextField">TextField</link>, за исключением того, что ему нельзя установить <code>datatype</code>. То есть <code>PasswordField</code> предназначен для работы только с текстом и строковыми атрибутами сущностей. </para>
      <para>Пример использования:</para>
      <programlisting language="xml">&lt;passwordField id=&quot;passwordField&quot; caption=&quot;msg://name&quot;/&gt;
&lt;button caption=&quot;msg://buttonsName&quot; invoke=&quot;showPassword&quot;/&gt;</programlisting>
      <programlisting language="java">@Inject
private PasswordField passwordField;

public void showPassword(){
showNotification((String) passwordField.getValue(), NotificationType.HUMANIZED);
}</programlisting>
      <mediaobject>
        <imageobject>
          <imagedata align="center" fileref="img/gui_textField_secret.png"/>
        </imageobject>
      </mediaobject>
      <para>Атрибуты <sgmltag>passwordField</sgmltag>:</para>
      <informaltable frame="none" pgwide="0" align="left">
        <tgroup cols="4" colsep="1" rowsep="1" align="left"><colspec colname="c1"/><colspec colname="c2"/><colspec colname="c3"/><colspec colname="c4"/><colspec colname="c5"/>c <tbody>
            <row>
              <entry>
                <link linkend="gui_attr_basic_align">align</link>
              </entry>
              <entry>
                <link linkend="gui_attr_basic_editable">editable</link>
              </entry>
              <entry align="left">
                <link linkend="gui_attr_textField_maxLength">maxLength</link>
              </entry>
              <entry>
                <link linkend="gui_attr_basic_stylename">stylename</link>
              </entry>
            </row>
            <row><entry align="left">
                <link linkend="gui_attr_basic_caption">caption</link>
              </entry><entry align="left">
                <link linkend="gui_attr_basic_enable">enable</link>
              </entry><entry>
                <link linkend="gui_attr_basic_property">property</link>
              </entry>editable<entry>
                <link linkend="gui_attr_basic_visible">visible</link>
              </entry></row>
            <row>
              <entry align="left">
                <link linkend="gui_attr_basic_datasource">datasource</link>
              </entry>
              <entry align="left">
                <link linkend="gui_attr_basic_height">height</link>
              </entry>
              <entry align="left">
                <link linkend="gui_attr_basic_required">required</link>
              </entry>
              <entry>
                <link linkend="gui_attr_basic_width">width</link>
              </entry>
            </row>
            <row>
              <entry align="left">
                <link linkend="gui_attr_basic_description">description</link>
              </entry>
              <entry align="left">
                <link linkend="gui_attr_basic_id">id</link>
              </entry>
              <entry>
                <link linkend="gui_attr_basic_requiredMessage">requiredMessage</link>
              </entry>
            </row>
          </tbody></tgroup>
      </informaltable>
      <para>Элементы <sgmltag>passwordField</sgmltag>:</para>
      <informaltable frame="none" pgwide="0" align="left">
        <tgroup cols="1" colsep="1" rowsep="1" align="left">
          <colspec colname="c1"/>
          <tbody>
            <row>
              <entry>
                <link linkend="gui_validator">validator</link>
              </entry>
            </row>
          </tbody>
        </tgroup>
      </informaltable>
    </section>
    <section id="gui_PickerField">
      <title>PickerField</title>
      <para>Поле ввода с дополнительными кнопками действий (<code>PickerField</code>) позволяет отображать экземпляр сущности в текстовом поле и выполнять действия нажатием на кнопки справа.</para>
      <mediaobject>
        <imageobject>
          <imagedata align="center" fileref="img/PickerField.png"/>
        </imageobject>
      </mediaobject>
      <para>XML-имя компонента: <sgmltag>pickerField</sgmltag>.</para>
      <mediaobject>
        <imageobject>
          <imagedata align="center" fileref="img/gui_pickerField_dia.png"/>
        </imageobject>
      </mediaobject>
      <para>Компонент <code>PickerField</code> реализован для блоков <structname>Web Client</structname> и <structname>Desktop Client</structname>.</para>
      <itemizedlist>
        <listitem>
          <para>Как правило, <code>PickerField</code> используется для работы со ссылочными атрибутами сущностей. При этом компоненту достаточно указать атрибуты <link linkend="gui_attr_basic_datasource">datasource</link> и <link linkend="gui_attr_basic_property">property</link>:<programlisting language="xml">&lt;dsContext&gt;
&lt;datasource id=&quot;carDs&quot; class=&quot;com.company.sample.entity.Car&quot; view=&quot;_local&quot;/&gt;
&lt;/dsContext&gt;
&lt;layout&gt;
&lt;pickerField datasource=&quot;carDs&quot; property=&quot;colour&quot;/&gt;</programlisting></para>
          <para>Как видно из примера, в экране описывается <link linkend="datasources">источник данных</link> <code>carDs</code> для некоторой сущности <code>Car</code>, имеющей атрибут <code>colour</code>. В элементе <code>pickerField</code> в атрибуте <code>datasource</code> указывается ссылка на источник данных, а в атрибуте <code>property</code> − название атрибута сущности, значение которого должно быть отображено в компоненте. Атрибут сущности должен являться ссылкой на другую сущность, в приведенном примере это <code>Colour</code>.</para>
        </listitem>
        <listitem id="gui_element_pickerField_actions">
          <para>Для <code>PickerField</code> можно определить произвольное количество <link linkend="gui_Action">действий</link>, отображаемых кнопками справа. Это можно сделать как в XML-дескрипторе с помощью вложенного элемента <code>actions</code>, так и  программно в контроллере методом <code>addAction()</code>. </para>
          <itemizedlist>
            <listitem>
              <para>Существуют <link linkend="standard_actions">стандартные действия</link>, определенные  перечислением <code>PickerField.ActionType</code>: <code>lookup</code>, <code>clear</code>, <code>open</code>. Они выполняют соответственно выбор связанной сущности, очистку поля и открытие экрана редактирования выбранной связанной сущности. Для стандартных действий в XML не нужно определять никаких атрибутов, кроме идентификатора. Если при объявлении компонента никаких действий в элементе <sgmltag>actions</sgmltag> не задано, загрузчик XML определит для него действия <literal>lookup</literal> и <literal>clear</literal>. Чтобы  добавить к действиям по умолчанию, например, действие <literal>open</literal>, нужно определить элемент <sgmltag>actions</sgmltag> следующим образом:<programlisting language="xml">&lt;pickerField datasource=&quot;carDs&quot; property=&quot;colour&quot;/&gt;
&lt;actions&gt;
    &lt;action id=&quot;lookup&quot;/&gt;
    &lt;action id=&quot;open&quot;/&gt;
    &lt;action id=&quot;clear&quot;/&gt;
&lt;/actions&gt;
&lt;/pickerField&gt;</programlisting></para>
              <para>Элемент <sgmltag>action</sgmltag> не дополняет, а переопределяет набор стандартных действий, поэтому необходимо указывать идентификаторы всех требуемых действий. Компонент примет следующий вид:</para>
              <mediaobject>
                <imageobject>
                  <imagedata align="center" fileref="img/gui_pickerFieldActionsSt.png"/>
                </imageobject>
              </mediaobject>
              <para>Для программного задания стандартных действий служат методы <code>addLookupAction()</code>, <code>addOpenAction()</code> и <code>addClearAction()</code>. Если компонент определен в XML-дескрипторе без вложенного элемента <code>actions</code>, то достаточно добавить недостающие действия:<programlisting language="java">@Inject
protected PickerField colourField;

@Override
public void init(Map&lt;String, Object&gt; params) {
colourField.addOpenAction();
}    </programlisting></para>
              <para>Если же компонент создается в контроллере, то никаких действий по умолчанию он не получает, и необходимо добавить все нужные действия явно:<programlisting language="java">@Inject
protected ComponentsFactory componentsFactory;

@Override
public void init(Map&lt;String, Object&gt; params) {
PickerField colourField = componentsFactory.createComponent(PickerField.NAME);
colourField.setDatasource(carDs, &quot;colour&quot;);
colourField.addLookupAction();
colourField.addOpenAction();
colourField.addClearAction();
}</programlisting></para>
              <para>Стандартные действия можно параметризовать. В XML-дескрипторе возможности для этого ограничены: существует только атрибут <code>openType</code>, в котором можно задать режим открытия экрана выбора (для <code>LookupAction</code>) или редактирования (для <code>OpenAction</code>).</para>
              <para>При программном создании действий можно задать любые свойства объектов <code>PickerField.LookupAction</code>, <code>PickerField.OpenAction</code> и <code>PickerField.ClearAction</code>, возвращаемых методами добавления стандартных действий. Например, так можно задать специфический экран выбора:<programlisting language="java">PickerField.LookupAction lookupAction = customerField.addLookupAction();
lookupAction.setLookupScreen(&quot;customerLookupScreen&quot;);</programlisting></para>
              <para>Подробнее см. JavaDocs классов <link linkend="standard_actions">стандартных действий</link>.</para>
            </listitem>
            <listitem>
              <para>Произвольные действия в XML-дескрипторе также определяются во вложенном элементе <code>actions</code>, например:<programlisting language="xml">&lt;pickerField datasource=&quot;carDs&quot; property=&quot;colour&quot;/&gt;
&lt;actions&gt;
    &lt;action id=&quot;lookup&quot;/&gt;
    &lt;action id=&quot;show&quot; icon=&quot;icons/show.png&quot;
            invoke=&quot;showColour&quot; caption=&quot;&quot;/&gt;
&lt;/actions&gt;
&lt;/pickerField&gt;</programlisting></para>
              <para>Программно задать произвольное действие можно следующим образом:<programlisting language="java">@Inject
protected PickerField colourField;

@Override
public void init(Map&lt;String, Object&gt; params) {
colourField.addAction(new AbstractAction(&quot;show&quot;) {
    @Override
    public void actionPerform(Component component) {
        showColour(colourField.getValue());
    }
    @Override
    public String getCaption() {
        return &quot;&quot;;
    }
    @Override
    public String getIcon() {
        return &quot;icons/show.png&quot;;
    }
});
}</programlisting></para>
              <para>Декларативное и программное создание действий подробно описано в  <xref linkend="gui_Action"/>.</para>
            </listitem>
          </itemizedlist>
        </listitem>
        <listitem id="gui_attr_pickerField_metaclass">
          <para>Компонент <code>PickerField</code> можно использовать без непосредственной привязки к данным, то есть без указания <link linkend="gui_attr_basic_datasource">datasource</link> и <link linkend="gui_attr_basic_property">property</link>. В этом случае для указания типа сущности, с которой должен работать <code>PickerField</code>, используется атрибут <code>metaClass</code>. В нем необходимо указать <link linkend="entity_class_annotations">имя сущности в метаданных</link>, например:<programlisting language="xml">&lt;pickerField id=&quot;colourField&quot; metaClass=&quot;sample$Colour&quot;/&gt;</programlisting></para>
          <para>Экземпляр выбранной сущности можно получить, инжектировав компонент в контроллер и вызвав его метод <code>getValue()</code>.</para>
          <warning>
            <para>Для правильной работы компонента <code>PickerField</code> необходима либо установка атрибута <code>metaClass</code>, либо одновременная установка атрибутов <link linkend="gui_attr_basic_datasource">datasource</link> и <link linkend="gui_attr_basic_property">property</link>.</para>
          </warning>
        </listitem>
        <listitem>
          <para>В компоненте <code>PickerField</code> можно использовать горячие клавиши: см. <xref linkend="shortcuts"/>.</para>
        </listitem>
      </itemizedlist>
      <para>Атрибуты <sgmltag>pickerField</sgmltag>:</para>
      <informaltable frame="none" pgwide="0" align="left">
        <tgroup cols="4" colsep="1" rowsep="1" align="left"><colspec colname="c1"/><colspec colname="c2"/><colspec colname="c3"/><colspec colname="c4"/>c <tbody>
            <row><entry align="left">
                <link linkend="gui_attr_basic_align">align</link>
              </entry>editable<entry align="left">
                <link linkend="gui_attr_basic_editable">editable</link>
              </entry><entry align="left">
                <link linkend="gui_attr_basic_property">property</link>
              </entry><entry>
                <link linkend="gui_attr_basic_width">width</link>
              </entry></row>
            <row><entry>
                <link linkend="gui_attr_basic_caption">caption</link>
              </entry><entry align="left">
                <link linkend="gui_attr_basic_enable">enable</link>
              </entry>required<entry>
                <link linkend="gui_attr_basic_required">required</link>
              </entry></row>
            <row>
              <entry align="left">
                <link linkend="gui_attr_basic_captionProperty">captionProperty</link>
              </entry>
              <entry align="left">
                <link linkend="gui_attr_basic_height">height</link>
              </entry>
              <entry>
                <link linkend="gui_attr_basic_requiredMessage">requiredMessage</link>
              </entry>
            </row>
            <row>
              <entry align="left">
                <link linkend="gui_attr_basic_datasource">datasource</link>
              </entry>
              <entry align="left">
                <link linkend="gui_attr_basic_id">id</link>
              </entry>
              <entry>
                <link linkend="gui_attr_basic_stylename">stylename</link>
              </entry>
            </row>
            <row>
              <entry>
                <link linkend="gui_attr_basic_description">description</link>
              </entry>
              <entry>
                <link linkend="gui_attr_pickerField_metaclass">metaClass</link>
              </entry>
              <entry>
                <link linkend="gui_attr_basic_visible">visible</link>
              </entry>
            </row>
          </tbody></tgroup>
      </informaltable>
      <para>Элементы <sgmltag>pickerField</sgmltag>:</para>
      <informaltable frame="none" pgwide="0" align="left">
        <tgroup cols="1" colsep="1" rowsep="1" align="left">
          <colspec colname="c1"/>
          <tbody>
            <row>
              <entry>
                <link linkend="gui_element_pickerField_actions">actions</link>
              </entry>
            </row>
            <row>
              <entry>
                <link linkend="gui_validator">validator</link>
              </entry>
            </row>
          </tbody>
        </tgroup>
      </informaltable>
    </section>
    <section id="gui_PopupButton">
      <title>PopupButton</title>
      <para>Кнопка с выпадающим списком действий.</para>
      <mediaobject>
        <imageobject>
          <imagedata align="center" fileref="img/PopupButton.png"/>
        </imageobject>
      </mediaobject>
      <para>XML-имя компонента: <sgmltag>popupButton</sgmltag>.</para>
      <mediaobject>
        <imageobject>
          <imagedata align="center" fileref="img/gui_popupButton_dia.png"/>
        </imageobject>
      </mediaobject>
      <para>Компонент реализован для блоков <structname>Web Client</structname> и <structname>Desktop Client</structname>.</para>
      <para>Кнопка с выпадающим списком действий может содержать  текст или пиктограмму (или и то и другое). На рисунке ниже отражены разные виды кнопок.</para>
      <mediaobject>
        <imageobject>
          <imagedata align="center" fileref="img/gui_popupButtonTypes.png"/>
        </imageobject>
      </mediaobject>
      <para>Пример кнопки с выпадающим списком, содержащим два действия: <programlisting language="xml">&lt;popupButton id=&quot;popupButton&quot; caption=&quot;msg://popupButton&quot; description=&quot;Press me&quot;&gt;
&lt;actions&gt;
  &lt;action id=&quot;popupAction1&quot; caption=&quot;msg://action1&quot; invoke=&quot;someAction1&quot;/&gt;
  &lt;action id=&quot;popupAction2&quot; caption=&quot;msg://action2&quot; invoke=&quot;someAction2&quot;/&gt;
&lt;/actions&gt;
&lt;/popupButton&gt;</programlisting></para>
      <para>Кнопка имеет надпись, заданную с помощью атрибута <link linkend="gui_attr_basic_caption">caption</link>, и всплывающую подсказку, определенную в атрибуте <link linkend="gui_attr_basic_description">description</link>. Выпадающий список <link linkend="gui_Action">действий</link> задан в элемене <sgmltag>actions</sgmltag>. <code>PopupButton</code> отображает только следующие свойства действий: <code>caption</code>, <code>enable</code>, <code>visible</code>. Свойства <code>description</code>, <code>icon</code>, <code>shortcut</code> игнорируются.</para>
      <para>Атрибуты <sgmltag>popupButton</sgmltag>:</para>
      <informaltable frame="none" pgwide="0" align="left">
        <tgroup cols="3" colsep="1" rowsep="1" align="left"><colspec colname="c1"/><colspec colname="c2"/><colspec colname="c3"/>c <tbody>
            <row>
              <entry align="left">
                <link linkend="gui_attr_basic_align">align</link>
              </entry>
              <entry align="left">
                <link linkend="gui_attr_basic_icon">icon</link>
              </entry>
              <entry align="left">
                <link linkend="gui_attr_basic_width">width</link>
              </entry>
            </row>
            <row>
              <entry>
                <link linkend="gui_attr_basic_caption">caption</link>
              </entry>
              <entry align="left">
                <link linkend="gui_attr_basic_id">id</link>
              </entry>
            </row>
            <row>
              <entry align="left">
                <link linkend="gui_attr_basic_description">description</link>
              </entry>
              <entry align="left">
                <link linkend="gui_attr_basic_stylename">stylename</link>
              </entry>
            </row>
            <row>
              <entry align="left">
                <link linkend="gui_attr_basic_enable">enable</link>
              </entry>
              <entry align="left">
                <link linkend="gui_attr_basic_visible">visible</link>
              </entry>
            </row>
          </tbody></tgroup>
      </informaltable>
      <para>Элементы <sgmltag>popupButton</sgmltag>:</para>
      <informaltable frame="none" pgwide="0" align="left">
        <tgroup cols="1" colsep="1" rowsep="1" align="left">
          <colspec colname="c1"/>
          <tbody>
            <row>
              <entry align="left">
                <link linkend="gui_Action">actions</link>
              </entry>
            </row>
          </tbody>
        </tgroup>
      </informaltable>
    </section>
    <section id="gui_ProgressBar">
      <title>ProgressBar</title>
      <para>Компонент <code>ProgressBar</code> служит для отображения хода выполнения некоторого длительного процесса. </para>
      <mediaobject>
        <imageobject>
          <imagedata align="center" fileref="img/gui_progressBar.png"/>
        </imageobject>
      </mediaobject>
      <para>XML-имя компонента: <sgmltag>progressBar</sgmltag></para>
      <mediaobject>
        <imageobject>
          <imagedata align="center" fileref="img/gui_progressBar_dia.png"/>
        </imageobject>
      </mediaobject>
      <para>Компонент реализован для блоков <structname>Web Client</structname> и <structname>Desktop Client</structname>. </para>
      <para>Пример использования компонента совместно с механизмом <link linkend="background_tasks">фоновых задач</link>:
        <programlisting language="xml">&lt;progressBar id=&quot;progressBar&quot; width=&quot;100%&quot;/&gt;
        </programlisting>
        <programlisting language="java">@Inject
protected ProgressBar progressBar;

@Inject
protected BackgroundWorker backgroundWorker;

private static final int ITERATIONS = 5;

@Override
public void init(Map&lt;String, Object&gt; params) {
BackgroundTask&lt;Integer, Void&gt; task = new BackgroundTask&lt;Integer, Void&gt;(300, this) {
    @Override
    public Void run(TaskLifeCycle&lt;Integer&gt; taskLifeCycle) throws Exception {
        for (int i = 1; i &lt;= ITERATIONS; i++) {
            TimeUnit.SECONDS.sleep(2); // time consuming task
            taskLifeCycle.publish(i);
        }
        return null;
    }

    @Override
    public void progress(List&lt;Integer&gt; changes) {
        float lastValue = changes.get(changes.size() - 1);
        progressBar.setValue(lastValue / ITERATIONS);
    }
};

BackgroundTaskHandler taskHandler = backgroundWorker.handle(task);
taskHandler.execute();
}</programlisting></para>
      <para>Здесь в методе <code>BackgroundTask.progress()</code>, выполняемом в UI-потоке,  компоненту <code>ProgressBar</code> устанавливается текущее значение. Значением компонента должно быть число типа <code>float</code> от <code>0.0</code> до <code>1.0</code>.</para>
      <para id="gui_attr_progressBar_indeterminate">Если выполняемый процесс не может передавать информацию о прогрессе, то с помощью атрибута <sgmltag>indeterminate</sgmltag> можно задать отображение неопределенного состояния индикатора. Если значение атрибута равно <literal>true</literal>, то индикатор отображает неопределенное состояние. По умолчанию  <literal>false</literal>. Например:<programlisting language="xml">&lt;progressBar id=&quot;progressBar&quot; width=&quot;100%&quot; indeterminate=&quot;true&quot;/&gt;</programlisting></para>
      <para>Атрибуты <sgmltag>progressBar</sgmltag>:</para>
      <informaltable frame="none" pgwide="0" align="left">
        <tgroup cols="3" colsep="1" rowsep="1" align="left"><colspec colname="c1"/><colspec colname="c2"/><colspec colname="c3"/>c <tbody>
            <row><entry align="left">
                <link linkend="gui_attr_basic_align">align</link>
              </entry>editable<entry align="left">
                <link linkend="gui_attr_basic_id">id</link>
              </entry><entry align="left">
                <link linkend="gui_attr_basic_visible">visible</link>
              </entry></row>
            <row>
              <entry>
                <link linkend="gui_attr_basic_enable">enable</link>
              </entry>
              <entry align="left">
                <link linkend="gui_attr_progressBar_indeterminate">indeterminate</link>
              </entry>
              <entry>
                <link linkend="gui_attr_basic_width">width</link>
              </entry>
            </row>
            <row>
              <entry align="left">
                <link linkend="gui_attr_basic_height">height</link>
              </entry>
              <entry align="left">
                <link linkend="gui_attr_basic_stylename">stylename</link>
              </entry>
            </row>
          </tbody></tgroup>
      </informaltable>
    </section>
    <section id="gui_RelatedEntities">
      <title>Related Entities</title>
      <para><code>Related Entities</code> - компонент в виде кнопки с выпадающим списком, при нажатии показывающим список классов, связанных с сущностью, экземпляры которой отображаются в таблице. Пользователь выбирает интересующий его класс сущности, после чего открывается новый браузер с экземплярами данной сущности, связанными с выбранными экземплярами в начальной таблице.</para>
      <mediaobject>
        <imageobject>
          <imagedata align="center" fileref="img/gui_relatedEntities.png"/>
        </imageobject>
      </mediaobject>
      <para>XML-имя компонента: <code>relatedEntities</code></para>
      <mediaobject>
        <imageobject>
          <imagedata align="center" fileref="img/gui_relatedEntities_dia.png"/>
        </imageobject>
      </mediaobject>
      <para>Компонент реализован для блоков <structname>Web Client</structname> и <structname>Desktop Client</structname>.</para>
      <para>При отборе связанных сущностей для отображения учитываются разрешения пользователя на открытие экранов, чтение сущностей и чтение атрибутов.</para>
      <para>По умолчанию для выбранного в списке класса сущности открывается браузер сущности, определенный по соглашениям (<code>.browse</code>, <code>.lookup</code>). Опционально, экран можно явно задать в компоненте. </para>
      <para>В открытом браузере динамически создается фильтр, который выбирает связанные с выбранными сущностями записи.</para>
      <para>Пример описания компонента в XML-дескрипторе экрана:</para>
      <programlisting language="xml"><![CDATA[
      <table id="invoiceTable"
             multiselect="true"
             width="100%">
          <actions>
              <action id="create"/>
              <action id="edit"/>
              <action id="remove"/>
          </actions>
          <buttonsPanel id="buttonsPanel">
              <button id="createBtn"
                      action="invoiceTable.create"/>
              <button id="editBtn"
                      action="invoiceTable.edit"/>
              <button id="removeBtn"
                      action="invoiceTable.remove"/>
              <relatedEntities for="invoiceTable"
                               openType=”NEW_TAB”>
              <property name="invoiceItems"
                        screen="sales$InvoiceItem.lookup"
                        filterCaption="msg://invoiceItems"/>
          </relatedEntities>
      </buttonsPanel>
      ]]></programlisting>
      <para id="gui_attr_related_for_1">Атрибут <code>for</code> является обязательным. В нем указывается идентификатор таблицы.</para>
      <para>Атрибут <code>openType=”NEW_TAB”</code> устанавливает режим открытия браузера (новая вкладка). По умолчанию браузер открывается в текущей вкладке. </para>
      <para id="gui_attr_related_property">Элемент <code>property</code> позволяет явно задать связанную сущность, которая будет отображаться в выпадающем списке.</para>
      <para>Атрибуты <code>property</code>:</para>
      <itemizedlist>
        <listitem>
          <para id="gui_attr_related_property_name_1"><code>name</code> - имя атрибута текущей сущности, ссылающегося на связанную сущность</para>
        </listitem>
        <listitem>
          <para id="gui_attr_related_property_screen_1"><code>screen</code> - идентификатор браузера, открывающегося при выборе сущности в списке</para>
        </listitem>
        <listitem>
          <para id="gui_attr_related_property_filterCaption_1"><code>filterCaption</code> - имя динамически формируемого фильтра</para>
        </listitem>
      </itemizedlist>
      <para id="gui_attr_related_exclude_1">Атрибут <code>exclude</code> позволяет исключить определенные связанные сущности из числа отображаемых. В качестве значения указываются ссылочные атрибуты текущей сущности, разделенные запятыми.</para>
      <figure>
        <title>Компонент Related Entities в таблице</title>
        <mediaobject>
          <imageobject>
            <imagedata align="center" fileref="img/gui_relatedEntitiesTable.png"/>
          </imageobject>
        </mediaobject>
      </figure>
      <figure>
        <title>Браузер связанных сущностей в новой вкладке</title>
        <mediaobject>
          <imageobject>
            <imagedata align="center" fileref="img/gui_relatedEntitiesBrowser.png"/>
          </imageobject>
        </mediaobject>
      </figure>
      <para>Все атрибуты <code>relatedEntities</code>:</para>
      <informaltable frame="none" pgwide="0" align="left">
        <tgroup cols="3" colsep="1" rowsep="1" align="left"><colspec colname="c1"/><colspec colname="c2"/><colspec colname="c3"/>c <tbody>
            <row><entry align="left">
                <link linkend="gui_attr_basic_align">align</link>
              </entry>editable<entry align="left">
                <link linkend="gui_attr_related_exclude_1">exclude</link>
              </entry><entry align="left">
                <link linkend="gui_attr_tokenList_lookup_openType">openType</link>
              </entry></row>
            <row>
              <entry>
                <link linkend="gui_attr_basic_caption">caption</link>
              </entry>
              <entry align="left">
                <link linkend="gui_attr_related_for_1">for</link>
              </entry>
              <entry>
                <link linkend="gui_attr_basic_stylename">stylename</link>
              </entry>
            </row>
            <row>
              <entry align="left">
                <link linkend="gui_attr_basic_description">description</link>
              </entry>
              <entry align="left">
                <link linkend="gui_attr_basic_icon">icon</link>
              </entry>
              <entry>
                <link linkend="gui_attr_basic_visible">visible</link>
              </entry>
            </row>
            <row>
              <entry align="left">
                <link linkend="gui_attr_basic_enable">enable</link>
              </entry>
              <entry align="left">
                <link linkend="gui_attr_basic_id">id</link>
              </entry>
              <entry>
                <link linkend="gui_attr_basic_width">width</link>
              </entry>
            </row>
        </tbody></tgroup>
      </informaltable>
      <para>Атрибуты <code>property</code>:</para>
      <informaltable frame="none" pgwide="0" align="left">
        <tgroup cols="1" colsep="1" rowsep="1" align="left">
          <colspec colname="c1"/>
          <tbody>
            <row>
              <entry>
                <link linkend="gui_attr_basic_caption">caption</link>
              </entry>
            </row>
            <row>buttonsPanel<entry>
                <link linkend="gui_attr_related_property_filterCaption_1">filterCaption</link>
              </entry></row>
            <row>
              <entry>
                <link linkend="gui_attr_related_property_name_1">name</link>
              </entry>
            </row>
            <row>
              <entry>
                <link linkend="gui_attr_related_property_screen_1">screen</link>
              </entry>
            </row>
          </tbody>
        </tgroup>
      </informaltable>
    </section>
    <section id="gui_RichTextArea">
      <title>RichTextArea</title>
      <para>Текстовая область для отображения и ввода форматированного текста.</para>
      <para>XML-имя компонента: <sgmltag>richTextArea</sgmltag></para>
      <mediaobject>
        <imageobject>
          <imagedata align="center" fileref="img/gui_RichTextArea_dia.png"/>
        </imageobject>
      </mediaobject>
      <para>Компонент <code>RichTextArea</code> реализован только для блока <structname>Web Client</structname>.</para>
      <para><code>RichTextArea</code> в основном повторяет функциональность <code>
          <link linkend="gui_TextField">TextField</link>
        </code>, за исключением того, что ему нельзя установить <code>datatype</code>. То есть <code>RichTextArea</code> предназначен для работы только с текстом и строковыми атрибутами сущностей.</para>
      <para>К тексту, вводимому в компоненте <code>RichTextArea</code>, можно применять средства для форматирования: изменять начертание шрифта, его размер, гарнитуру − с помощью элементов управления, расположенных в верхней части компонента.</para>
      <mediaobject>
        <imageobject>
          <imagedata align="center" fileref="img/gui_RichTextAreaInfo.png"/>
        </imageobject>
      </mediaobject>
      <para>Атрибуты <sgmltag>richTextArea</sgmltag>:</para>
      <informaltable frame="none" pgwide="0" align="left">
        <tgroup cols="4" colsep="1" rowsep="1" align="left"><colspec colname="c1"/><colspec colname="c2"/><colspec colname="c3"/><colspec colname="c4"/>c <tbody>
            <row><entry align="left">
                <link linkend="gui_attr_basic_align">align</link>
              </entry>editable<entry align="left">
                <link linkend="gui_attr_basic_editable">editable</link>
              </entry><entry align="left">
                <link linkend="gui_attr_basic_property">property</link>
              </entry><entry>
                <link linkend="gui_attr_basic_visible">visible</link>
              </entry></row>
            <row>
              <entry>
                <link linkend="gui_attr_basic_caption">caption</link>
              </entry>
              <entry align="left">
                <link linkend="gui_attr_basic_enable">enable</link>
              </entry>
              <entry>
                <link linkend="gui_attr_basic_required">required</link>
              </entry>
              <entry>
                <link linkend="gui_attr_basic_width">width</link>
              </entry>
            </row>
            <row>
              <entry align="left">
                <link linkend="gui_attr_basic_datasource">datasource</link>
              </entry>
              <entry align="left">
                <link linkend="gui_attr_basic_height">height</link>
              </entry>
              <entry>
                <link linkend="gui_attr_basic_requiredMessage">requiredMessage</link>
              </entry>
            </row>
            <row>
              <entry align="left">
                <link linkend="gui_attr_basic_description">description</link>
              </entry>
              <entry align="left">
                <link linkend="gui_attr_basic_id">id</link>
              </entry>
              <entry>
                <link linkend="gui_attr_basic_stylename">stylename</link>
              </entry>
            </row>
          </tbody></tgroup>
      </informaltable>
    </section>
    <section id="gui_SearchPickerField">
      <title>SearchPickerField</title>
      <para>Компонент <code>SearchPickerField</code> служит для поиска экземпляров сущностей по вводимой пользователем строке. Пользователю достаточно ввести несколько символов и нажать клавишу <keycap>Enter</keycap>. Если поиск дал  несколько совпадений, найденные значения отображаются  в виде выпадающего списка. Если же критерию поиска соответствует только один экземпляр, он сразу становится значением компонента. <code>SearchPickerField</code> позволяет также выполнять действия нажатием на кнопки справа.</para>
      <mediaobject>
        <imageobject>
          <imagedata align="center" fileref="img/gui_searchPickerFieldOverlap.png"/>
        </imageobject>
      </mediaobject>
      <para>XML-имя компонента: <sgmltag>searchPickerField</sgmltag>.</para>
      <mediaobject>
        <imageobject>
          <imagedata align="center" fileref="img/gui_SearchPickerField_dia.png"/>
        </imageobject>
      </mediaobject>
      <para>Компонент реализован для блоков <structname>Web Client</structname> и <structname>Desktop Client</structname>.</para>
      <itemizedlist>
        <listitem>
          <para>Для работы компонента <sgmltag>SearchPickerField</sgmltag> необходимо создать <link linkend="datasources">collectionDatasource</link>, и задать в нем запрос, содержащий условия поиска. Условие обязательно должно содержать параметр с именем <code>custom$searchString</code> - именно в него компонент передает введенную пользователем подстроку при нажатии <keycap>Enter</keycap>. Источник данных с условием поиска должен быть указан в  атрибуте <link linkend="gui_attr_basic_optionsDatasource">optionsDatasource</link> компонента. Например:<programlisting language="xml">&lt;dsContext&gt;
&lt;datasource id=&quot;carDs&quot; class=&quot;com.company.sample.entity.Car&quot; view=&quot;_local&quot;/&gt;
&lt;collectionDatasource id=&quot;coloursDs&quot; class=&quot;com.company.sample.entity.Colour&quot; view=&quot;_local&quot;&gt;
    &lt;query&gt;
        select c from sample$Colour c
        where c.name like :(?i)custom$searchString
    &lt;/query&gt;
&lt;/collectionDatasource&gt;
&lt;/dsContext&gt;
&lt;layout&gt;
&lt;searchPickerField datasource=&quot;carDs&quot; property=&quot;colour&quot; optionsDatasource=&quot;coloursDs&quot;/&gt;</programlisting></para>
          <para>В данном случае компонент будет искать экземпляры сущности <code>Colour</code> по вхождению подстроки в ее атрибут <code>name</code>. Префикс <code>(?i)</code> служит для регистро-независимого поиска (см. <xref linkend="datasource_query_case_insensitive"/>). Выбранное значение подставится в атрибут <code>colour</code> сущности <code>Car</code>, находящейся в источнике данных <code>carDs</code>.</para>
        </listitem>
        <listitem>
          <para id="gui_attr_searchPickerField_minSearchStringLength">С помощью атрибута <sgmltag>minSearchStringLength</sgmltag> можно задать минимальное количество символов, которое должен ввести пользователь для поиска значения.</para>
        </listitem>
        <listitem>
          <para>В контроллере экрана для компонента можно реализовать методы, вызываемые в двух случаях:</para>
          <itemizedlist>
            <listitem>
              <para>если количество введенных символов меньше значения атрибута <code>minSearchStringLength</code>.</para>
            </listitem>
            <listitem>
              <para>если поиск введенных пользователем символов не дал результатов.</para>
            </listitem>
          </itemizedlist>
          <para>Пример реализации методов для вывода на экран сообщений:<programlisting language="java">@Inject
private SearchPickerField colourField;

@Override
public void init(Map&lt;String, Object&gt; params) {
colourField.setSearchNotifications(new SearchField.SearchNotifications() {
    @Override
    public void notFoundSuggestions(String filterString) {
        showNotification(&quot;No colours found for search string: &quot; + filterString,
            NotificationType.TRAY);
    }

    @Override
    public void needMinSearchStringLength(String filterString, int minSearchStringLength) {
        showNotification(&quot;Minimum length of search string is &quot; + minSearchStringLength,
            NotificationType.TRAY);
    }
});
}</programlisting></para>
        </listitem>
        <listitem>
          <para><code>SearchPickerField</code> реализует интерфейсы <link linkend="gui_LookupField">LookupField</link> и <link linkend="gui_PickerField">PickerField</link>, поэтому все описанное для этих интерфейсов в части работы с сущностями верно и для него. Исключением является список действий по умолчанию, добавляемых при определении компонента в XML: для <code>SearchPickerField</code> это действия <code>lookup</code> <inlinemediaobject>
              <imageobject>
                <imagedata fileref="img/lookupBtn.png"/>
              </imageobject>
            </inlinemediaobject> и <code>open</code> <inlinemediaobject>
              <imageobject>
                <imagedata fileref="img/openBtn.png"/>
              </imageobject>
            </inlinemediaobject>.</para>
        </listitem>
      </itemizedlist>
      <para>Атрибуты <sgmltag>searchPickerField</sgmltag>: </para>
        <para>
            <link linkend="gui_attr_basic_align">align</link> |
            <link linkend="gui_attr_basic_caption">caption</link> |
            <link linkend="gui_attr_basic_captionProperty">captionProperty</link> |
            <link linkend="gui_attr_basic_datasource">datasource</link> |
            <link linkend="gui_attr_basic_description">description</link> |
            <link linkend="gui_attr_basic_editable">editable</link> |
            <link linkend="gui_attr_basic_enable">enable</link> |
            <link linkend="gui_attr_lookupField_filterMode">filterMode</link> |
            <link linkend="gui_attr_basic_height">height</link> |
            <link linkend="gui_attr_basic_id">id</link> |
            <link linkend="gui_attr_basic_inputPrompt">inputPrompt</link> |
            <link linkend="gui_attr_pickerField_metaclass">metaClass</link> |
            <link linkend="gui_attr_searchPickerField_minSearchStringLength">minSearchStringLength</link> |
            <link linkend="gui_attr_nullName">nullName</link> |
            <link linkend="gui_attr_basic_optionsDatasource">optionsDatasource</link> |
            <link linkend="gui_attr_basic_property">property</link> |
            <link linkend="gui_attr_basic_required">required</link> |
            <link linkend="gui_attr_basic_requiredMessage">requiredMessage</link> |
            <link linkend="gui_attr_basic_stylename">stylename</link> |
            <link linkend="gui_attr_basic_visible">visible</link> |
            <link linkend="gui_attr_basic_width">width</link>
        </para>
      <para>Элементы <sgmltag>searchPickerField</sgmltag>:</para>
        <para>
            <link linkend="gui_Action">actions</link> |
            <link linkend="gui_validator">validator</link>
        </para>
    </section>
    <section id="gui_Table">
      <title>Table</title>
      <para>Компонент <code>Table</code> позволяет выводить информацию в табличном виде, сортировать данные, управлять колонками и заголовками таблицы, вызывать действия для выбранных строк.</para>
      <mediaobject>
        <imageobject>
          <imagedata align="center" fileref="img/gui_table.png"/>
        </imageobject>
      </mediaobject>
      <para>XML-имя компонента: <sgmltag>table</sgmltag></para>
      <mediaobject>
        <imageobject>
          <imagedata align="center" fileref="img/gui_Table_dia.png"/>
        </imageobject>
      </mediaobject>
      <para>Компонент реализован для блоков <structname>Web Client</structname> и <structname>Desktop Client</structname>. </para>
      <para>Пример описания таблицы в XML-дескрипторе экрана:</para>
      <programlisting language="xml">&lt;dsContext&gt;
&lt;collectionDatasource id=&quot;ordersDs&quot;
                     class=&quot;com.sample.sales.entity.Order&quot;
                     view=&quot;orderWithCustomer&quot;&gt;
   &lt;query&gt;
       select o from sales$Order o order by o.date
   &lt;/query&gt;
&lt;/collectionDatasource&gt;
&lt;/dsContext&gt;
&lt;layout&gt;
&lt;table id=&quot;ordersTable&quot; width=&quot;300px&quot;&gt;
    &lt;columns&gt;
        &lt;column id=&quot;date&quot;/&gt;
        &lt;column id=&quot;customer.name&quot;/&gt;
        &lt;column id=&quot;amount&quot;/&gt;
    &lt;/columns&gt;
    &lt;rows datasource=&quot;ordersDs&quot;/&gt;
&lt;/table&gt;</programlisting>
      <para>Здесь в элементе <sgmltag>dsContext</sgmltag> определен <link linkend="datasources">источник данных</link> <sgmltag>collectionDatasource</sgmltag>, который выбирает сущности <code>Order</code> с помощью <link linkend="jpql">JPQL</link> запроса

<code>select o from sales$Order o order by o.date</code>. Для компонента <code>table</code> в элементе <code>rows</code> указывается используемый источник данных, а в элементе <code>columns</code> - какие атрибуты сущности, содержащейся в источнике данных, использовать в качестве колонок.</para>
      <para>Элементы <code>table</code>:</para>
      <itemizedlist>
        <listitem id="gui_element_table_rows">
          <para><sgmltag>rows</sgmltag> - обязательный элемент, в атрибуте <code>datasource</code> которого необходимо объявить используемый таблицей <link linkend="datasources">источник данных</link>.</para>
          <para id="gui_attr_table_headerMode">Для строк можно настроить отображение заголовков - задать каждой строке свой значок в дополнительной колонке слева. Для этого в  контроллере экрана необходимо реализовать интерфейс <code>Table.IconProvider</code> и установить его таблице:</para>
          <programlisting language="java">@Inject
protected Table customersTable;

customersTable.setIconProvider(new Table.IconProvider() {
@Nullable
@Override
public String getItemIcon(Entity entity) {
    CustomerGrade grade = ((Customer) entity).getGrade();
    switch (grade) {
        case PREMIUM: return &quot;icons/premium_grade.png&quot;;
        case HIGH: return &quot;icons/high_grade.png&quot;;
        case MEDIUM: return &quot;icons/medium_grade.png&quot;;
        default: return null;
    }
}
});</programlisting>
        </listitem>
        <listitem id="gui_element_table_columns">
          <para><sgmltag>columns</sgmltag> - обязательный элемент, определяет набор колонок таблицы. </para>
          <para>Каждая колонка описывается во вложенном элементе <code>column</code> со следующими атрибутами:</para>
            <itemizedlist>
              <listitem id="gui_attr_table_column_id">
                <para><sgmltag>id</sgmltag> − обязательный атрибут, содержит название атрибута сущности, выводимого в колонке. Может быть как непосредственным атрибутом сущности, находящейся в источнике данных, так и атрибутом связанной сущности - переход по графу объектов обозначается точкой. Например:<programlisting language="xml">&lt;columns&gt;
&lt;column id=&quot;date&quot;/&gt;
&lt;column id=&quot;customer&quot;/&gt;
&lt;column id=&quot;customer.name&quot;/&gt;
&lt;column id=&quot;customer.address.country&quot;/&gt;
&lt;/columns&gt;</programlisting></para>
              </listitem>
              <listitem id="gui_attr_table_column_caption">
                <para><sgmltag>caption</sgmltag> − необязательный атрибут, содержит заголовок колонки. Если не задан, будет отображено <link linkend="entity_localization">локализованное название атрибута</link> сущности.</para>
              </listitem>
              <listitem id="gui_attr_table_column_collapsed">
                <para><sgmltag>collapsed</sgmltag> − необязательный атрибут, при указании <code>true</code> колонка будет изначально скрыта. Пользователь может управлять отображением  колонок с помощью меню, доступного по кнопке <inlinemediaobject>
                    <imageobject>
                      <imagedata fileref="img/gui_table_columnControl.png"/>
                    </imageobject>
                  </inlinemediaobject> в правой верхней части таблицы, если атрибут <code>columnControlVisible</code> таблицы не <code>false</code>.   По умолчанию <code>collapsed</code> имеет значение <literal>false</literal>.</para>
              </listitem>
              <listitem id="gui_attr_table_column_width">
                <para><sgmltag>width</sgmltag> − необязательный атрибут, отвечает за изначальную ширину колонки.</para>
              </listitem>
              <listitem>
                <para><code>align</code> - необязательный атрибут, устанавливает выравнивание текста в ячейках данной колонки. Возможные значения: <code>LEFT</code>, <code>RIGHT</code>, <code>CENTER</code>. По умолчанию <code>LEFT</code>.</para>
              </listitem>
              <listitem id="gui_attr_table_column_editable">
                <para><sgmltag>editable</sgmltag> − необязательный атрибут, разрешает/запрещает редактирование данной колонки в редактируемой таблице. Чтобы колонка была редактируемой, атрибут <code>editable</code> всей таблицы (см. ниже) также должен быть установлен в <code>true</code>.</para>
              </listitem>
              <listitem id="gui_attr_table_column_maxTextLength">
                <para><sgmltag>maxTextLength</sgmltag> - необязательный атрибут, позволяет ограничивать количество символов в ячейке. При этом если разница между фактическим и допустимым количеством символов  не превышает порог в 10 символов, &quot;лишние&quot; символы не скрываются. Для просмотра полной  записи надо кликнуть на ее видимую часть. Пример колонки с ограничением в 5 символов:</para>
                <mediaobject>
                  <imageobject>
                    <imagedata align="center" fileref="img/gui_table_column_maxTextLength.png"/>
                  </imageobject>
                </mediaobject>
              </listitem>
            <listitem id = "gui_attr_table_column_link">
                  <para><code>link</code> - установка атрибута в <code>true</code> позволяет отобразить в ячейке таблицы ссылку на экран просмотра экземпляра сущности (поддерживается только для <structname>Web Client</structname>). Атрибут <code>link="true"</code>) может указываться и для колонок примитивных типов: в этом случае, при нажатии на ссылку будет открываться редактор основной сущности таблицы. Такой подход может применяться для упрощения навигации - пользователи смогут открывать редактор одним кликом по некоторому ключевому атрибуту.</para>
            </listitem>
            <listitem id = "gui_attr_table_column_linkScreen">
                  <para><code>linkScreen</code> - позволяет указать идентификатор экрана, который будет открыт по нажатию на ссылку, включенную свойством <code>link</code>.</para>
            </listitem>
            <listitem id = "gui_attr_table_column_linkScreenOpenType">
                  <para><code>linkScreenOpenType</code> - задает режим открытия экрана (<code>THIS_TAB</code>, <code>NEW_TAB</code> или <code>DIALOG</code>).</para>
            </listitem>
            <listitem id = "gui_attr_table_column_linkInvoke">
                  <para><code>linkInvoke</code> - позволяет заменить открытие окна на вызов метода контроллера.</para>
            </listitem>
          <listitem>
          <para>Элемент <code>column</code> может содержать вложенный элемент <link linkend="gui_formatter">formatter</link> для представления значения атрибута в виде, отличном от стандартного для данного <link linkend="datatype">Datatype</link>:<programlisting language="xml">&lt;column id=&quot;date&quot;&gt;
&lt;formatter class=&quot;com.haulmont.cuba.gui.components.formatters.DateFormatter&quot; format=&quot;yyyy-MM-dd HH:mm:ss&quot;/&gt;
&lt;/column&gt;</programlisting></para>
          </listitem>
        </itemizedlist></listitem>
        <listitem id="gui_attr_table_rowsCount">
          <para><sgmltag>rowsCount</sgmltag> − необязательный элемент, создающий для таблицы компонент <code>RowsCount</code>, который позволяет загружать в таблицу данные постранично. Размер страницы задается путем ограничения количества записей в источнике данных методом <code>CollectionDatasource.setMaxResults()</code>. Как правило, это делает связанный с источником данных таблицы компонент <link linkend="gui_Filter">Filter</link>, однако при отсутствии универсального фильтра можно вызвать этот метод и напрямую из контроллера экрана.</para>
          <para>Компонент <code>RowsCount</code> может также отобразить общее число записей, возвращаемых текущим запросом в источнике данных, без извлечения этих записей. Для этого при щелчке пользователя на знаке &quot;?&quot; он вызывает метод <code>AbstractCollectionDatasource.getCount()</code>, что приводит к выполнению в БД запроса с такими же, как у текущего запроса условиями, но с агрегатной функцией <code>COUNT(*)</code> вместо результатов. Полученное число отображается вместо знака &quot;?&quot;.</para>
        </listitem>
        <listitem>
          <para id="gui_element_table_actions"><sgmltag>actions</sgmltag> − необязательный элемент для описания <link linkend="gui_Action">действий</link>, связанных с таблицей. Кроме описания произвольных действия поддерживаются следующие <link linkend="standard_actions"> стандартные действия</link>, определяемые перечислением <code>ListActionType</code>: <code>create</code>, <code>edit</code>, <code>remove</code>, <code>refresh</code>, <code>add</code>, <code>exclude</code>, <code>excel</code>.</para>
        </listitem>
        <listitem>
          <para><code>buttonsPanel</code> - необязательный элемент, создающий над таблицей контейнер <link linkend="gui_ButtonsPanel">ButtonsPanel</link> для отображения кнопок действий.</para>
        </listitem>
      </itemizedlist>
      <para>Атрибуты <code>table</code>:</para>
      <itemizedlist>
        <listitem id="gui_attr_table_multiselect">
          <para>Атрибут <code>multiselect</code> позволяет задать режим множественного выделения строк в таблице. Если <code>multiselect</code> равен <code>true</code>, то пользователь может выделить несколько строк с помощью клавиатуры или мыши, удерживая клавиши <keycap>Ctrl</keycap> или <keycap>Shift</keycap>.  По умолчанию режим множественного выделения отключен.</para>
        </listitem>
        <listitem id="gui_attr_table_sortable">
          <para>Атрибут <sgmltag>sortable</sgmltag> разрешает или запрещает сортировку в таблице. По умолчанию имеет значение <literal>true</literal>. Если сортировка разрешена, то при нажатии на название колонки справа от названия появляется значок <inlinemediaobject>
              <imageobject>
                <imagedata fileref="img/gui_sortable_down.png"/>
              </imageobject>
            </inlinemediaobject>/<inlinemediaobject>
              <imageobject>
                <imagedata fileref="img/gui_sortable_up.png"/>
              </imageobject>
            </inlinemediaobject>.</para>
          <para>При включенной с помощью элемента <code>rowsCount</code> (см. выше) страничной загрузке таблицы сортировка производится разными способами в зависимости от того, умещаются ли все записи на одной странице. Если умещаются, то сортировка производится  в памяти, без обращений к БД. Если же страниц больше одной, то сортировка производится на базе данных путем отправки нового запроса с соответствующим <code>ORDER BY</code>. Для правильной работы сортировки на базе данных необходимо, чтобы колонка таблицы ссылалась на какой-либо локальный атрибут сущности, а не на связанную сущность целиком. То есть если в таблице отображаются экземпляры <code>Order</code>, и необходимо вывести колонку с названием связанного <code>Customer</code>, то лучше объявить колонку для атрибута <code>customer.name</code> (как сделано в примере выше), а не просто <code>customer</code>. Последний вариант также будет отображать название покупателя, если в <link linkend="namePattern">имени экземпляра</link> <code>Customer</code> указан атрибут <code>name</code>, но сортировка по такой колонке не будет работать, если записи <code>Order</code> не умещаются на одной странице.</para>
        </listitem>
        <listitem id="gui_attr_table_presentations">
          <para>Атрибут <sgmltag>presentations</sgmltag> управляет механизмом <link linkend="gui_Table_presentations">представлений</link>. Значение по умолчанию равно <literal>false</literal>. Когда значение атрибута равно <literal>true</literal>, то в верхнем правом углу таблицы появляется значок <inlinemediaobject>
              <imageobject>
                <imagedata fileref="img/gui_presentation.png"/>
              </imageobject>
            </inlinemediaobject>. Механизм представлений реализован только для блока <structname>Web Client</structname>.</para>
        </listitem>
        <listitem id="gui_attr_table_columnControlVisible">
          <para>Установка атрибута <sgmltag>columnControlVisible</sgmltag> в <code>false</code> запрещает пользователю скрывать колонки с помощью меню, выпадающего при нажатия на кнопку <inlinemediaobject>
              <imageobject>
                <imagedata fileref="img/gui_table_columnControl.png"/>
              </imageobject>
            </inlinemediaobject>  в правой части шапки таблицы. Флажками в меню отмечаются отображаемые в данный момент  колонки.</para>
          <mediaobject>
            <imageobject>
              <imagedata align="center" fileref="img/gui_table_columnControl_all.png"/>
            </imageobject>
          </mediaobject>
        </listitem>
        <listitem>
          <para id="gui_attr_table_reorderingAllowed">Установка атрибута <sgmltag>reorderingAllowed</sgmltag> в <code>false</code> запрещает пользователю менять местами колонки, перетаскивая их с помощью мыши. </para>
        </listitem>
        <listitem>
          <para id="gui_attr_table_allowPopupMenu">Атрибут <sgmltag>contextMenuEnabled</sgmltag> разрешает или запрещает показывать контекстное меню. По умолчанию атрибут имеет значение <code>true</code>. В контекстном меню отображаются действия таблицы (если они есть), и пункт <guimenu>Системная информация</guimenu>, содержащий информацию о выбранной сущности (если у пользователя есть разрешение <code>cuba.gui.showInfo</code>, см. руководство по подсистеме безопасности).</para>
        </listitem>
        <listitem>
          <para>Если атрибуту <sgmltag>multiLineCells</sgmltag> таблицы присвоить значение <code>true</code>, то ячейки, содержащие текст с переносами строк, будут отображать его  в несколько строк. В таком режиме в веб клиенте для правильной работы полосы прокрутки все строки текущей страницы таблицы будут загружены веб-браузером сразу, без ленивой загрузки видимой части таблицы. По умолчанию атрибут имеет значение <code>false</code>.</para>
        </listitem>
        <listitem>
          <para>Атрибут <code>aggregatable</code> включает режим агрегации строк таблицы.  Поддерживаются следующие операции:<itemizedlist>
              <listitem>
                <para><code>SUM</code> - сумма</para>
              </listitem>
              <listitem>
                <para><code>AVG</code> - среднее значение</para>
              </listitem>
              <listitem>
                <para><code>COUNT</code> - количество</para>
              </listitem>
              <listitem>
                <para><code>MIN</code> - минимальное значение</para>
              </listitem>
              <listitem>
                <para><code>MAX</code> - максимальное значение</para>
              </listitem>
            </itemizedlist></para>
          <para>Для агрегируемых колонок необходимо указать элемент <code>aggregation</code> с атрибутом <code>type</code>, задающим функцию агрегации. Агрегированные значения столбцов выводятся в дополнительной строке вверху таблицы. Пример описания таблицы с агрегацией:<programlisting language="xml">&lt;table id=&quot;itemsTable&quot;
   aggregatable=&quot;true&quot;&gt;
&lt;columns&gt;
    &lt;column id=&quot;product&quot;/&gt;
    &lt;column id=&quot;quantity&quot;/&gt;
    &lt;column id=&quot;amount&quot;&gt;
        &lt;aggregation type=&quot;SUM&quot;/&gt;
    &lt;/column&gt;
&lt;/columns&gt;
&lt;rows datasource=&quot;itemsDs&quot;/&gt;
&lt;/table&gt;</programlisting></para>
          <para>Для отображения агрегированного значения в виде, отличном от стандартного для данного <link linkend="datatype">Datatype</link>, для него  можно указать <link linkend="gui_formatter">Formatter</link>:<programlisting language="xml" lang="">&lt;column id=&quot;amount&quot;&gt;
&lt;aggregation type=&quot;SUM&quot;&gt;
    &lt;formatter class=&quot;com.haulmont.sample.MyFormatter&quot;/&gt;
&lt;/aggregation&gt;
&lt;/column&gt;</programlisting></para>
        </listitem>
        <listitem>
          <para>Атрибут <code>editable</code> позволяет перевести таблицу в режим in-place редактирования ячеек. В этом режиме в колонках, имеющих атрибут <code>editable = true</code>, отображаются компоненты для редактирования значений атрибутов сущности, находящейся в источнике данных.</para>
          <para>Тип компонента для каждой редактируемой колонки выбирается автоматически на основании типа атрибута сущности. Например, для строковых и числовых атрибутов используется <link linkend="gui_TextField">TextField</link>, для <code>Date</code> - <link linkend="gui_DateField">DateField</link>, для перечислений - <link linkend="gui_LookupField">LookupField</link>, для ссылок на другие сущности - <link linkend="gui_PickerField">PickerField</link>. </para>
          <para>Для редактируемой колонки типа <code>Date</code> можно дополнительно указать атрибуты <code>dateFormat</code> или <code>resolution</code> аналогично описанным для <link linkend="gui_DateField">DateField</link>.</para>
          <para>Для редактируемой колонки, отображающей связанную сущность, можно дополнительно указать атрибуты <link linkend="gui_attr_basic_optionsDatasource">optionsDatasource</link> и <link linkend="gui_attr_basic_captionProperty">captionProperty</link>. При указании <code>optionsDatasource</code> вместо <link linkend="gui_PickerField">PickerField</link> используется компонент <link linkend="gui_LookupField">LookupField</link>.</para>
          <para>Произвольно настроить отображение ячеек, в том числе для редактирования содержимого, можно с помощью метода <code>Table.addGeneratedColumn()</code>  - см. ниже.</para>
        </listitem>
      </itemizedlist>
      <para>Методы интерфейса <code>Table</code>:</para>
      <itemizedlist>
        <listitem>
          <para><code>getSelected()</code>, <code>getSingleSelected()</code> - возвращают экземпляры сущностей, соответствующие выделенным в таблице строкам. Коллекцию можно получить вызовом метода <code>getSelected()</code>.  Если ничего не выбрано, возвращается пустой набор. Если <code>multiselect</code> отключен, удобно пользоваться методом <code>getSingleSelected()</code>, возвращающим одну выбранную сущность или <code>null</code>, если ничего не выбрано.</para>
        </listitem>
        <listitem>
          <para>Метод <code>addGeneratedColumn()</code> позволяет задать собственное представление данных в колонке. Он принимает два параметра: идентификатор колонки и реализацию интерфейса <code>Table.ColumnGenerator</code>.  Идентификатор может совпадать с одним из идентификаторов, указанных для колонок таблицы в XML-дескрипторе - в этом случае новая колонка вставляется вместо заданной в XML. Если идентификатор не совпадает ни с одной колонкой, создается новая справа.</para>
          <para>Метод <code>generateCell()</code> интерфейса <code>Table.ColumnGenerator</code> вызывается таблицей для каждой строки, и в него передается экземпляр сущности, отображаемой в данной строке. Метод <code>generateCell()</code> должен вернуть визуальный компонент, который и будет отображаться в ячейке.  </para>
          <para>Пример использования:<programlisting language="java">@Inject
protected Table carsTable;

@Inject
protected ComponentsFactory componentsFactory;

@Override
public void init(Map&lt;String, Object&gt; params) {
carsTable.addGeneratedColumn(&quot;colour&quot;, new Table.ColumnGenerator() {
    @Override
    public Component generateCell(Entity entity) {
        LookupPickerField field = componentsFactory.createComponent(LookupPickerField.NAME);
        field.setDatasource(carsTable.getItemDatasource(entity), &quot;colour&quot;);
        field.setOptionsDatasource(coloursDs);
        field.addLookupAction();
        field.addOpenAction();
        return field;
    }
});
}</programlisting></para>
          <para>В данном случае в ячейках колонки <code>colour</code> таблицы отображается компонент <link linkend="gui_LookupPickerField">LookupPickerField</link>. Компонент должен сохранять свое значение в атрибут <code>colour</code> сущности, экземпляр которой отображается в данной строке. Для этого у таблицы методом <code>getItemDatasource()</code> запрашивается источник данных для текущего экземпляра сущности, и передается компоненту <code>LookupPickerField</code>.</para>
          <para>Если в метод <code>addGeneratedColumn()</code> передан идентификатор колонки, не объявленной в XML-дескрипторе, то может понадобиться установить заголовок новой колонки следующим образом:<programlisting language="java">carsTable.getColumn(&quot;colour&quot;).setCaption(&quot;Colour&quot;);</programlisting></para>
        </listitem>
        <listitem>
          <para>Метод <code>setStyleProvider()</code> позволяет задать стиль отображения ячеек таблицы. Параметром метода должна быть реализация интерфейса <code>Table.StyleProvider</code>. Метод <code>getStyleName()</code> этого интерфейса вызывается таблицей отдельно для каждой строки и для каждой ячейки. Если метод вызван для строки, то первый параметр содержит экземпляр сущности, отображаемый этой строкой, а второй параметр <code>null</code>. Если же метод вызван для ячейки, то второй параметр содержит имя атрибута, отображаемого этой ячейкой.</para>
          <para>Пример задания стилей:
            <programlisting language="java"><xi:include href="../../source/gui/table_setStyleProvider_1.java" encoding="UTF-8" parse="text"/></programlisting></para>
          <para>Далее нужно определить заданные для строк и ячеек стили в теме приложения. Подробная информация о
            создании темы находится в<xref linkend="gui_themes"/>. Для веб-клиента новые стили определяются в файле
            <filename>styles.scss</filename>. Имена стилей, заданные в контроллере, совместно с префиксами,
            обозначающими строку или колонку таблицы, образуют CSS-селекторы. Например:
            <programlisting language="css"><xi:include href="../../source/gui/table_setStyleProvider_2.css" encoding="UTF-8" parse="text"/></programlisting></para>
        </listitem>
        <listitem>
          <para>Метод <code>addPrintable()</code> позволяет задать специфическое представление данных колонки при
            выводе в XLS-файл, осуществляемом
            <link linkend="standard_actions">стандартным действием</link> <code>excel</code> или напрямую с помощью
            класса <code>ExcelExporter</code>. Метод принимает идентификатор колонки и реализацию интерфейса
            <code>Table.Printable</code> для нее.
            Например:
            <programlisting language="java"><xi:include href="../../source/gui/table_addPrintable_1.java" encoding="UTF-8" parse="text"/></programlisting>
          </para>
          <para>Метод <code>getValue()</code> интерфейса <code>Table.Printable</code> должен возвращать данные, которые будут находиться в ячейке таблицы. Это может быть не только строка - метод может возвращать значения других типов, например, числовые данные или даты, и они будут представлены в XLS-файле соответствующим образом. </para>
          <para>Если форматированный вывод в XLS необходим для генерируемой колонки, нужно использовать реализацию
            интерфейса  <code>Table.PrintableColumnGenerator</code>, передавая ее методу <code>addGeneratedColumn()</code>.
            Значение для вывода в ячейку XLS-документа  задается в методе <code>getValue()</code> этого интерфейса:
            <programlisting language="java"><xi:include href="../../source/gui/table_addPrintable_2.java" encoding="UTF-8" parse="text"/></programlisting>
          </para>
          <para>Если генерируемой колонке тем или иным способом не задано представления <code>Printable</code>, то в случае, если колонке  соответствует атрибут сущности, будет выведено его значение, в противном случае не будет выведено ничего.</para>
        </listitem>
        <listitem>
          <para>Метод <code>setItemClickAction()</code> позволяет задать <link linkend="gui_Action">действие</link>, выполняемое при двойном клике на строке таблицы. Если такое действие не задано, при двойном клике таблица пытается найти среди своих действий подходящее в следующем порядке:<itemizedlist>
              <listitem>
                <para>Действие, назначенное на клавишу <keycap>Enter</keycap> посредством свойства <code>shortcut</code>.</para>
              </listitem>
              <listitem>
                <para>Действие с именем <code>edit</code>.</para>
              </listitem>
              <listitem>
                <para>Действие с именем <code>view</code>.</para>
              </listitem>
            </itemizedlist></para>
          <para>Если такое действие найдено и имеет свойство enabled = true, оно выполняется.</para>
        </listitem>
        <listitem>
          <para>Метод <code>setEnterPressAction()</code> позволяет задать <link linkend="gui_Action">действие</link>, выполняемое при нажатии клавиши <keycap>Enter</keycap>. Если такое действие не задано, таблица пытается найти среди своих действий подходящее в следующем порядке:<itemizedlist>
              <listitem>
                <para>Действие, назначенное методом <code>setItemClickAction()</code>.</para>
              </listitem>
              <listitem>
                <para>Действие, назначенное на клавишу <keycap>Enter</keycap> посредством свойства <code>shortcut</code>.</para>
              </listitem>
              <listitem>
                <para>Действие с именем <code>edit</code>.</para>
              </listitem>
              <listitem>
                <para>Действие с именем <code>view</code>.</para>
              </listitem>
            </itemizedlist></para>
          <para>Если такое действие найдено и имеет свойство enabled = true, оно выполняется.</para>
        </listitem>
      </itemizedlist>
      <para>Атрибуты <sgmltag>table</sgmltag>:</para>
      <informaltable frame="none" pgwide="0" align="left">
        <tgroup cols="4" colsep="1" rowsep="1" align="left"><colspec colname="c1"/><colspec colname="c2"/><colspec colname="c3"/><colspec colname="c4"/>c <tbody>
            <row>
              <entry>
                <link linkend="gui_attr_table_allowPopupMenu">allowPopupMenu</link>
              </entry>
              <entry align="left">
                <link linkend="gui_attr_basic_enable">enable</link>
              </entry>
              <entry align="left">
                <link linkend="gui_attr_table_multiselect">multiselect</link>
              </entry>
              <entry align="left">
                <link linkend="gui_attr_basic_stylename">stylename</link>
              </entry>
            </row>
            <row>
              <entry>
                <link linkend="gui_attr_table_columnControlVisible">columnControlVisible</link>
              </entry>
              <entry align="left">
                <link linkend="gui_attr_basic_height">height</link>
              </entry>
              <entry align="left">
                <link linkend="gui_attr_table_presentations">presentations</link>
              </entry>
              <entry>
                <link linkend="gui_attr_basic_visible">visible</link>
              </entry>
            </row>
            <row>
              <entry align="left">
                <link linkend="gui_attr_basic_description">description</link>
              </entry>
              <entry align="left">
                <link linkend="gui_attr_basic_id">id</link>
              </entry>
              <entry>
                <link linkend="gui_attr_table_reorderingAllowed">reorderingAllowed</link>
              </entry>
              <entry>
                <link linkend="gui_attr_basic_width">width</link>
              </entry>
            </row>
            <row>
              <entry>
                <link linkend="gui_attr_basic_editable">editable</link>
              </entry>
              <entry>
                <link linkend="gui_attr_basic_margin">margin</link>
              </entry>
              <entry>
                <link linkend="gui_attr_table_sortable">sortable</link>
              </entry>
            </row>
          </tbody></tgroup>
      </informaltable>
      <para>Элементы <sgmltag>table</sgmltag>:</para>
      <informaltable frame="none" pgwide="0" align="left">
        <tgroup cols="1" colsep="1" rowsep="1" align="left">
          <colspec colname="c1"/>
          <tbody>
            <row>
              <entry>
                <link linkend="gui_element_table_actions">actions</link>
              </entry>
            </row>
            <row>buttonsPanel<entry>
                <link linkend="gui_ButtonsPanel">buttonsPanel</link>
              </entry></row>
            <row>
              <entry>
                <link linkend="gui_element_table_columns">columns</link>
              </entry>
            </row>
            <row>
              <entry>
                <link linkend="gui_element_table_rows">rows</link>
              </entry>
            </row>
            <row>
              <entry>
                <link linkend="gui_attr_table_rowsCount">rowsCount</link>
              </entry>
            </row>
          </tbody>
        </tgroup>
      </informaltable>
      <para>Атрибуты <link linkend="gui_element_table_columns">column</link>:</para>
      <informaltable frame="none" pgwide="0" align="left">
        <tgroup cols="4" colsep="1" rowsep="1" align="left"><colspec colname="c1"/><colspec colname="c2"/><colspec colname="c3"/><colspec colname="c4"/>c <tbody>
            <row>
              <entry align="left">
                <link linkend="gui_attr_table_column_caption">caption</link>
              </entry>
              <entry>
                <link linkend="gui_attr_dateField_dateFormat">dateFormat</link>
              </entry>
              <entry>
                <link linkend="gui_attr_table_column_linkInvoke">linkInvoke</link>
              </entry>
                <entry>
                <link linkend="gui_attr_basic_optionsDatasource">optionsDatasource</link>
                </entry>
            </row>
            <row>
              <entry>
                <link linkend="gui_attr_basic_captionProperty">captionProperty</link>
              </entry>
              <entry align="left">
                <link linkend="gui_attr_table_column_editable">editable</link>
              </entry>
              <entry>
                <link linkend="gui_attr_table_column_linkScreen">linkScreen</link>
              </entry>
              <entry>
                <link linkend="gui_attr_dateField_resolution">resolution</link>
              </entry>
            </row>
            <row>
              <entry align="left">
                <link linkend="gui_attr_basic_clickAction">clickAction</link>
              </entry>
              <entry align="left">
                <link linkend="gui_attr_table_column_id">id</link>
              </entry>
              <entry>
                <link linkend="gui_attr_table_column_linkScreenOpenType">linkScreenOpenType</link>
              </entry>
              <entry>
                <link linkend="gui_attr_basic_visible">visible</link>
              </entry>
            </row>
            <row>
              <entry align="left">
                <link linkend="gui_attr_table_column_collapsed">collapsed</link>
              </entry>
              <entry align="left">
                  <link linkend="gui_attr_table_column_link">link</link>
              </entry>
              <entry>
               <link linkend="gui_attr_table_column_maxTextLength">maxTextLength</link>
              </entry>
              <entry>
                <link linkend="gui_attr_table_column_width">width</link>
              </entry>
            </row>
          </tbody></tgroup>
      </informaltable>
      <para>Элементы <link linkend="gui_element_table_columns">column</link>:</para>
      <informaltable frame="none" pgwide="0" align="left">
        <tgroup cols="1" colsep="1" rowsep="1" align="left"><colspec colname="c1"/>c <tbody>
            <row><entry align="left">
                <link linkend="gui_formatter">formatter</link>
              </entry>editable</row>
          </tbody></tgroup>
      </informaltable>
      <para>Атрибуты <link linkend="gui_element_table_rows">rows</link>:</para>
      <informaltable frame="none" pgwide="0" align="left">
        <tgroup cols="1" colsep="1" rowsep="1" align="left"><colspec colname="c1"/>c <tbody>
            <row><entry align="left">
                <link linkend="gui_attr_basic_datasource">datasource</link>
              </entry>editable</row>
          </tbody></tgroup>
      </informaltable>
    </section>
    <section id="gui_TextArea">
      <title>TextArea</title>
      <para>Текстовая область  − многострочное текстовое поле для редактирования текста.</para>
      <para>XML-имя компонента: <sgmltag>textArea</sgmltag></para>
      <mediaobject>
        <imageobject>
          <imagedata align="center" fileref="img/gui_TextArea_dia.png"/>
        </imageobject>
      </mediaobject>
      <para>Компонент <code>TextArea</code> реализован для блоков <structname>Web Client</structname> и <structname>Desktop Client</structname>.</para>
      <para><code>TextArea</code> в основном повторяет функциональность <code>
          TextField</code>, за исключением того, что ему нельзя установить <code>datatype</code>. То есть <code>TextArea</code> предназначен для работы только с текстом и строковыми атрибутами сущностей.</para>
      <para>Компонент <code>TextArea</code> имеет следующие специфические атрибуты:</para>
      <itemizedlist>
        <listitem>
          <para id="gui_attr_textArea_cols_rows"><sgmltag>cols</sgmltag> и <sgmltag>rows</sgmltag> задают количество строк и столбцов текста:<programlisting language="xml">&lt;textArea id=&quot;textArea&quot; cols=&quot;20&quot; rows=&quot;5&quot; caption=&quot;msg://name&quot;/&gt;</programlisting></para>
          <para>Значения <code>width</code> и <code>height</code> имеют приоритет над значениями <code>cols</code> и <code>rows</code>.</para>
        </listitem>
        <listitem>
          <para id="gui_attr_textArea_resizable"><sgmltag>resizable</sgmltag> - при задании атрибуту значения <literal>true</literal> и установке количества строк, больших одной, появляется возможность  изменять размеры компонента:</para>
          <programlisting language="xml">&lt;textArea id=&quot;textArea&quot; resizable=&quot;true&quot; caption=&quot;msg://name&quot; rows=&quot;5&quot;/&gt;</programlisting>
          <mediaobject>
            <imageobject>
              <imagedata align="center" fileref="img/gui_textField_resizable.png"/>
            </imageobject>
          </mediaobject>
        </listitem>
      </itemizedlist>
      <para>Атрибуты <sgmltag>textArea</sgmltag>:</para>
      <informaltable frame="none" pgwide="0" align="left">
        <tgroup cols="5" colsep="1" rowsep="1" align="left"><colspec colname="c0"/><colspec colname="c1"/><colspec colname="c2"/><colspec colname="c3"/><colspec colname="c4"/>c <tbody>
            <row><entry>
                <link linkend="gui_attr_basic_align">align</link>
              </entry><entry>
                <link linkend="gui_attr_basic_description">description</link>
              </entry><entry align="left">
                <link linkend="gui_attr_basic_id">id</link>
              </entry>editable<entry align="left">
                <link linkend="gui_attr_basic_requiredMessage">requiredMessage</link>
              </entry><entry align="left">
                <link linkend="gui_attr_textField_trim">trim</link>
              </entry></row>
            <row>
              <entry>
                <link linkend="gui_attr_basic_caption">caption</link>
              </entry>
              <entry>
                <link linkend="gui_attr_basic_editable">editable</link>
              </entry>
              <entry align="left">
                <link linkend="gui_attr_textField_maxLength">maxLength</link>
              </entry>
              <entry>
                <link linkend="gui_attr_textArea_resizable">resizable</link>
              </entry>
              <entry>
                <link linkend="gui_attr_basic_visible">visible</link>
              </entry>
            </row>
            <row>
              <entry>
                <link linkend="gui_attr_textArea_cols_rows">cols</link>
              </entry>
              <entry align="left">
                <link linkend="gui_attr_basic_enable">enable</link>
              </entry>
              <entry align="left">
                <link linkend="gui_attr_basic_property">property</link>
              </entry>
              <entry>
                <link linkend="gui_attr_textArea_cols_rows">rows</link>
              </entry>
              <entry>
                <link linkend="gui_attr_basic_width">width</link>
              </entry>
            </row>
            <row>
              <entry>
                <link linkend="gui_attr_basic_datasource">datasource</link>
              </entry>
              <entry align="left">
                <link linkend="gui_attr_basic_height">height</link>
              </entry>
              <entry align="left">
                <link linkend="gui_attr_basic_required">required</link>
              </entry>
              <entry>
                <link linkend="gui_attr_basic_stylename">stylename</link>
              </entry>
            </row>
          </tbody></tgroup>
      </informaltable>
    </section>
    <section id="gui_TextField">
      <title>TextField</title>
      <para>Поле для редактирования текста. Может использоваться как для работы с атрибутами сущностей, так и для ввода и отображения произвольной текстовой информации.</para>
      <para>XML-имя компонента: <sgmltag>textField</sgmltag></para>
      <mediaobject>
        <imageobject>
          <imagedata align="center" fileref="img/gui_TextField_dia.png"/>
        </imageobject>
      </mediaobject>
      <para>Компонент текстового поля реализован для блоков <structname>Web Client</structname> и <structname>Desktop Client</structname>.</para>
      <itemizedlist>
        <listitem>
          <para>Пример текстового поля с заголовком, взятым из <link linkend="message_packs">пакета локализованных сообщений</link>:<programlisting language="xml">&lt;textField id=&quot;nameField&quot; caption=&quot;msg://name&quot;/&gt;</programlisting></para>
          <para>На рисунке ниже показан вид простого текстового поля.</para>
          <mediaobject>
            <imageobject>
              <imagedata align="center" fileref="img/gui_textField.png"/>
            </imageobject>
          </mediaobject>
        </listitem>
        <listitem>
          <para>Для создания текстового поля, связанного с данными, необходимо использовать атрибуты <link linkend="gui_attr_basic_datasource">datasource</link> и <link linkend="gui_attr_basic_property">property</link>.<programlisting language="xml">&lt;dsContext&gt;
&lt;datasource id=&quot;customerDs&quot; class=&quot;com.sample.sales.entity.Customer&quot; view=&quot;_local&quot;/&gt;
&lt;/dsContext&gt;
&lt;layout&gt;
&lt;textField datasource=&quot;customerDs&quot; property=&quot;name&quot; caption=&quot;msg://name&quot;/&gt;</programlisting></para>
          <para>Как видно из примера, в экране описывается <link linkend="datasources">источник данных</link> <literal>customerDs</literal> для некоторой сущности <code>Покупатель (Customer)</code>, имеющей атрибут <code>name</code>. В компоненте текстового поля  в атрибуте <link linkend="gui_attr_basic_datasource">datasource</link> указывается ссылка на источник данных, а в атрибуте <link linkend="gui_attr_basic_property">property</link> − название атрибута сущности, значение которого должно быть отображено в текстовом поле.</para>
          <mediaobject>
            <imageobject>
              <imagedata align="center" fileref="img/gui_textField_data.png"/>
            </imageobject>
          </mediaobject>
        </listitem>
        <listitem>
          <para id="gui_attr_textField_datatype">Если поле не связано с атрибутом сущности (то есть не указан источник данных и название атрибута), то можно указать тип данных с помощью атрибута <sgmltag>datatype</sgmltag>. Тип данных используется для форматирования значения поля. В качестве значения атрибута может быть указано любое имя типа данных, зарегистрированного в метаданных приложения - см. <xref linkend="datatype"/>. Как правило, в <code>TextField</code> используются следующие типы данных:</para>
          <itemizedlist>
            <listitem>
              <para><literal>decimal</literal></para>
            </listitem>
            <listitem>
              <para><literal>double</literal></para>
            </listitem>
            <listitem>
              <para><literal>int</literal></para>
            </listitem>
            <listitem>
              <para><literal>long</literal></para>
            </listitem>
          </itemizedlist>
          <para>В качестве примера рассмотрим текстовое поле с типом данных <literal>Integer</literal>. <programlisting language="xml">&lt;textField id=&quot;integerField&quot; datatype=&quot;int&quot; caption=&quot;msg://integerFieldName&quot;/&gt;</programlisting></para>
          <para>Если в таком поле ввести значение, которое невозможно интерпретировать как целое число, то при потере фокуса полем будет выведено сообщение об ошибке и значение поля вернется на предыдущее:</para>
          <mediaobject>
            <imageobject>
              <imagedata align="center" fileref="img/gui_textField_int.png"/>
            </imageobject>
          </mediaobject>
        </listitem>
        <listitem>
          <para>Текстовому полю может быть назначен валидатор - класс, реализующий интерфейс <code>Field.Validator</code>. Валидатор позволяет дополнительно к <code>datatype</code> ограничить вводимую пользователем информацию. Например, для создания поля ввода положительных целых чисел нужно создать класс валидатора:<programlisting language="java">public class PositiveIntegerValidator implements Field.Validator {
@Override
public void validate(Object value) throws ValidationException {
    Integer i = (Integer) value;
    if (i &lt;= 0)
        throw new ValidationException(&quot;Value must be positive&quot;);
}
}</programlisting></para>
          <para>и задать его для текстового поля с типом данных <code>int</code> в элементе <link linkend="gui_validator">validator</link>:<programlisting language="xml">&lt;textField id=&quot;integerField&quot; datatype=&quot;int&quot;&gt;
&lt;validator class=&quot;com.sample.sales.gui.PositiveIntegerValidator&quot;/&gt;
&lt;/textField&gt;</programlisting></para>
          <para>В отличие от проверки вводимой строки на соответствие типу данных, валидация срабатывает не сразу при потере полем фокуса, а только при вызове у поля метода <code>validate()</code>. Это означает, что поле (и связанный с ним атрибут сущности) может некоторое время содержать значение, не удовлетворяющее условиям валидации (в приведенном примере неположительное число). Это не является проблемой, так как обычно поля редактирования с валидацией располагаются в <link linkend="screen_edit">экране редактирования</link>, а он автоматически вызывает валидацию всех своих полей перед коммитом. Если же поле находится не в экране редактирования, то необходимо вызывать метод <code>validate()</code> поля в контроллере явно.</para>
        </listitem>
        <listitem id="gui_attr_textField_maxLength">
          <para>Если текстовое поле связано с атрибутом сущности (через <code>datasource</code> и <code>property</code>), и если для атрибута сущности в <link linkend="entity_attr_annotations">JPA-аннотации</link> <code>@Column</code> указан параметр <code>length</code>, то <code>TextField</code> будет соответственно ограничивать максимальную длину вводимого текста.</para>
          <para>Если текстовое поле не связано с атрибутом, либо для него не определено значение <code>length</code>, либо это значение нужно переопределить, то для ограничения максимальной длины вводимого текста можно использовать атрибут <sgmltag>maxLength</sgmltag>. Значение &quot;-1&quot; означает отсутствие ограничения. Например:<programlisting language="xml">&lt;textField id=&quot;shortTextField&quot; maxLength=&quot;10&quot;/&gt;</programlisting></para>
        </listitem>
        <listitem id="gui_attr_textField_trim">
          <para>По умолчанию текстовое поле отсекает пробелы в начале и конце введенной строки. То есть если пользователь ввел строку  &quot;<userinput> aaa bbb </userinput>&quot; то значением поля, возвращаемым методом <code>getValue()</code> и сохраняемым в связанный атрибут сущности, будет строка &quot;<userinput>aaa bbb</userinput>&quot;. Для того, чтобы отключить отсечение пробелов, используйте атрибут <sgmltag>trim</sgmltag> со значением <code>false</code>.</para>
          <para>Следует иметь в виду, что отсечение пробелов работает только при вводе нового значения. Если в значении связанного атрибута уже присутствуют пробелы, они будут отображаться, пока пользователь не изменит значение поля.</para>
        </listitem>
        <listitem>
          <para>Текстовое поле всегда вместо введенной пустой строки возвращает <code>null</code>. Соответственно, при включенном атрибуте <sgmltag>trim</sgmltag> строка, состоящая из одних пробелов также превратится в <code>null</code>.</para>
        </listitem>
          <listitem>
              <para>Атрибут <code>inputPrompt</code> задает строку, отображаемую в поле, если его значение равно
                  <code>null</code>. Реализовано только для <structname>web</structname> клиента.</para>
          </listitem>
        <listitem>
          <para>Метод <code>setCursorPosition()</code> используется для установки позиции курсора в указанный индекс
            (начинается с 0). После вызова метода поле принимает фокус ввода.</para>
        </listitem>
      </itemizedlist>
      <para>Атрибуты <sgmltag>textField</sgmltag>:</para>
        <para>
            <link linkend="gui_attr_basic_align">align</link> |
            <link linkend="gui_attr_basic_caption">caption</link> |
            <link linkend="gui_attr_basic_datasource">datasource</link> |
            <link linkend="gui_attr_textField_datatype">datatype</link> |
            <link linkend="gui_attr_basic_description">description</link> |
            <link linkend="gui_attr_basic_editable">editable</link> |
            <link linkend="gui_attr_basic_enable">enable</link> |
            <link linkend="gui_attr_basic_height">height</link> |
            <link linkend="gui_attr_basic_id">id</link> |
            <link linkend="gui_attr_basic_inputPrompt">inputPrompt</link> |
            <link linkend="gui_attr_textField_maxLength">maxLength</link> |
            <link linkend="gui_attr_basic_property">property</link> |
            <link linkend="gui_attr_basic_required">required</link> |
            <link linkend="gui_attr_basic_requiredMessage">requiredMessage</link> |
            <link linkend="gui_attr_basic_stylename">stylename</link> |
            <link linkend="gui_attr_textField_trim">trim</link> |
            <link linkend="gui_attr_basic_visible">visible</link> |
            <link linkend="gui_attr_basic_width">width</link>
        </para>
      <para>Элементы <sgmltag>textField</sgmltag>:</para>
        <para><link linkend="gui_validator">validator</link></para>
    </section>
    <section id="gui_TimeField">
      <title>TimeField</title>
      <para>Поле для отображения и ввода времени.</para>
      <mediaobject>
        <imageobject>
          <imagedata fileref="img/gui_timeField.png"/>
        </imageobject>
      </mediaobject>
      <para>XML-имя компонента: <sgmltag>timeField</sgmltag>.</para>
      <mediaobject>
        <imageobject>
          <imagedata align="center" fileref="img/gui_timeField_dia.png"/>
        </imageobject>
      </mediaobject>
      <para>Компонент <code>TimeField</code> реализован для блоков <structname>Web Client</structname> и <structname>Desktop Client</structname>.</para>
      <itemizedlist>
        <listitem>
          <para>Для создания поля даты, связанного с данными, необходимо использовать атрибуты <link linkend="gui_attr_basic_datasource">datasource</link> и <link linkend="gui_attr_basic_property">property</link>:</para>
          <programlisting language="xml">&lt;dsContext&gt;
&lt;datasource id=&quot;orderDs&quot; class=&quot;com.sample.sales.entity.Order&quot; view=&quot;_local&quot;/&gt;
&lt;/dsContext&gt;
&lt;layout&gt;
&lt;timeField datasource=&quot;orderDs&quot; property=&quot;deliveryTime&quot;/&gt;</programlisting>
          <para>Как видно из примера, в экране описывается источник данных <code>orderDs</code> для некоторой сущности Заказ (<code>Order</code>), имеющей атрибут <code>deliveryTime</code>. В компоненте ввода времени в атрибуте <code>datasource</code> указывается ссылка на источник данных, а в атрибуте <code>property</code> − название атрибута сущности, значение которого должно быть отображено в поле.</para>
          <para>Связанный атрибут сущности должен быть типа <code>java.util.Date</code> или <code>java.sql.Time</code>.</para>
        </listitem>
        <listitem>
          <para>Формат отображения времени определяется <link linkend="datatype">типом данных</link> <code>time</code> и задается в <link linkend="main_message_pack">главном пакете локализованных сообщений</link> в ключе <code>timeFormat</code>.</para>
        </listitem>
        <listitem id="gui_attr_timeField_timeFormat">
          <para>Формат отображения времени можно также задать в атрибуте <code>timeFormat</code> компонента. Это может
            быть как сама строка формата, так и ключ в пакете сообщений (с префиксом <code>msg://</code>).</para>
        </listitem>
        <listitem id="gui_attr_timeField_showSeconds">
          <para>Независимо от упомянутого выше формата отображением секунд можно управлять с помощью атрибута <sgmltag>showSeconds</sgmltag>. По умолчанию секунды отображаются, если формат содержит символы <code>ss</code>.<programlisting language="xml">&lt;timeField datasource=&quot;orderDs&quot; property=&quot;createTs&quot; showSeconds=&quot;true&quot;/&gt;</programlisting><mediaobject>
              <imageobject>
                <imagedata align="center" fileref="img/gui_timeFieldSec.png"/>
              </imageobject>
            </mediaobject></para>
        </listitem>
      </itemizedlist>
      <para>Атрибуты <sgmltag>timeField</sgmltag>:
        <link linkend="gui_attr_basic_align">align</link> |
        <link linkend="gui_attr_basic_caption">caption</link> |
        <link linkend="gui_attr_basic_editable">editable</link> |
        <link linkend="gui_attr_basic_enable">enable</link> |
        <link linkend="gui_attr_basic_datasource">datasource</link> |
        <link linkend="gui_attr_basic_description">description</link> |
        <link linkend="gui_attr_basic_height">height</link> |
        <link linkend="gui_attr_basic_id">id</link> |
        <link linkend="gui_attr_basic_property">property</link> |
        <link linkend="gui_attr_basic_required">required</link> |
        <link linkend="gui_attr_basic_requiredMessage">requiredMessage</link> |
        <link linkend="gui_attr_timeField_showSeconds">showSeconds</link> |
        <link linkend="gui_attr_basic_stylename">stylename</link> |
        <link linkend="gui_attr_timeField_timeFormat">timeFormat</link> |
        <link linkend="gui_attr_basic_visible">visible</link> |
        <link linkend="gui_attr_basic_width">width</link>
      </para>
      <para>Элементы <sgmltag>timeField</sgmltag>:
        <link linkend="gui_validator">validator</link>
      </para>
    </section>
    <section id="gui_TokenList">
      <title>TokenList</title>
      <para>Компонент <code>TokenList</code> представляет собой упрощенный вариант работы со списком сущностей: названия экземпляров располагаются в вертикальном или горизонтальном списке, добавление производится из выпадающего списка, удаление - с помощью кнопок, расположенных  рядом с каждым экземпляром.</para>
      <mediaobject>
        <imageobject>
          <imagedata align="center" fileref="img/gui_tokenList.png"/>
        </imageobject>
      </mediaobject>
      <para>XML-имя компонента: <sgmltag>tokenList</sgmltag></para>
      <mediaobject>
        <imageobject>
          <imagedata align="center" fileref="img/gui_TokenList_dia.png"/>
        </imageobject>
      </mediaobject>
      <para>Компонент реализован для блоков <structname>Web Client</structname> и <structname>Desktop Client</structname>.</para>
      <para>Пример описания компонента <code>TokenList</code>   в XML-дескрипторе экрана:<programlisting language="xml">&lt;dsContext&gt;
&lt;datasource id=&quot;orderDs&quot;
            class=&quot;com.sample.sales.entity.Order&quot;
            view=&quot;order-edit&quot;&gt;
    &lt;collectionDatasource id=&quot;productsDs&quot; property=&quot;products&quot;/&gt;
&lt;/datasource&gt;
&lt;collectionDatasource id=&quot;allProductsDs&quot;
                      class=&quot;com.sample.sales.entity.Product&quot;
                      view=&quot;_minimal&quot; &gt;
    &lt;query&gt;select p from sales$Product p order by p.name&lt;/query&gt;
&lt;/collectionDatasource&gt;
&lt;/dsContext&gt;
&lt;layout&gt;
&lt;tokenList id=&quot;productsList&quot; datasource=&quot;productsDs&quot; inline=&quot;true&quot; width=&quot;500px&quot;&gt;
    &lt;lookup optionsDatasource=&quot;allProductsDs&quot;/&gt;
    &lt;button caption=&quot;msg://add&quot;/&gt;
&lt;/tokenList&gt;</programlisting></para>
      <para>Здесь в элементе <code>dsContext</code> определен вложенный источник данных <code>productsDs</code>, содержащий коллекцию входящих в состав заказа продуктов. Кроме того, определен  источник данных <code>allProductsDs</code>, содержащий коллекцию всех продуктов, имеющихся в базе данных. Компонент <code>TokenList</code> с идентификатором <code>productsList</code> отображает содержимое источника данных <code>productsDs</code>, а также позволяет изменять эту коллекцию, добавляя в него экземпляры из источника данных <code>allProductsDs</code>.</para>
      <para>Атрибуты <code>tokenList</code>:<itemizedlist>
          <listitem>
            <para id="gui_attr_tokenList_position"><sgmltag>position</sgmltag> - задает позиционирование раскрывающегося списка. Атрибут может принимать два  значения: <code>TOP</code>, <code>BOTTOM</code>. По умолчанию <code>TOP</code>.</para>
            <mediaobject>
              <imageobject>
                <imagedata align="center" fileref="img/gui_tokenListBottom.png"/>
              </imageobject>
            </mediaobject>
          </listitem>
          <listitem>
            <para id="gui_attr_tokenList_inline">Атрибут <sgmltag>inline</sgmltag> задает отображение списка выбранных значений: вертикально или горизонтально. Значение <literal>true</literal> соответствует горизонтальному расположению, значение <literal>false</literal> − вертикальному. Так выглядит компонент с горизонтальным расположением значений:</para>
            <mediaobject>
              <imageobject>
                <imagedata align="center" fileref="img/gui_tokenListInline.png"/>
              </imageobject>
            </mediaobject>
          </listitem>
          <listitem>
            <para id="gui_attr_tokenList_simple"><sgmltag>simple</sgmltag> -  значение <literal>true</literal> позволяет убрать  компонент выбора, оставляя только кнопку добавления. При нажатии на кнопку добавления сразу показывается экран списка экземпляров сущности, тип которой задан источником данных <code>datasource</code>. Идентификатор экрана выбора определяется по правилам, описанным для <link linkend="standard_actions">стандартного действия</link> <code>PickerField.LookupAction</code>. </para>
          </listitem>
        </itemizedlist></para>
      <para>Элементы <code>tokenList</code>:<itemizedlist>
          <listitem id="gui_element_tokenList_lookup">
            <para><sgmltag>lookup</sgmltag> − описатель компонента выбора значений.</para>
            <para>Атрибуты элемента <code>lookup</code>:</para>
            <para><itemizedlist>
                <listitem id="gui_attr_tokenList_lookup_lookup">
                  <para>Атрибут <sgmltag>lookup</sgmltag> задает возможность выбора значений через экран выбора сущностей:</para>
                  <mediaobject>
                    <imageobject>
                      <imagedata align="center" fileref="img/gui_tokenListLookup.png"/>
                    </imageobject>
                  </mediaobject>
                </listitem>
                <listitem id="gui_attr_tokenList_lookup_lookupScreen">
                  <para>Атрибут <code>lookupScreen</code>  задает идентификатор экрана для выбора значений в режиме <code>lookup=&quot;true&quot;</code>. Если данный атрибут не задан, то идентификатор экрана выбора определяется по правилам, описанным для <link linkend="standard_actions">стандартного действия</link> <code>PickerField.LookupAction</code>. </para>
                </listitem>
                <listitem id="gui_attr_tokenList_lookup_openType">
                  <para>Атрибут <sgmltag>openType</sgmltag> можно задать способ открытия экрана выбора, аналогично описанному для <link linkend="standard_actions">стандартного действия</link> <code>PickerField.LookupAction</code>. По умолчанию - <literal>THIS_TAB</literal>.</para>
                </listitem>
                <listitem>
                  <para id="gui_attr_tokenList_lookup_multiselect">Если значение атрибута <sgmltag>multiselect</sgmltag> установлено в <code>true</code>, то в мэп параметров экрана выбора в ключе <code>MULTI_SELECT</code> передается  значение <code>true</code>. Этот признак можно использовать для установки в экране режима множественного выбора. Данный ключ определен в перечислении <code>WindowParams</code>, поэтому с ним удобно работать следующим образом:<programlisting language="java">@Override
public void init(Map&lt;String, Object&gt; params) {
if (WindowParams.MULTI_SELECT.getBool(getContext())) {
    usersTable.setMultiSelect(true);
}
}</programlisting></para>
                </listitem>
              </itemizedlist></para>
          </listitem>
          <listitem id="gui_element_tokenList_button">
            <para><sgmltag>button</sgmltag> − описатель кнопки добавления значений. Может содержать атрибуты <link linkend="gui_attr_basic_caption">caption</link> и <link linkend="gui_attr_basic_icon">icon</link>.</para>
          </listitem>
        </itemizedlist></para>
      <para>Все атрибуты <sgmltag>tokenList</sgmltag>:</para>
      <informaltable frame="none" pgwide="0" align="left">
        <tgroup cols="4" colsep="1" rowsep="1" align="left"><colspec colname="c1"/><colspec colname="c2"/><colspec colname="c3"/><colspec colname="c4"/>c <tbody>
            <row><entry align="left">
                <link linkend="gui_attr_basic_caption">caption</link>
              </entry>editable<entry align="left">
                <link linkend="gui_attr_basic_editable">editable</link>
              </entry><entry align="left">
                <link linkend="gui_attr_tokenList_inline">inline</link>
              </entry><entry>
                <link linkend="gui_attr_basic_visible">visible</link>
              </entry></row>
            <row><entry>
                <link linkend="gui_attr_basic_captionProperty">captionProperty</link>
              </entry><entry align="left">
                <link linkend="gui_attr_basic_enable">enable</link>
              </entry>required<entry>
                <link linkend="gui_attr_tokenList_position">position</link>
              </entry><entry>
                <link linkend="gui_attr_basic_width">width</link>
              </entry></row>
            <row>
              <entry align="left">
                <link linkend="gui_attr_basic_datasource">datasource</link>
              </entry>
              <entry align="left">
                <link linkend="gui_attr_basic_height">height</link>
              </entry>
              <entry>
                <link linkend="gui_attr_tokenList_simple">simple</link>
              </entry>
            </row>
            <row>
              <entry align="left">
                <link linkend="gui_attr_basic_description">description</link>
              </entry>
              <entry align="left">
                <link linkend="gui_attr_basic_id">id</link>
              </entry>
              <entry>
                <link linkend="gui_attr_basic_stylename">stylename</link>
              </entry>
            </row>
          </tbody></tgroup>
      </informaltable>
      <para>Элементы <sgmltag>tokenList</sgmltag>:</para>
      <informaltable frame="none" pgwide="0" align="left">
        <tgroup cols="1" colsep="1" rowsep="1" align="left">
          <colspec colname="c1"/>
          <tbody>
            <row>
              <entry align="left">
                <link linkend="gui_element_tokenList_button">button</link>
              </entry>
            </row>
            <row>
              <entry>
                <link linkend="gui_element_tokenList_lookup">lookup</link>
              </entry>
            </row>
          </tbody>
        </tgroup>
      </informaltable>
      <para>Все атрибуты <link linkend="gui_element_tokenList_lookup">lookup</link>:</para>
      <informaltable frame="none" pgwide="0" align="left">
        <tgroup cols="3" colsep="1" rowsep="1" align="left"><colspec colname="c1"/><colspec colname="c2"/><colspec colname="c3"/>c <tbody>
            <row><entry align="left">
                <link linkend="gui_attr_basic_captionProperty">captionProperty</link>
              </entry>editable<entry align="left">
                <link linkend="gui_attr_tokenList_lookup_lookupScreen">lookupScreen</link>
              </entry><entry align="left">
                <link linkend="gui_attr_basic_optionsDatasource">optionsDatasource</link>
              </entry></row>
            <row><entry>
                <link linkend="gui_attr_lookupField_filterMode">filterMode</link>
              </entry><entry align="left">
                <link linkend="gui_attr_tokenList_lookup_multiselect">multiselect</link>
              </entry>required</row>
            <row>
              <entry align="left">
                <link linkend="gui_attr_tokenList_lookup_lookup">lookup</link>
              </entry>
              <entry align="left">
                <link linkend="gui_attr_tokenList_lookup_openType">openType</link>
              </entry>
            </row>
          </tbody></tgroup>
      </informaltable>
      <para>Атрибуты <link linkend="gui_element_tokenList_button">button</link>:</para>
      <informaltable frame="none" pgwide="0" align="left">
        <tgroup cols="1" colsep="1" rowsep="1" align="left"><colspec colname="c1"/>c <tbody>
            <row><entry align="left">
                <link linkend="gui_attr_basic_caption">caption</link>
              </entry>editable</row>
            <row><entry>
                <link linkend="gui_attr_basic_icon">icon</link>
              </entry>required</row>
          </tbody></tgroup>
      </informaltable>
    </section>
    <section id="gui_Tree">
      <title>Tree</title>
      <para>Компонент <code>Tree</code> предназначен для отображения иерархической структуры, представленной сущностями, содержащими ссылки на самих себя.</para>
      <mediaobject>
        <imageobject>
          <imagedata align="center" fileref="img/gui_Tree.png"/>
        </imageobject>
      </mediaobject>
      <para>XML-имя компонента: <sgmltag>tree</sgmltag></para>
      <mediaobject>
        <imageobject>
          <imagedata align="center" fileref="img/gui_tree_dia.png"/>
        </imageobject>
      </mediaobject>
      <para>Компонент реализован для блоков <structname>Web Client</structname> и <structname>Desktop Client</structname>. </para>
      <para>Для <code>Tree</code> в атрибуте <code>datasource</code> элемента <code>treechildren</code> должен быть указан <link linkend="datasources">hierarchicalDatasource</link>. Объявление <code>hierarchicalDatasource</code> должно содержать атрибут <code>hierarchyProperty</code> - имя атрибута сущности, являющегося ссылкой на саму себя. </para>
      <para>Пример описания компонента <code>Tree</code> в XML-дескрипторе экрана:<programlisting language="xml">&lt;dsContext&gt;
&lt;hierarchicalDatasource id=&quot;departmentsDs&quot; class=&quot;com.sample.sales.entity.Department&quot; view=&quot;browse&quot;
                        hierarchyProperty=&quot;parentDept&quot;&gt;
    &lt;query&gt;
        select d from sales$Department d order by d.createTs
    &lt;/query&gt;
&lt;/hierarchicalDatasource&gt;
&lt;/dsContext&gt;
&lt;layout&gt;
&lt;tree id=&quot;departmentsTree&quot; width=&quot;100%&quot; height=&quot;100%&quot;&gt;
    &lt;treechildren datasource=&quot;departmentsDs&quot; captionProperty=&quot;name&quot;/&gt;
&lt;/tree&gt;</programlisting></para>
      <para id="gui_element_tree_treechildren">В атрибуте <code>captionProperty</code> элемента <sgmltag>treechildren</sgmltag> можно задать имя свойства сущности, отображаемого в дереве. Если этот атрибут не определен, то будет отображаться <link linkend="namePattern">имя экземпляра</link> сущности.</para>
      <para>Метод <code>setItemClickAction()</code> позволяет задать <link linkend="gui_Action">действие</link>, которое будет выполнено при двойном клике по узлу дерева.</para>

        <para>Атрибуты <sgmltag>tree</sgmltag>:</para>
      <informaltable frame="none" pgwide="0" align="left">
        <tgroup cols="2" colsep="1" rowsep="1" align="left"><colspec colname="c1"/><colspec colname="c2"/>c <tbody>
            <row><entry>
                <link linkend="gui_attr_basic_enable">enable</link>
              </entry><entry>
                <link linkend="gui_attr_basic_stylename">stylename</link>
              </entry>editable</row>
            <row><entry>
                <link linkend="gui_attr_basic_height">height</link>
              </entry><entry>
                <link linkend="gui_attr_basic_visible">visible</link>
              </entry>required</row>
            <row>
              <entry align="left">
                <link linkend="gui_attr_basic_id">id</link>
              </entry>
              <entry align="left">
                <link linkend="gui_attr_basic_width">width</link>
              </entry>
            </row>
          </tbody></tgroup>
      </informaltable>
      <para>Элементы <sgmltag>tree</sgmltag>:</para>
      <informaltable frame="none" pgwide="0" align="left">
        <tgroup cols="1" colsep="1" rowsep="1" align="left"><colspec colname="c1"/>c <tbody>
            <row><entry align="left">
                <link linkend="gui_element_table_actions">actions</link>
              </entry>editable</row>
            <row><entry>
                <link linkend="gui_element_tree_treechildren">treechildren</link>
              </entry>required</row>
          </tbody></tgroup>
      </informaltable>
      <para>Атрибуты <sgmltag>treechildren</sgmltag>:</para>
      <informaltable frame="none" pgwide="0" align="left">
        <tgroup cols="1" colsep="1" rowsep="1" align="left"><colspec colname="c1"/>c <tbody>
            <row><entry align="left">
                <link linkend="gui_attr_basic_captionProperty">captionProperty</link>
              </entry>editable</row>
            <row><entry>
                <link linkend="gui_attr_basic_datasource">datasource</link>
              </entry>required</row>
          </tbody></tgroup>
      </informaltable>
    </section>
    <section id="gui_TreeTable">
      <title>TreeTable</title>
      <para>Компонент <code>TreeTable</code>   − иерархическая таблица,  отображающая в первой колонке древовидную структуру. Предназначена для работы с сущностями, которые содержат ссылки на самих себя. Это могут быть  например, файловая система или организационная структура предприятия.</para>
      <mediaobject>
        <imageobject>
          <imagedata align="center" fileref="img/gui_treeTable.png"/>
        </imageobject>
      </mediaobject>
      <para>XML-имя компонента: <sgmltag>treeTable</sgmltag></para>
      <mediaobject>
        <imageobject>
          <imagedata align="center" fileref="img/gui_TreeTable_dia.png"/>
        </imageobject>
      </mediaobject>
      <para>Компонент реализован для блоков <structname>Web Client</structname> и <structname>Desktop Client</structname>. </para>
      <para>Для    <code>TreeTable</code> в атрибуте <code>datasource</code> элемента <code>rows</code> должен быть указан <link linkend="datasources">hierarchicalDatasource</link>. Объявление <code>hierarchicalDatasource</code> должно содержать атрибут <code>hierarchyProperty</code> - имя атрибута сущности, являющегося ссылкой на саму себя. </para>
      <para>Пример описания таблицы в XML-дескрипторе экрана:<programlisting language="xml">&lt;dsContext&gt;
&lt;hierarchicalDatasource id=&quot;tasksDs&quot; class=&quot;com.sample.sales.entity.Task&quot; view=&quot;browse&quot;
                        hierarchyProperty=&quot;parentTask&quot;&gt;
    &lt;query&gt;
        select t from sales$Task t
    &lt;/query&gt;
&lt;/hierarchicalDatasource&gt;
&lt;/dsContext&gt;
&lt;layout&gt;
&lt;treeTable id=&quot;tasksTable&quot; width=&quot;100%&quot;&gt;
    &lt;columns&gt;
        &lt;column id=&quot;name&quot;/&gt;
        &lt;column id=&quot;dueDate&quot;/&gt;
        &lt;column id=&quot;assignee&quot;/&gt;
    &lt;/columns&gt;
    &lt;rows datasource=&quot;tasksDs&quot;/&gt;
&lt;/treeTable&gt;</programlisting></para>
      <para>Функциональность <code>TreeTable</code> аналогична простой таблице <link linkend="gui_Table">Table</link>. </para>
      <para>Атрибуты <sgmltag>treeTable</sgmltag>:</para>
      <informaltable frame="none" pgwide="0" align="left">
        <tgroup cols="4" colsep="1" rowsep="1" align="left"><colspec colname="c1"/><colspec colname="c2"/><colspec colname="c3"/><colspec colname="c4"/>c <tbody>
            <row><entry align="left">
                <link linkend="gui_attr_table_allowPopupMenu">allowPopupMenu</link>
              </entry><entry align="left">
                <link linkend="gui_attr_basic_height">height</link>
              </entry><entry>
                <link linkend="gui_attr_table_reorderingAllowed">reorderingAllowed</link>
              </entry><entry>
                <link linkend="gui_attr_basic_width">width</link>
              </entry>editable</row>
            <row>
              <entry>
                <link linkend="gui_attr_table_columnControlVisible">columnControlVisible</link>
              </entry>
              <entry align="left">
                <link linkend="gui_attr_basic_id">id</link>
              </entry>
              <entry align="left">
                <link linkend="gui_attr_table_sortable">sortable</link>
              </entry>
            </row>
            <row>
              <entry>
                <link linkend="gui_attr_basic_editable">editable</link>
              </entry>
              <entry align="left">
                <link linkend="gui_attr_table_multiselect">multiselect</link>
              </entry>
              <entry>
                <link linkend="gui_attr_basic_stylename">stylename</link>
              </entry>
            </row>
            <row>
              <entry align="left">
                <link linkend="gui_attr_basic_enable">enable</link>
              </entry>
              <entry>
                <link linkend="gui_attr_table_presentations">presentations</link>
              </entry>
              <entry>
                <link linkend="gui_attr_basic_visible">visible</link>
              </entry>
            </row>
          </tbody></tgroup>
      </informaltable>
      <para>Элементы <sgmltag>treeTable</sgmltag>:</para>
      <informaltable frame="none" pgwide="0" align="left">
        <tgroup cols="1" colsep="1" rowsep="1" align="left">
          <colspec colname="c1"/>
          <tbody>
            <row>
              <entry>
                <link linkend="gui_element_table_actions">actions</link>
              </entry>
            </row>
            <row>buttonsPanel<entry>
                <link linkend="gui_ButtonsPanel">buttonsPanel</link>
              </entry></row>
            <row>
              <entry>
                <link linkend="gui_element_table_columns">columns</link>
              </entry>
            </row>
            <row>
              <entry>
                <link linkend="gui_element_table_rows">rows</link>
              </entry>
            </row>
          </tbody>
        </tgroup>
      </informaltable>
      <para>Атрибуты  <link linkend="gui_element_table_columns">column</link>:</para>
      <informaltable frame="none" pgwide="0" align="left">
        <tgroup cols="3" colsep="1" rowsep="1" align="left"><colspec colname="c1"/><colspec colname="c2"/><colspec colname="c3"/>c <tbody>
            <row>
              <entry align="left">
                <link linkend="gui_attr_table_column_caption">caption</link>
              </entry>
              <entry align="left">
                <link linkend="gui_attr_dateField_dateFormat">dateFormat</link>
              </entry>
              <entry>
                <link linkend="gui_attr_dateField_resolution">resolution</link>
              </entry>
            </row>
            <row>
              <entry align="left">
                <link linkend="gui_attr_basic_captionProperty">captionProperty</link>
              </entry>
              <entry>
                <link linkend="gui_attr_table_column_editable">editable</link>
              </entry>
              <entry>
                <link linkend="gui_attr_basic_visible">visible</link>
              </entry>
            </row>
            <row>
              <entry align="left">
                <link linkend="gui_attr_basic_clickAction">clickAction</link>
              </entry>
              <entry align="left">
                <link linkend="gui_attr_table_column_id">id</link>
              </entry>
              <entry>
                <link linkend="gui_attr_table_column_width">width</link>
              </entry>
            </row>
            <row>
              <entry align="left">
                <link linkend="gui_attr_table_column_collapsed">collapsed</link>
              </entry>
              <entry align="left">
                <link linkend="gui_attr_basic_optionsDatasource">optionsDatasource</link>
              </entry>
            </row>
          </tbody></tgroup>
      </informaltable>
      <para>Элементы  <link linkend="gui_element_table_columns">column</link>:</para>
      <informaltable frame="none" pgwide="0" align="left">
        <tgroup cols="1" colsep="1" rowsep="1" align="left"><colspec colname="c1"/>c <tbody>
            <row><entry align="left">
                <link linkend="gui_formatter">formatter</link>
              </entry>editable</row>
          </tbody></tgroup>
      </informaltable>
      <para>Атрибуты <link linkend="gui_element_table_rows">rows</link>:</para>
      <informaltable frame="none" pgwide="0" align="left">
        <tgroup cols="1" colsep="1" rowsep="1" align="left"><colspec colname="c1"/>c <tbody>
            <row><entry align="left">
                <link linkend="gui_attr_basic_datasource">datasource</link>
              </entry>editable</row>
          </tbody></tgroup>
      </informaltable>
    </section>
    <section id="gui_TwinColumn">
      <title>TwinColumn</title>
      <para>Компонент <code>TwinColumn</code>  представляет собой сдвоенный список для множественного выбора опций. В левом списке содержатся доступные невыбранные значения, в правом списке содержатся выбранные значения. Пользователь выбирает значения, перенося их из левого в правый список и обратно с помощью двойного клика или соответствующих кнопок. Для каждого значения можно задать уникальный стиль отображения и пиктограмму.</para>
      <mediaobject>
        <imageobject>
          <imagedata align="center" fileref="img/TwinColumn.png"/>
        </imageobject>
      </mediaobject>
      <para>XML-имя компонента: <sgmltag>twinColumn</sgmltag></para>
      <mediaobject>
        <imageobject>
          <imagedata align="center" fileref="img/gui_TwinColumn_dia.png"/>
        </imageobject>
      </mediaobject>
      <para>Компонент реализован только для блока <structname>Web Client</structname>.</para>
      <para>Пример использования компонента <sgmltag>twinColumn</sgmltag> для выбора экземпляров сущности:<programlisting language="xml">&lt;dsContext&gt;
&lt;datasource id=&quot;carDs&quot; class=&quot;com.company.sample.entity.Car&quot; view=&quot;_local&quot;/&gt;
&lt;collectionDatasource id=&quot;coloursDs&quot; class=&quot;com.company.sample.entity.Colour&quot; view=&quot;_local&quot;&gt;
    &lt;query&gt;select c from sample$Colour c&lt;/query&gt;
&lt;/collectionDatasource&gt;
&lt;/dsContext&gt;
&lt;layout&gt;
&lt;twinColumn id=&quot;coloursField&quot; optionsDatasource=&quot;coloursDs&quot; addAllBtnEnabled=&quot;true&quot;/&gt;</programlisting></para>
      <para>В данном случае компонент <code>coloursField</code> отобразит <link linkend="namePattern">имена экземпляров</link> сущности <code>Colour</code>,  находящихся в источнике данных <code>coloursDs</code>, а его метод <code>getValue()</code> вернет коллекцию выбранных экземпляров сущности.</para>
      <para>Атрибут <code>addAllBtnEnabled</code> задает отображение кнопок, позволяющих перемещать между списками все опции сразу.</para>
      <para id="gui_attr_twinColumn_columns_rows">Атрибут <sgmltag>columns</sgmltag> используется для задания количества символов в строке, а атрибут <sgmltag>rows</sgmltag> − для задания количества строк текста в каждом списке. </para>
      <para>Для задания внешнего вида опций можно реализовать интерфейс <code>TwinColumn.StyleProvider</code> и возвращать название стиля и путь к пиктограмме в зависимости от конкретного экземпляра сущности, отображаемого в компоненте.</para>
      <para>Список опций компонента <code>TwinColumn</code> может быть задан произвольно с помощью методов <code>setOptionsList()</code> и <code>setOptionsMap()</code>, аналогично описанному для компонента <link linkend="gui_OptionsGroup">OptionsGroup</link>.</para>
      <para>Атрибуты <sgmltag>twinColumn</sgmltag>:</para>
      <informaltable frame="none" pgwide="0" align="left">
        <tgroup cols="4" colsep="1" rowsep="1" align="left"><colspec colname="c1"/><colspec colname="c2"/><colspec colname="c3"/><colspec colname="c4"/>c <tbody>
            <row><entry align="left">
                <link linkend="gui_attr_basic_caption">caption</link>
              </entry>editable<entry align="left">
                <link linkend="gui_attr_basic_editable">editable</link>
              </entry><entry>
                <link linkend="gui_attr_basic_optionsDatasource">optionsDatasource</link>
              </entry><entry>
                <link linkend="gui_attr_basic_stylename">stylename</link>
              </entry></row>
            <row><entry>
                <link linkend="gui_attr_basic_captionProperty">captionProperty</link>
              </entry><entry align="left">
                <link linkend="gui_attr_basic_enable">enable</link>
              </entry><entry align="left">
                <link linkend="gui_attr_basic_required">required</link>
              </entry><entry>
                <link linkend="gui_attr_basic_width">width</link>
              </entry>required</row>
            <row>
              <entry align="left">
                <link linkend="gui_attr_twinColumn_columns_rows">columns</link>
              </entry>
              <entry align="left">
                <link linkend="gui_attr_basic_height">height</link>
              </entry>
              <entry>
                <link linkend="gui_attr_basic_requiredMessage">requiredMessage</link>
              </entry>
            </row>
            <row>
              <entry align="left">
                <link linkend="gui_attr_basic_datasource">datasource</link>
              </entry>
              <entry align="left">
                <link linkend="gui_attr_basic_id">id</link>
              </entry>
              <entry>
                <link linkend="gui_attr_twinColumn_columns_rows">rows</link>
              </entry>
            </row>
            <row>
              <entry>
                <link linkend="gui_attr_basic_description">description</link>
              </entry>
              <entry>
                <link linkend="gui_attr_basic_property">property</link>
              </entry>
              <entry>
                <link linkend="gui_attr_basic_visible">visible</link>
              </entry>
            </row>
          </tbody></tgroup>
      </informaltable>
      <para>Элементы <sgmltag>twinColumn</sgmltag>:</para>
      <informaltable frame="none" pgwide="0" align="left">
        <tgroup cols="1" colsep="1" rowsep="1" align="left">
          <colspec colname="c1"/>
          <tbody>
            <row>
              <entry align="left">
                <link linkend="gui_validator">validator</link>
              </entry>
            </row>
          </tbody>
        </tgroup>
      </informaltable>
    </section>
  </section>
  <section id="gui_layouts">
    <title>Контейнеры</title>
    <para><link linkend="gui_BoxLayout">BoxLayout</link></para>
    <para><link linkend="gui_ButtonsPanel">ButtonsPanel</link></para>
    <para><link linkend="gui_IFrame">IFrame</link></para>
    <para><link linkend="gui_GridLayout">GridLayout</link></para>
    <para><link linkend="gui_GroupBoxLayout">GroupBoxLayout</link></para>
    <para><link linkend="gui_ScrollBoxLayout">ScrollBoxLayout</link></para>
    <para><link linkend="gui_SplitPanel">SplitPanel</link></para>
    <para><link linkend="gui_TabSheet">TabSheet</link></para>
    <section id="gui_BoxLayout">
      <title>BoxLayout</title>
      <para><code>BoxLayout</code> представляет собой контейнер с последовательным размещением компонентов.</para>
      <para>Существует три  типа <code>BoxLayout</code>, определяемых именем XML-элемента:</para>
      <itemizedlist>
        <listitem>
          <para><sgmltag>hbox</sgmltag> − горизонтальное расположение компонентов.</para>
          <mediaobject>
            <imageobject>
              <imagedata align="center" fileref="img/gui_hbox.png"/>
            </imageobject>
          </mediaobject>
          <programlisting language="xml">&lt;hbox spacing=&quot;true&quot; margin=&quot;true&quot;&gt;
&lt;dateField datasource=&quot;orderDs&quot; property=&quot;date&quot;/&gt;
&lt;lookupField datasource=&quot;orderDs&quot; property=&quot;customer&quot; optionsDatasource=&quot;customersDs&quot;/&gt;
&lt;textField datasource=&quot;orderDs&quot; property=&quot;amount&quot;/&gt;
&lt;/hbox&gt;</programlisting>
        </listitem>
        <listitem>
          <para><sgmltag>vbox</sgmltag> − вертикальное расположение компонентов. <sgmltag>vbox</sgmltag> имеет 100% ширину по умолчанию.</para>
          <mediaobject>
            <imageobject>
              <imagedata align="center" fileref="img/gui_vbox.png"/>
            </imageobject>
          </mediaobject>
          <programlisting language="xml">&lt;vbox spacing=&quot;true&quot; margin=&quot;true&quot;&gt;
&lt;dateField datasource=&quot;orderDs&quot; property=&quot;date&quot;/&gt;
&lt;lookupField datasource=&quot;orderDs&quot; property=&quot;customer&quot; optionsDatasource=&quot;customersDs&quot;/&gt;
&lt;textField datasource=&quot;orderDs&quot; property=&quot;amount&quot;/&gt;
&lt;/vbox&gt;</programlisting>
        </listitem>
        <listitem>
          <para><sgmltag>flowBox</sgmltag> − горизонтальное расположение компонентов с переносом вниз. При недостатке места по горизонтали непомещающиеся компоненты будут перенесены &quot;на следующую строку&quot; (поведение аналогично <application>Swing</application> <code>FlowLayout</code>).</para>
          <mediaobject>
            <imageobject>
              <imagedata align="center" fileref="img/gui_flowbox.png"/>
            </imageobject>
          </mediaobject>
          <programlisting language="xml">&lt;flowBox spacing=&quot;true&quot; margin=&quot;true&quot;&gt;
&lt;dateField datasource=&quot;orderDs&quot; property=&quot;date&quot;/&gt;
&lt;lookupField datasource=&quot;orderDs&quot; property=&quot;customer&quot; optionsDatasource=&quot;customersDs&quot;/&gt;
&lt;textField datasource=&quot;orderDs&quot; property=&quot;amount&quot;/&gt;
&lt;/flowBox&gt;</programlisting>
        </listitem>
      </itemizedlist>
      <para>В элементах <code>hbox</code>, <code>vbox</code>, <code>flowBox</code> могут быть использованы следующие XML-атрибуты:</para>
      <informaltable frame="none" pgwide="0" align="left">
        <tgroup cols="4" colsep="1" rowsep="1" align="left"><colspec colname="c1"/><colspec colname="c2"/><colspec colname="c3"/><colspec colname="c4"/>c <tbody>
            <row><entry align="left">
                <link linkend="gui_attr_basic_align">align</link>
              </entry>editable<entry align="left">
                <link linkend="gui_attr_basic_id">id</link>
              </entry><entry>
                <link linkend="gui_attr_basic_stylename">stylename</link>
              </entry></row>
            <row>
              <entry>
                <link linkend="gui_attr_basic_expand">expand</link>
              </entry>
              <entry align="left">
                <link linkend="gui_attr_basic_margin">margin</link>
              </entry>
              <entry>
                <link linkend="gui_attr_basic_visible">visible</link>
              </entry>
            </row>
            <row>
              <entry align="left">
                <link linkend="gui_attr_basic_height">height</link>
              </entry>
              <entry>
                <link linkend="gui_attr_basic_spacing">spacing</link>
              </entry>
              <entry>
                <link linkend="gui_attr_basic_width">width</link>
              </entry>
            </row>
          </tbody></tgroup>
      </informaltable>
    </section>
    <section id="gui_ButtonsPanel">
      <title>ButtonsPanel</title>
      <para><code>ButtonsPanel</code> - контейнер, унифицирующий использование и размещение компонентов (чаще всего кнопок) для управления данными в таблице.</para>
      <mediaobject>
        <imageobject>
          <imagedata align="center" fileref="img/gui_buttonsPanel.png"/>
        </imageobject>
      </mediaobject>
      <para>XML-имя компонента: <sgmltag>buttonsPanel</sgmltag>.</para>
      <para>Пример описания <code>ButtonsPanel</code>  в XML-дескрипторе экрана:<programlisting language="xml">&lt;table id=&quot;customersTable&quot;
   editable=&quot;false&quot; width=&quot;100%&quot;&gt;
&lt;actions&gt;
    &lt;action id=&quot;create&quot;/&gt;
    &lt;action id=&quot;edit&quot;/&gt;
    &lt;action id=&quot;remove&quot;/&gt;
    &lt;action id=&quot;excel&quot;/&gt;
&lt;/actions&gt;
&lt;buttonsPanel&gt;
    &lt;button action=&quot;customersTable.create&quot;/&gt;
    &lt;button action=&quot;customersTable.edit&quot;/&gt;
    &lt;button action=&quot;customersTable.remove&quot;/&gt;
    &lt;button action=&quot;customersTable.excel&quot;/&gt;
&lt;/buttonsPanel&gt;
&lt;columns&gt;
    &lt;column id=&quot;name&quot;/&gt;
    &lt;column id=&quot;email&quot;/&gt;
&lt;/columns&gt;
&lt;rows datasource=&quot;customersDs&quot;/&gt;
&lt;/table&gt;</programlisting></para>
      <para>Элемент <code>buttonsPanel</code> можно разместить как внутри <code>table</code>, так и в  произвольном месте экрана. </para>
      <para>Если <code>buttonsPanel</code> находится внутри <code>table</code>, то она комбинируется с компонентом <link linkend="gui_attr_table_rowsCount">rowsCount</link> таблицы, тем самым оптимально расходуя место по вертикали. Кроме того, в этом случае при открытии экрана выбора методом <code>IFrame.openLookup()</code> (например, из компонента <link linkend="gui_PickerField">PickerField</link>) панель кнопок скрывается.</para>
      <para id="gui_attr_buttonsPanel_alwaysVisible">Атрибут <sgmltag>alwaysVisible</sgmltag> служит для отключения скрытия панели в экране выбора при его открытии методом <code>IFrame.openLookup()</code>. Если значение атрибута равно <literal>true</literal>, то панель с кнопками не скрывается. По умолчанию значение атрибута равно <literal>false</literal>.</para>
      <para>Атрибуты <sgmltag>buttonsPanel</sgmltag>:</para>
      <informaltable frame="none" pgwide="0" align="left">
        <tgroup cols="4" colsep="1" rowsep="1" align="left"><colspec colname="c1"/><colspec colname="c2"/><colspec colname="c3"/><colspec colname="c4"/>c <tbody>
            <row>
              <entry align="left">
                <link linkend="gui_attr_basic_align">align</link>
              </entry>
              <entry align="left">
                <link linkend="gui_attr_basic_id">id</link>
              </entry>
            </row>
            <row>
              <entry>
                <link linkend="gui_attr_buttonsPanel_alwaysVisible">alwaysVisible</link>
              </entry>
              <entry align="left">
                <link linkend="gui_attr_basic_stylename">styleName</link>
              </entry>
            </row>
            <row>
              <entry align="left">
                <link linkend="gui_attr_basic_expand">expand</link>
              </entry>
              <entry align="left">
                <link linkend="gui_attr_basic_visible">visible</link>
              </entry>
            </row>
            <row>
              <entry align="left">
                <link linkend="gui_attr_basic_height">height</link>
              </entry>
              <entry align="left">
                <link linkend="gui_attr_basic_width">width</link>
              </entry>
            </row>
          </tbody></tgroup>
      </informaltable>
    </section>
    <section id="gui_GridLayout">
      <title>GridLayout</title>
      <para><code>GridLayout</code> - контейнер, располагающий компоненты по сетке.</para>
      <mediaobject>
        <imageobject>
          <imagedata align="center" fileref="img/gui_gridlayout.png"/>
        </imageobject>
      </mediaobject>
      <para>XML-имя компонента: <sgmltag>grid</sgmltag>.</para>
      <para>Пример использования контейнера:<programlisting language="xml">&lt;grid spacing=&quot;true&quot;&gt;
&lt;columns count=&quot;4&quot;/&gt;
&lt;rows&gt;
    &lt;row&gt;
        &lt;label value=&quot;Date&quot;/&gt;
        &lt;dateField datasource=&quot;orderDs&quot; property=&quot;date&quot;/&gt;
        &lt;label value=&quot;Customer&quot;/&gt;
        &lt;lookupField datasource=&quot;orderDs&quot; property=&quot;customer&quot; optionsDatasource=&quot;customersDs&quot;/&gt;
    &lt;/row&gt;
    &lt;row&gt;
        &lt;label value=&quot;Amount&quot;/&gt;
        &lt;textField datasource=&quot;orderDs&quot; property=&quot;amount&quot;/&gt;
    &lt;/row&gt;
&lt;/rows&gt;
&lt;/grid&gt;</programlisting></para>
      <para>Элементы <code>grid</code>:<itemizedlist>
          <listitem id="gui_attr_grid_columns">
            <para><code>columns</code> - обязательный элемент, описывает колонки сетки. Должен либо иметь атрибут <code>count</code>, либо вложенные элементы <code>column</code> для каждой колонки.</para>
            <para>В простейшем случае достаточно задать число колонок в атрибуте <code>count</code>. Тогда, если ширина всего контейнера явно задана в пикселах или процентах, незанятое место будет распределяться между колонками равными долями.</para>
            <para>Для  распределения незанятого места неравными долями необходимо определить для каждой колонки элемент <code>column</code> и задать для него атрибут <code>flex</code>.</para>
            <para>Пример сетки, в которой вторая и четвертая колонки занимают все лишнее место по горизонтали, причем четвертая колонка забирает себе в три раза больше лишнего места:<programlisting language="xml">&lt;grid spacing=&quot;true&quot; width=&quot;100%&quot;&gt;
&lt;columns&gt;
    &lt;column/&gt;
    &lt;column flex=&quot;1&quot;/&gt;
    &lt;column/&gt;
    &lt;column flex=&quot;3&quot;/&gt;
&lt;/columns&gt;
&lt;rows&gt;
    &lt;row&gt;
        &lt;label value=&quot;Date&quot;/&gt;
        &lt;dateField datasource=&quot;orderDs&quot; property=&quot;date&quot; width=&quot;100%&quot;/&gt;
        &lt;label value=&quot;Customer&quot;/&gt;
        &lt;lookupField datasource=&quot;orderDs&quot; property=&quot;customer&quot; optionsDatasource=&quot;customersDs&quot; width=&quot;100%&quot;/&gt;
    &lt;/row&gt;
    &lt;row&gt;
        &lt;label value=&quot;Amount&quot;/&gt;
        &lt;textField datasource=&quot;orderDs&quot; property=&quot;amount&quot; width=&quot;100%&quot;/&gt;
    &lt;/row&gt;
&lt;/rows&gt;
&lt;/grid&gt;</programlisting></para>
            <para>Если атрибут <code>flex</code> не указан, или указано значение 0, то ширина данной колонки будет установлена по содержимому, если хотя-бы одна другая колонка имеет ненулевой <code>flex</code>. В приведенном примере первая и третья колонки получат ширину по максимальной длине текста надписей.</para>
            <tip>
              <para>Для того, чтобы лишнее место вообще образовалось, необходимо установить всему контейнеру ширину в пикселах или процентах. В противном случае ширина колонок будет рассчитана по ширине содержимого, и атрибут <code>flex</code> не будет иметь никакого эффекта.</para>
            </tip>
          </listitem>
          <listitem id="gui_attr_grid_rows">
            <para><sgmltag>rows</sgmltag> − обязательный элемент, содержит последовательность строк. Каждая строка определяется в своем элементе <code>row</code>. </para>
            <para>Элемент <code>row</code> может содержать атрибут <code>flex</code>, аналогичный описанному для <code>column</code>, но влияющий на распределение лишнего места по вертикали при заданной общей высоте сетки.</para>
            <para>Элемент <code>row</code> должен содержать элементы компонентов, отображаемых в ячейках данной строки сетки. Число компонентов в одной строке не должно превышать заданного количества колонок, но может быть меньше.</para>
          </listitem>
        </itemizedlist></para>
      <para id="gui_GridLayout_span">Любой компонент, находящийся в контейнере <code>grid</code>, может иметь атрибуты <code>colspan</code> и <code>rowspan</code>. Эти атрибуты задают соответственно сколько  колонок и строк будет занимать данный компонент. Например, так можно растянуть поле <code>Field3</code> на три колонки:<programlisting language="xml">&lt;grid spacing=&quot;true&quot;&gt;
&lt;columns count=&quot;4&quot;/&gt;
&lt;rows&gt;
    &lt;row&gt;
        &lt;label value=&quot;Field1&quot;/&gt;
        &lt;textField/&gt;
        &lt;label value=&quot;Field2&quot;/&gt;
        &lt;textField/&gt;
    &lt;/row&gt;
    &lt;row&gt;
        &lt;label value=&quot;Field3&quot;/&gt;
        &lt;textField colspan=&quot;3&quot; width=&quot;100%&quot;/&gt;
    &lt;/row&gt;
&lt;/rows&gt;
&lt;/grid&gt;</programlisting></para>
      <para>В результате компоненты будут располагаться следующим образом:<mediaobject>
          <imageobject>
            <imagedata align="center" fileref="img/gui_gridlayout_colspan.png"/>
          </imageobject>
        </mediaobject></para>
      <para>Атрибуты <sgmltag>grid</sgmltag>:</para>
      <informaltable frame="none" pgwide="0" align="left">
        <tgroup cols="4" colsep="1" rowsep="1" align="left"><colspec colname="c1"/><colspec colname="c2"/><colspec colname="c3"/><colspec colname="c4"/>c <tbody>
            <row><entry align="left">
                <link linkend="gui_attr_basic_height">height</link>
              </entry>editable<entry align="left">
                <link linkend="gui_attr_basic_spacing">spacing</link>
              </entry><entry>
                <link linkend="gui_attr_basic_width">width</link>
              </entry></row>
            <row>
              <entry>
                <link linkend="gui_attr_basic_id">id</link>
              </entry>
              <entry align="left">
                <link linkend="gui_attr_basic_stylename">styleName</link>
              </entry>
            </row>
            <row>
              <entry align="left">
                <link linkend="gui_attr_basic_margin">margin</link>
              </entry>
              <entry>
                <link linkend="gui_attr_basic_visible">visible</link>
              </entry>
            </row>
          </tbody></tgroup>
      </informaltable>
      <para>Элементы <sgmltag>grid</sgmltag>:</para>
      <informaltable frame="none" pgwide="0" align="left">
        <tgroup cols="4" colsep="1" rowsep="1" align="left"><colspec colname="c1"/><colspec colname="c2"/><colspec colname="c3"/><colspec colname="c4"/>c <tbody>
            <row><entry align="left">
                <link linkend="gui_attr_grid_columns">columns</link>
              </entry>editable</row>
            <row>
              <entry>
                <link linkend="gui_attr_grid_rows">rows</link>
              </entry>
            </row>
          </tbody></tgroup>
      </informaltable>
      <para>Атрибуты <sgmltag>columns</sgmltag>:</para>
      <informaltable frame="none" pgwide="0" align="left">
        <tgroup cols="4" colsep="1" rowsep="1" align="left"><colspec colname="c1"/><colspec colname="c2"/><colspec colname="c3"/><colspec colname="c4"/>c <tbody>
            <row><entry align="left">
                <link linkend="gui_attr_grid_columns">count</link>
              </entry>editable</row>
          </tbody></tgroup>
      </informaltable>
      <para>Атрибуты <sgmltag>column</sgmltag>:</para>
      <informaltable frame="none" pgwide="0" align="left">
        <tgroup cols="4" colsep="1" rowsep="1" align="left"><colspec colname="c1"/><colspec colname="c2"/><colspec colname="c3"/><colspec colname="c4"/>c <tbody>
            <row>
              <entry>
                <link linkend="gui_attr_grid_rows">flex</link>
              </entry>
            </row>
          </tbody></tgroup>
      </informaltable>
      <para>Атрибуты <sgmltag>row</sgmltag>:</para>
      <informaltable frame="none" pgwide="0" align="left">
        <tgroup cols="4" colsep="1" rowsep="1" align="left"><colspec colname="c1"/><colspec colname="c2"/><colspec colname="c3"/><colspec colname="c4"/>c <tbody>
            <row>
              <entry>
                <link linkend="gui_attr_grid_rows">flex</link>
              </entry>
            </row>
            <row>
              <entry>
                <link linkend="gui_attr_basic_visible">visible</link>
              </entry>
            </row>
          </tbody></tgroup>
      </informaltable>
    </section>
    <section id="gui_GroupBoxLayout">
      <title>GroupBoxLayout</title>
      <para><code>GroupBoxLayout</code> - контейнер, позволяющий выделить рамкой содержащиеся в нем компоненты, и задать им общий заголовок. Кроме того, он умеет сворачивать свое содержимое.</para>
      <mediaobject>
        <imageobject>
          <imagedata align="center" fileref="img/gui_groupBox.png"/>
        </imageobject>
      </mediaobject>
      <para>XML-имя компонента: <sgmltag>groupBox</sgmltag>.</para>
      <para>Пример описание контейнера  в XML-дескрипторе экрана:<programlisting language="xml">&lt;groupBox caption=&quot;Order&quot;&gt;
&lt;dateField datasource=&quot;orderDs&quot; property=&quot;date&quot; caption=&quot;Date&quot;/&gt;
&lt;lookupField datasource=&quot;orderDs&quot; property=&quot;customer&quot;
             optionsDatasource=&quot;customersDs&quot; caption=&quot;Customer&quot;/&gt;
&lt;textField datasource=&quot;orderDs&quot; property=&quot;amount&quot; caption=&quot;Amount&quot;/&gt;
&lt;/groupBox&gt;</programlisting></para>
      <para>Атрибуты <code>groupBox</code>:<itemizedlist>
          <listitem>
            <para><code>caption</code> - заголовок группы.</para>
          </listitem>
          <listitem id="gui_attr_groupBox_orientation">
            <para><code>orientation</code> -  задает направление расположения вложенных компонентов − <literal>horizontal</literal> или <literal>vertical</literal>. По умолчанию <literal>vertical</literal>.</para>
          </listitem>
          <listitem id="gui_attr_groupBox_collapsable">
            <para><sgmltag>collapsable</sgmltag> − значение <literal>true</literal> позволяет пользователю скрывать содержимое компонента с помощью значков <inlinemediaobject>
                <imageobject>
                  <imagedata fileref="img/gui_groupBox_minus.png"/>
                </imageobject>
              </inlinemediaobject>/<inlinemediaobject>
                <imageobject>
                  <imagedata fileref="img/gui_groupBox_plus.png"/>
                </imageobject>
              </inlinemediaobject>.</para>
          </listitem>
          <listitem id="gui_attr_groupBox_collapsed">
            <para><sgmltag>collapsed</sgmltag> − если указано значение <literal>true</literal>, то содержимое компонента будет свернуто сразу после открытия экрана. Используется совместно с <code>collapsable=&quot;true&quot;</code>. </para>
            <para>Пример свернутого <code>GroupBox</code>:</para>
            <mediaobject>
              <imageobject>
                <imagedata align="center" fileref="img/gui_groupBox_collapsed.png"/>
              </imageobject>
            </mediaobject>
          </listitem>
        </itemizedlist></para>
      <para>Контейнер <code>groupBox</code> по умолчанию имеет ширину 100% аналогично <link linkend="gui_BoxLayout">vbox</link>.</para>
      <para>Все атрибуты <sgmltag>groupBox</sgmltag>:</para>
      <informaltable frame="none" pgwide="0" align="left">
        <tgroup cols="4" colsep="1" rowsep="1" align="left"><colspec colname="c1"/><colspec colname="c2"/><colspec colname="c3"/><colspec colname="c4"/>c <tbody>
            <row><entry align="left">
                <link linkend="gui_attr_basic_caption">caption</link>
              </entry>editable<entry align="left">
                <link linkend="gui_attr_basic_expand">expand</link>
              </entry><entry>
                <link linkend="gui_attr_groupBox_orientation">orientation</link>
              </entry><entry>
                <link linkend="gui_attr_basic_width">width</link>
              </entry></row>
            <row>
              <entry>
                <link linkend="gui_attr_groupBox_collapsable">collapsable</link>
              </entry>
              <entry align="left">
                <link linkend="gui_attr_basic_height">height</link>
              </entry>
              <entry>
                <link linkend="gui_attr_basic_spacing">spacing</link>
              </entry>
            </row>
            <row>
              <entry align="left">
                <link linkend="gui_attr_groupBox_collapsed">collapsed</link>
              </entry>
              <entry>
                <link linkend="gui_attr_basic_id">id</link>
              </entry>
              <entry>
                <link linkend="gui_attr_basic_stylename">stylename</link>
              </entry>
            </row>
          </tbody></tgroup>
      </informaltable>
    </section>
    <section id="gui_IFrame">
      <title>IFrame</title>
      <para>Элемент <sgmltag>iframe</sgmltag> предназначен для включения в экран <link linkend="frame">фрейма</link>.</para>
      <para>Атрибуты:<itemizedlist>
          <listitem>
            <para id="gui_attr_frame_src"><sgmltag>src</sgmltag> − путь к XML-дескриптору фрейма.</para>
          </listitem>
          <listitem>
            <para><sgmltag>screen</sgmltag> - идентификатор фрейма в <link linkend="screens.xml">screens.xml</link> (если фрейм зарегистрирован).</para>
          </listitem>
        </itemizedlist> Должен быть указан один из этих атрибутов. Если указано оба, фрейм будет загружен из явно указанного в <sgmltag>src</sgmltag> файла. </para>
      <para>Другие атрибуты <sgmltag>iframe</sgmltag>:</para>
      <informaltable frame="none" pgwide="0" align="left">
        <tgroup cols="3" colsep="1" rowsep="1" align="left"><colspec colname="c1"/><colspec colname="c2"/><colspec colname="c4"/>c <tbody>
            <row><entry align="left">
                <link linkend="gui_attr_basic_align">align</link>
              </entry>editable<entry align="left">
                <link linkend="gui_attr_basic_stylename">stylename</link>
              </entry></row>
            <row>
              <entry>
                <link linkend="gui_attr_basic_height">height</link>
              </entry>
              <entry align="left">
                <link linkend="gui_attr_basic_visible">visible</link>
              </entry>
            </row>
            <row>
              <entry align="left">
                <link linkend="gui_attr_basic_id">id</link>
              </entry>
              <entry>
                <link linkend="gui_attr_basic_width">width</link>
              </entry>
            </row>
          </tbody></tgroup>
      </informaltable>
    </section>
    <section id="gui_ScrollBoxLayout">
      <title>ScrollBoxLayout</title>
      <para><code>ScrollBoxLayout</code> − контейнер, который позволяет прокручивать свое содержимое.</para>
      <mediaobject>
        <imageobject>
          <imagedata align="center" fileref="img/gui_scrollBox.png"/>
        </imageobject>
      </mediaobject>
      <para>XML-имя компонента: <sgmltag>scrollBox</sgmltag></para>
      <para>Пример описание контейнера с прокруткой в XML-дескрипторе экрана:<programlisting language="xml">&lt;groupBox caption=&quot;Order&quot; width=&quot;300&quot; height=&quot;170&quot;&gt;
&lt;scrollBox width=&quot;100%&quot; height=&quot;100%&quot; spacing=&quot;true&quot; margin=&quot;true&quot;&gt;
    &lt;dateField datasource=&quot;orderDs&quot; property=&quot;date&quot; caption=&quot;Date&quot;/&gt;
    &lt;lookupField datasource=&quot;orderDs&quot; property=&quot;customer&quot; optionsDatasource=&quot;customersDs&quot; caption=&quot;Customer&quot;/&gt;
    &lt;textField datasource=&quot;orderDs&quot; property=&quot;amount&quot; caption=&quot;Amount&quot;/&gt;
 &lt;/scrollBox&gt;
&lt;/groupBox&gt;</programlisting></para>
      <itemizedlist>
        <listitem>
          <para id="gui_attr_scrollBox_orientation">С помощью атрибута <sgmltag>orientation</sgmltag> можно задавать направление расположения вложенных компонентов − <literal>horizontal</literal> или <literal>vertical</literal>. По умолчанию  <literal>vertical</literal>.</para>
        </listitem>
        <listitem>
          <para id="gui_attr_scrollBox_scrollBars">Атрибут <sgmltag>scrollBars</sgmltag> позволяет настраивать полосы прокрутки. Может принимать значения <sgmltag>horizontal</sgmltag>, <sgmltag>vertical</sgmltag> - для прокрутки по горизонтали и вертикали соответственно, <sgmltag>both</sgmltag> - для прокрутки во всех направлениях. Установка значения <sgmltag>none</sgmltag> запрещает прокрутку в любом направлении</para>
        </listitem>
      </itemizedlist>
      <warning>
        <para>Вложенные в <sgmltag>scrollBox</sgmltag> компоненты должны иметь фиксированные размеры или размеры по умолчанию. Нельзя устанавливать <code>height=&quot;100%&quot;</code> или <code>width=&quot;100%&quot;</code>.</para>
        <para>В то же время <sgmltag>scrollBox</sgmltag> не может вычислять свои собственные  размеры по содержимому. Ему нужно либо указать абсолютные размеры, либо растянуть в родительском контейнере, установив <code>height=&quot;100%&quot;</code> и <code>width=&quot;100%&quot;</code>.</para>
      </warning>
      <para>Атрибуты <sgmltag>scrollBox</sgmltag>:</para>
      <informaltable frame="none" pgwide="0" align="left">
        <tgroup cols="3" colsep="1" rowsep="1" align="left"><colspec colname="c1"/><colspec colname="c2"/><colspec colname="c3"/>c <tbody>
            <row><entry align="left">
                <link linkend="gui_attr_basic_align">align</link>
              </entry><entry>
                <link linkend="gui_attr_basic_margin">margin</link>
              </entry><entry>
                <link linkend="gui_attr_basic_spacing">spacing</link>
              </entry>editable</row>
            <row>
              <entry>
                <link linkend="gui_attr_basic_height">height</link>
              </entry>
              <entry>
                <link linkend="gui_attr_scrollBox_orientation">orientation</link>
              </entry>
              <entry>
                <link linkend="gui_attr_basic_stylename">stylename</link>
              </entry>
            </row>
            <row>
              <entry>
                <link linkend="gui_attr_basic_id">id</link>
              </entry>
              <entry>
                <link linkend="gui_attr_scrollBox_scrollBars">scrollBars</link>
              </entry>
              <entry>
                <link linkend="gui_attr_basic_width">width</link>
              </entry>
            </row>
          </tbody></tgroup>
      </informaltable>
    </section>
    <section id="gui_SplitPanel">
      <title>SplitPanel</title>
      <para><code>SplitPanel</code> − контейнер, разбитый на две области, размер которых по горизонтали либо вертикали можно менять путем перемещения разделителя. </para>
      <mediaobject>
        <imageobject>
          <imagedata align="center" fileref="img/gui_splitPanel.png"/>
        </imageobject>
      </mediaobject>
      <para>XML-имя компонента: <sgmltag>split</sgmltag>.</para>
      <para>Пример описания панели с разделителем  в XML-дескрипторе экрана:<programlisting language="xml">&lt;split orientation=&quot;horizontal&quot; pos=&quot;30&quot; width=&quot;100%&quot; height=&quot;100%&quot;&gt;
&lt;vbox margin=&quot;true&quot; spacing=&quot;true&quot;&gt;
   &lt;dateField datasource=&quot;orderDs&quot; property=&quot;date&quot; caption=&quot;Date&quot;/&gt;
   &lt;lookupField datasource=&quot;orderDs&quot; property=&quot;customer&quot; optionsDatasource=&quot;customersDs&quot; caption=&quot;Customer&quot;/&gt;
&lt;/vbox&gt;
&lt;vbox margin=&quot;true&quot; spacing=&quot;true&quot;&gt;
   &lt;textField datasource=&quot;orderDs&quot; property=&quot;amount&quot; caption=&quot;Amount&quot;/&gt;
&lt;/vbox&gt;
&lt;/split&gt;</programlisting></para>
      <para>Внутри контейнера <code>split</code> обязательно должны находиться два вложенных контейнера или компонента, которые  и будут расположены по обе стороны разделителя.</para>
      <para>Атрибуты <code>split</code>:<itemizedlist>
          <listitem id="gui_attr_split_orientation">
            <para><code>orientation</code> - задает ориентацию расположения компонентов. <code>horizontal</code> - вложенные компоненты располагаются горизонтально, <code>vertical</code> - вертикально.</para>
          </listitem>
          <listitem id="gui_attr_split_pos">
            <para><code>pos</code> - целое число, определяющее процентное соотношение размера первой области по отношению ко второй. Например, <code>pos=&quot;30&quot;</code> означает соотношение областей 30/70. По умолчанию соотношение областей составляет 50/50.</para>
          </listitem>
        </itemizedlist></para>
      <para>Все атрибуты <sgmltag>split</sgmltag>:</para>
      <informaltable frame="none" pgwide="0" align="left">
        <tgroup cols="4" colsep="1" rowsep="1" align="left"><colspec colname="c1"/><colspec colname="c2"/><colspec colname="c3"/><colspec colname="c4"/>c <tbody>
            <row><entry align="left">
                <link linkend="gui_attr_basic_id">id</link>
              </entry>editable<entry align="left">
                <link linkend="gui_attr_split_pos">pos</link>
              </entry></row>
            <row>
              <entry>
                <link linkend="gui_attr_basic_height">height</link>
              </entry>
              <entry align="left">
                <link linkend="gui_attr_basic_width">width</link>
              </entry>
            </row>
            <row>
              <entry align="left">
                <link linkend="gui_attr_split_orientation">orientation</link>
              </entry>
            </row>
          </tbody></tgroup>
      </informaltable>
    </section>
    <section id="gui_TabSheet">
      <title>TabSheet</title>
      <para>Контейнер <code>TabSheet</code> - это панель с вкладками (<sgmltag>tabs</sgmltag>). В один момент времени отображается содержимое только одной вкладки.</para>
      <mediaobject>
        <imageobject>
          <imagedata align="center" fileref="img/gui_tabsheet.png"/>
        </imageobject>
      </mediaobject>
      <para>XML-имя компонента: <sgmltag>tabSheet</sgmltag>.</para>
      <para>Пример описания панели с вкладками  в XML-дескрипторе экрана:<programlisting language="xml">&lt;tabSheet&gt;
&lt;tab id=&quot;mainTab&quot; caption=&quot;Tab1&quot; margin=&quot;true&quot; spacing=&quot;true&quot;&gt;
    &lt;dateField datasource=&quot;orderDs&quot; property=&quot;date&quot; caption=&quot;Date&quot;/&gt;
    &lt;lookupField datasource=&quot;orderDs&quot; property=&quot;customer&quot; optionsDatasource=&quot;customersDs&quot; caption=&quot;Customer&quot;/&gt;
&lt;/tab&gt;
&lt;tab id=&quot;additionalTab&quot; caption=&quot;Tab2&quot; margin=&quot;true&quot; spacing=&quot;true&quot;&gt;
    &lt;textField datasource=&quot;orderDs&quot; property=&quot;amount&quot; caption=&quot;Amount&quot;/&gt;
&lt;/tab&gt;
&lt;/tabSheet&gt;</programlisting></para>
      <para>Компонент <sgmltag>tabSheet</sgmltag> должен иметь вложенные элементы   <sgmltag>tab</sgmltag>, описывающие вкладки. Каждая вкладка является контейнером с вертикальным расположением компонентов, аналогичным <link linkend="gui_BoxLayout">vbox</link>.</para>
      <para>Атрибуты элемента <code>tab</code>:<itemizedlist>
          <listitem id="gui_attr_tabsheet_id">
            <para><code>id</code> - идентификатор вкладки. Следует отметить, что вкладка не является компонентом, и данный идентификатор используется только в рамках <code>TabSheet</code> для работы с ней из кода контроллера.</para>
          </listitem>
          <listitem>
            <para><link linkend="gui_attr_basic_caption">caption</link> - заголовок вкладки. </para>
          </listitem>
          <listitem id="gui_attr_tabsheet_lazy">
            <para><sgmltag>lazy</sgmltag> - задает отложенную загрузку содержимого вкладки. </para>
            <para>При открытии экрана lazy-вкладки не загружают свое содержимое, что приводит к созданию меньшего количества компонентов в памяти. Компоненты вкладки загружаются только в тот момент, когда пользователь выбирает данную вкладку. Кроме того, если на lazy-вкладке расположены визуальные компоненты, связанные с <link linkend="datasources">источником данных</link>, содержащим JPQL запрос, то этот запрос также не выполняется. В результате экран открывается быстрее, а данные загружаются только в тот момент, когда пользователь действительно хочет их увидеть, выбирая данную вкладку. </para>
            <para>Следует иметь в виду, что компоненты, расположенные на lazy-вкладке, не существуют в момент открытия экрана. Поэтому их нельзя <link linkend="screen_controller_injection">инжектировать</link> в контроллер, и нельзя получить вызовом <code>getComponent()</code> в методе <code>init()</code> контроллера. Обратиться к компонентам <code>lazy</code>-вкладки можно только после того, как пользователь на нее переключился. Этот момент можно отловить с помощью слушателя <code>TabSheet.TabChangeListener</code>, например:  </para>
            <programlisting language="java">@Inject
private TabSheet tabsheet;

private boolean detailsInitialized, historyInitialized;

@Override
public void init(Map&lt;String, Object&gt; params) {
tabsheet.addListener(
        new TabSheet.TabChangeListener() {
            @Override
            public void tabChanged(TabSheet.Tab newTab) {
                if (&quot;detailsTab&quot;.equals(newTab.getName()))
                    initDetails();
                else if (&quot;historyTab&quot;.equals(newTab.getName()))
                    initHistory();
            }
        }
);
}

private void initDetails() {
if (detailsInitialized)
    return;

// use getComponentNN(&quot;comp_id&quot;) here to get tab&apos;s components

detailsInitialized = true;
}

private void initHistory() {
if (historyInitialized)
    return;

// use getComponentNN(&quot;comp_id&quot;) here to get tab&apos;s components

historyInitialized = true;
}</programlisting>
            <para>По умолчанию вкладки не являются <code>lazy</code>, а значит, загружают свое содержимое в момент открытия экрана.</para>
          </listitem>
          <listitem id="gui_attr_tabsheet_detachable">
            <para><code>detachable</code> - значение <code>true</code> в десктоп-реализации экрана дает возможность отсоединять вкладку в отдельное окно. Это позволяет, например, размещать части UI приложения на разных мониторах. Отделяемая вкладка имеет специальную кнопку в заголовке:</para>
            <mediaobject>
              <imageobject>
                <imagedata align="center" fileref="img/gui_tabsheetDetachable.png"/>
              </imageobject>
            </mediaobject>
          </listitem>
        </itemizedlist></para>
      <para>Атрибуты <sgmltag>tabSheet</sgmltag>:</para>
      <informaltable frame="none" pgwide="0" align="left">
        <tgroup cols="4" colsep="1" rowsep="1" align="left"><colspec colname="c1"/><colspec colname="c2"/><colspec colname="c3"/><colspec colname="c4"/>c <tbody>
            <row><entry align="left">
                <link linkend="gui_attr_basic_height">height</link>
              </entry>editable<entry align="left">
                <link linkend="gui_attr_basic_visible">visible</link>
              </entry></row>
            <row>
              <entry>
                <link linkend="gui_attr_basic_id">id</link>
              </entry>
              <entry align="left">
                <link linkend="gui_attr_basic_width">width</link>
              </entry>
            </row>
            <row>
              <entry align="left">
                <link linkend="gui_attr_basic_stylename">stylename</link>
              </entry>
            </row>
          </tbody></tgroup>
      </informaltable>
      <para>Все атрибуты элемента  <sgmltag>tab</sgmltag>:</para>
      <informaltable frame="none" pgwide="0" align="left">
        <tgroup cols="4" colsep="1" rowsep="1" align="left"><colspec colname="c1"/><colspec colname="c2"/><colspec colname="c3"/><colspec colname="c4"/>c <tbody>
            <row><entry align="left">
                <link linkend="gui_attr_basic_caption">caption</link>
              </entry>editable<entry align="left">
                <link linkend="gui_attr_basic_expand">expand</link>
              </entry><entry>
                <link linkend="gui_attr_basic_margin">margin</link>
              </entry></row>
            <row>
              <entry>
                <link linkend="gui_attr_tabsheet_detachable">detachable</link>
              </entry>
              <entry align="left">
                <link linkend="gui_attr_tabsheet_id">id</link>
              </entry>
              <entry>
                <link linkend="gui_attr_basic_spacing">spacing</link>
              </entry>
            </row>
            <row>
              <entry align="left">
                <link linkend="gui_attr_basic_enable">enable</link>
              </entry>
              <entry>
                <link linkend="gui_attr_tabsheet_lazy">lazy</link>
              </entry>
            </row>
          </tbody></tgroup>
      </informaltable>
    </section>
  </section>
  <section id="gui_misc">
    <title>Разное</title>
    <para>В данном разделе рассматриваются различные элементы универсального пользовательского интерфейса, имеющие отношение к визуальным компонентам.</para>
    <section id="gui_formatter">
      <title>Formatter</title>
      <para>Formatter предназначен для преобразования некоторого значения в строку.</para>
      <warning>
        <para>Formatter предназначен для использования с read-only компонентами, такими как <link linkend="gui_Label">Label</link>, колонка <link linkend="gui_Table">Table</link> и тому подобными. Для форматирования значения в редактируемых компонентах, например <link linkend="gui_TextField">TextField</link>, используйте механизм <code>
            <link linkend="datatype">Datatype</link>
          </code>.</para>
      </warning>
      <para>В XML-дескрипторе экрана formatter для компонента может быть задан во вложенном  элементе <sgmltag>formatter</sgmltag>. Элемент имеет единственный атрибут:</para>
      <itemizedlist>
        <listitem>
          <para><sgmltag>class</sgmltag> − имя класса, реализующего интерфейс <code>com.haulmont.cuba.gui.components.Formatter</code></para>
        </listitem>
      </itemizedlist>
      <para>Если конструктор класса formatter принимает параметр типа <code>org.dom4j.Element</code>, то ему будет передан элемент XML, описывающий данный <code>formatter</code>. Это можно использовать для параметризации экземпляра formatter&apos;а, например, строкой форматирования. В частности, имеющиеся в платформе классы <code>DateFormatter</code> и <code>NumberFormatter</code> могут брать строку форматирования из атрибута <sgmltag>format</sgmltag>. Пример использования:<programlisting language="xml">&lt;column id=&quot;date&quot;&gt;
&lt;formatter class=&quot;com.haulmont.cuba.gui.components.formatters.DateFormatter&quot; format=&quot;yyyy-MM-dd HH:mm:ss&quot;/&gt;
&lt;/column&gt;</programlisting></para>
      <para>Кроме того, класс <code>DateFormatter</code> распознает также атрибут <sgmltag>type</sgmltag>, который может принимать значения <literal>DATE</literal> или <literal>DATETIME</literal>. В этом случае форматирование производится с помощью механизма <code>
          <link linkend="datatype">Datatype</link>
        </code> по строке формата <code>dateFormat</code> или <code>dateTimeFormat</code> соответственно. Например:<programlisting language="xml">&lt;column id=&quot;endDate&quot;&gt;
&lt;formatter class=&quot;com.haulmont.cuba.gui.components.formatters.DateFormatter&quot; type=&quot;DATE&quot;/&gt;
&lt;/column&gt;</programlisting></para>
      <tip>
        <para>Если formatter реализован внутренним классом, то он должен быть объявлен с модификатором <code>static</code>, а его имя для загрузки отделяется символом &quot;$&quot;, например:</para>
        <para><code>&lt;formatter class=&quot;com.sample.sales.gui.OrderBrowse$CurrencyFormatter&quot;/&gt;</code></para>
      </tip>
      <para>Formatter можно назначить компоненту не только в XML-дескрипторе экрана, но и программно, передавая экземпляр formatter&apos;а в метод <code>setFormatter()</code> компонента.</para>
      <para>Пример объявления собственного formatter&apos;а и использования его для форматирования значения колонки таблицы:<programlisting language="java">public class CurrencyFormatter implements Formatter&lt;BigDecimal&gt; {

protected GeneralConfiguration generalConfiguration;
protected Currency currentCurrency;

public CurrencyFormatter(GeneralConfiguration generalConfiguration) {
    this.generalConfiguration = generalConfiguration;
    currentCurrency = generalConfiguration.getCurrency();
}

@Override
public String format(BigDecimal value) {
    return currentCurrency.format(value);
}
}</programlisting><programlisting language="java">protected void initTableColumns() {
Formatter&lt;BigDecimal&gt; currencyFormatter = new CurrencyFormatter(generalConfiguration);
table.getColumn(&quot;totalPrice&quot;).setFormatter(currencyFormatter);
}</programlisting></para>
    </section>
    <section id="gui_Table_presentations">
      <title>Presentation </title>
      <para>Механизм представлений позволяет пользователям системы управлять настройками отображения компонентов.</para>
      <para><emphasis role="bold">Возможности</emphasis>:</para>
      <itemizedlist>
        <listitem>
          <para>Сохранение представлений под уникальными именами</para>
        </listitem>
        <listitem>
          <para>Редактирование и удаление представлений</para>
        </listitem>
        <listitem>
          <para>Быстрое переключение между представлениями</para>
        </listitem>
        <listitem>
          <para>Задание представления по умолчанию, которое будет применяться при открытии экрана с компонентом</para>
        </listitem>
        <listitem>
          <para>Автосохранение настроек отображения в активном представлении</para>
        </listitem>
        <listitem>
          <para>Глобальные представления, которые доступны всем пользователям системы</para>
        </listitem>
      </itemizedlist>
      <para><emphasis role="bold">Классы и интерфейсы</emphasis></para>
      <para>Для применения представлений класс компонента должен реализовывать интерфейс <code>com.haulmont.cuba.gui.components.Component.HasPresentations</code>. В платформе такими компонентами являются:</para>
      <itemizedlist>
        <listitem>
          <para><link linkend="gui_Table">Table</link></para>
        </listitem>
        <listitem>
          <para><link linkend="gui_GroupTable">GroupTable</link></para>
        </listitem>
        <listitem>
          <para><link linkend="gui_TreeTable">TreeTable</link></para>
        </listitem>
      </itemizedlist>
      <para><code>Presentation</code> − POJO объект представления.</para>
      <para><code>Presentations</code> содержит список представлений компонента и набор методов по работе с ними. Основные методы:</para>
      <itemizedlist>
        <listitem>
          <para><code>getCurrent()</code> − возвращает текущее активное представление или <code>null</code>, если представление не выбрано</para>
        </listitem>
        <listitem>
          <para><code>setCurrent(Presentation p)</code> − устанавливает активное представление</para>
        </listitem>
        <listitem>
          <para><code>getSettings(Presentation p)</code> − возвращает XML-элемент настроек отображения для указанного представления</para>
        </listitem>
        <listitem>
          <para><code>setSettings(Presentation p, Element e)</code> − модифицирует настройки отображения для указанного представления</para>
        </listitem>
        <listitem>
          <para><code>getPresentation(Object id)</code> − возвращает представление по его идентификатору</para>
        </listitem>
        <listitem>
          <para><code>getPresentations()</code> − возвращает список идентификаторов представлений для данного компонента</para>
        </listitem>
        <listitem>
          <para><code>commit()</code> − сохраняет представления в базу данных</para>
        </listitem>
      </itemizedlist>
      <para><code>PresentationsImpl</code> − реализация интерфейса <code>Presentations</code>.</para>
      <para><code>PresentationsChangeListener</code> − интерфейс слушателя изменений представлений.</para>
      <para>Для создания, изменения, удаления глобальных представлений пользователь должен иметь права <property>cuba.gui.presentations.global</property>. Подробнее см. руководство <productname>Платформа CUBA. Подсистема безопасности</productname>.</para>
    </section>
    <section id="gui_Timer">
      <title>Timer</title>
      <para>Таймер − это невизуальный компонент, позволяющий выполнять некоторый код  контроллера экрана через определенные промежутки времени. Срабатывание таймера происходит в потоке обработки событий пользовательского интерфейса, что позволяет обновлять экран без каких-либо ограничений.  Таймер прекращает работу при закрытии  экрана, для которого он был создан.</para>
      <para>Компонент реализован для блоков <structname>Web Client</structname> и <structname>Desktop Client</structname>.  Для веб клиента реализация таймеров основана на опросе сервера из веб-браузера, для десктоп клиента - на <code>javax.swing.Timer</code>.</para>
      <para>Основной способ создания таймеров - декларативно в XML-дескрипторе экрана в элементе <sgmltag>timers</sgmltag>, располагающемся между элементами <sgmltag>dsContext</sgmltag> и <sgmltag>layout</sgmltag>. </para>
      <para>Для описания таймера используется элемент <sgmltag>timer</sgmltag>.</para>
      <itemizedlist>
        <listitem>
          <para id="gui_attr_timer_delay">Атрибут <sgmltag>delay</sgmltag> является обязательным атрибутом, в нем задается интервал срабатывания таймера в миллисекундах.</para>
        </listitem>
        <listitem>
          <para><sgmltag>autostart</sgmltag> - необязательный атрибут, при установке которого в <code>true</code> таймер стартует сразу после открытия экрана. По умолчанию <code>false</code>, что означает что для старта таймера необходимо вызвать его метод <code>start()</code>.</para>
        </listitem>
        <listitem>
          <para id="gui_attr_timer_repeating"><sgmltag>repeating</sgmltag> − необязательный атрибут, включает многократное срабатывание таймера. Если значение атрибута равно <literal>true</literal>, то таймер выполняется циклически, через равные промежутки времени, заданные в атрибуте <sgmltag>delay</sgmltag>. В противном случае таймер выполняется один раз через <sgmltag>delay</sgmltag> миллисекунд после старта таймера.</para>
        </listitem>
        <listitem>
          <para id="gui_attr_timer_onTimer"><sgmltag>onTimer</sgmltag> − необязательный атрибут, содержащий имя метода, вызываемого при срабатывании таймера. Метод-обработчик должен быть определен в контроллере экрана с модификатором <code>public</code> и иметь один параметр типа  <code>com.haulmont.cuba.gui.components.Timer</code>. </para>
        </listitem>
      </itemizedlist>
      <para>Пример использования таймера для периодического обновления содержимого таблицы:</para>
      <programlisting language="xml">&lt;window ...
&lt;dsContext&gt;
    &lt;collectionDatasource id=&quot;bookInstanceDs&quot; ...
&lt;/dsContext&gt;
&lt;timers&gt;
    &lt;timer delay=&quot;3000&quot; autostart=&quot;true&quot; repeating=&quot;true&quot; onTimer=&quot;refreshData&quot;/&gt;
&lt;/timers&gt;
&lt;layout ...</programlisting>
      <programlisting language="java">@Inject
private CollectionDatasource bookInstanceDs;

public void refreshData(Timer timer) {
bookInstanceDs.refresh();
}</programlisting>
      <para>Таймер можно инжектировать в поле контроллера, либо получить методом <code>Window.getTimer()</code>. Управлять активностью таймера можно с помощью его методов <code>start()</code> и <code>stop()</code>. Для уже активного таймера вызов <code>start()</code> игнорируется. После остановки таймера методом <code>stop()</code> его можно снова запустить методом <code>start()</code>.</para>
      <para>Задать обработчик событий от таймера можно с помощью реализации интерфейса <code>Timer.TimerListener</code>:</para>
      <programlisting language="xml">&lt;timers&gt;
&lt;timer id=&quot;helloTimer&quot; delay=&quot;5000&quot;/&gt;
&lt;/timers&gt;</programlisting>
      <programlisting language="java">@Inject
private Timer helloTimer;

@Override
public void init(Map&lt;String, Object&gt; params) {
helloTimer.addTimerListener(new Timer.TimerListener() {
    @Override
    public void onTimer(Timer timer) {
        showNotification(&quot;Hello&quot;, NotificationType.HUMANIZED);
    }

    @Override
    public void onStopTimer(Timer timer) {
        showNotification(&quot;Timer is stopped&quot;, NotificationType.HUMANIZED);
    }
});
helloTimer.start();
}</programlisting>
      <para>Таймер можно также создавать в коде контроллера приложения следующим образом:</para>
      <programlisting language="java">@Inject
private ComponentsFactory componentsFactory;

@Override
public void init(Map&lt;String, Object&gt; params) {
Timer helloTimer = componentsFactory.createTimer();
helloTimer.setDelay(5000);
helloTimer.setRepeating(true);
helloTimer.addTimerListener(new Timer.TimerListener() {
    @Override
    public void onTimer(Timer timer) {
        showNotification(&quot;Hello&quot;, NotificationType.HUMANIZED);
    }

    @Override
    public void onStopTimer(Timer timer) {
        showNotification(&quot;Timer is stopped&quot;, NotificationType.HUMANIZED);
    }
});
helloTimer.start();

addTimer(helloTimer);
}</programlisting>
    </section>
    <section id="gui_validator">
      <title>Validator</title>
      <para>Валидатор предназначен для проверки значения, введенного в визуальном компоненте.</para>
      <warning>
        <para>Следует отличать валидацию от проверки типа данных. Если для некоторого компонента, например <link linkend="gui_TextField">TextField</link>, задан тип, отличный от строкового (это происходит при связывании с атрибутом сущности или назначении <code>datatype</code>), то компонент не позволяет ввести значение, не удовлетворяющее этому типу - при потере фокуса или нажатии <keycap>Enter</keycap> компонент отобразит предыдущее значение.</para>
        <para>Валидация же срабатывает не сразу при вводе или потере компонентом фокуса, а только при вызове у компонента метода <code>validate()</code>. Это означает, что компонент (и связанный с ним атрибут сущности) может некоторое время содержать значение, не удовлетворяющее условиям валидации. Это не является проблемой, так как обычно компоненты ввода с валидацией располагаются в <link linkend="screen_edit">экране редактирования</link>, а он автоматически вызывает валидацию всех своих компонентов перед коммитом. Если же компонент находится не в экране редактирования, то необходимо вызывать его метод <code>validate()</code> в контроллере явно.</para>
      </warning>
      <para>В XML-дескрипторе экрана валидатор для компонента может быть задан во вложенном  элементе <sgmltag>validator</sgmltag>. Атрибуты элемента <sgmltag>validator</sgmltag>:</para>
      <itemizedlist>
        <listitem>
          <para><sgmltag>script</sgmltag> − путь к скрипту Groovy, осуществляющему валидацию.</para>
        </listitem>
        <listitem>
          <para><sgmltag>class</sgmltag> − имя класса Java, реализующего интерфейс <code>Field.Validator</code>.</para>
        </listitem>
        <listitem>
          <para>Groovy-валидатор и стандартные классы Java-валидаторов, расположенные в пакете <code>com.haulmont.cuba.gui.components.validators</code> поддерживают атрибут <sgmltag>message</sgmltag> − сообщение, выводимое пользователю в случае ошибки валидации. Атрибут должен содержать ключ сообщения в пакете, например, <literal>message=&quot;msg://infoTextField.validationMsg&quot;</literal></para>
        </listitem>
      </itemizedlist>
      <para>Выбор механизма валидации осуществляется следующим образом:</para>
      <itemizedlist>
        <listitem>
          <para>Если не указано значение атрибута <sgmltag>script</sgmltag>, и сам элемент <sgmltag>validator</sgmltag> не содержит текста выражения Groovy, то в качестве валидатора используется класс, указанный в атрибуте <sgmltag>class</sgmltag>.</para>
        </listitem>
        <listitem>
          <para>Если элемент <sgmltag>validator</sgmltag> содержит текст, то он будет использован как выражение Groovy и выполнен с помощью <link linkend="scripting">Scripting</link>.</para>
        </listitem>
        <listitem>
          <para>В противном случае с помощью <link linkend="scripting">Scripting</link> будет выполнен скрипт Groovy, указанный в атрибуте <sgmltag>script</sgmltag>.</para>
        </listitem>
      </itemizedlist>
      <para>В выражение или скрипт Groovy будет передана одна переменная <code>value</code>, содержащая значение, введенное в визуальном компоненте. Выражение или скрипт должны вернуть <literal>boolean</literal> значение: <literal>true</literal> − valid, <literal>false</literal> − not valid.</para>
      <para>Если в качестве валидатора используется класс Java, то он должен иметь либо дефолтный конструктор без параметров, либо конструктор со следующим набором параметров:<itemizedlist>
          <listitem>
            <para><code>org.dom4j.Element</code>, <code>String</code> - в этот конструктор будут переданы XML-элемент валидатора и имя пакета сообщений экрана.</para>
          </listitem>
          <listitem>
            <para><code>org.dom4j.Element</code> - в этот конструктор будет передан XML-элемент валидатора.</para>
          </listitem>
        </itemizedlist></para>
      <tip>
        <para>Если валидатор реализован внутренним классом, то он должен быть объявлен с модификатором <code>static</code>, а его имя для загрузки отделяется символом &quot;$&quot;, например:</para>
        <para><code>&lt;validator class=&quot;com.sample.sales.gui.AddressEdit$ZipValidator&quot;/&gt;</code></para>
      </tip>
      <para>Платформа уже содержит несколько реализаций наиболее часто используемых валидаторов (см. пакет <code>com.haulmont.cuba.gui.components.validators</code>), которые можно применять в  проектах:</para>
      <itemizedlist>
        <listitem>
          <para><code>DateValidator</code></para>
        </listitem>
        <listitem>
          <para><code>DoubleValidator</code></para>
        </listitem>
        <listitem>
          <para><code>EmailValidator</code></para>
        </listitem>
        <listitem>
          <para><code>IntegerValidator</code></para>
        </listitem>
        <listitem>
          <para><code>LongValidator</code></para>
        </listitem>
        <listitem>
          <para><code>PatternValidator</code></para>
        </listitem>
        <listitem>
          <para><code>ScriptValidator</code></para>
        </listitem>
      </itemizedlist>
      <para>Валидатор-класс можно назначить компоненту не только в XML-дескрипторе экрана, но и программно, передавая экземпляр валидатора в метод <code>addValidator()</code> компонента.</para>
      <para>Пример создания класса валидатора почтового индекса:<programlisting language="java">public class ZipValidator implements Field.Validator {
@Override
public void validate(Object value) throws ValidationException {
    if (value != null &amp;&amp; ((String) value).length() != 6)
        throw new ValidationException(&quot;Zip must be of 6 characters length&quot;);
}
}</programlisting></para>
      <para>Использование валидатора почтового индекса и стандартного валидатора по шаблону в полях компонента <link linkend="gui_FieldGroup">FieldGroup</link>:<programlisting language="xml">&lt;fieldGroup ...&gt;
&lt;field id=&quot;zip&quot; required=&quot;true&quot;&gt;
     &lt;validator class=&quot;com.sample.sales.gui.ZipValidator&quot;/&gt;
&lt;/field&gt;
&lt;field id=&quot;imei&quot;&gt;
    &lt;validator class=&quot;com.haulmont.cuba.gui.components.validators.PatternValidator&quot;
           pattern=&quot;\d{15}&quot;
           message=&quot;msg://general.imeiValidationFailed&quot;/&gt;
&lt;/field&gt;
&lt;/fieldGroup&gt;</programlisting></para>
      <para>Пример программного задания валидатора:<programlisting language="java">if (Boolean.TRUE.equals(parameter.getRequired())) {
tokenList.addValidator(new Field.Validator() {
    @Override
    public void validate(Object value) throws ValidationException {
        if (value instanceof Collection &amp;&amp; CollectionUtils.isEmpty((Collection) value)) {
            throw new ValidationException(getMessage(&quot;error.paramIsRequiredButEmpty&quot;));
        }
    }
});
}</programlisting></para>
    </section>
  </section>
  <section id="gui_attributes">
    <title>XML-атрибуты компонентов</title>
    <variablelist>
      <varlistentry id="gui_attr_basic_align">
        <term>align</term>
        <listitem>
          <para>Атрибут, задающий расположение компонента относительно вышестоящего контейнера.</para>
          <para>Возможные значения:</para>
          <itemizedlist>
            <listitem>
              <para><literal>TOP_RIGHT</literal></para>
            </listitem>
            <listitem>
              <para><literal>TOP_LEFT</literal></para>
            </listitem>
            <listitem>
              <para><literal>TOP_CENTER</literal></para>
            </listitem>
            <listitem>
              <para><literal>MIDDLE_RIGHT</literal></para>
            </listitem>
            <listitem>
              <para><literal>MIDDLE_LEFT</literal></para>
            </listitem>
            <listitem>
              <para><literal>MIDDLE_CENTER</literal></para>
            </listitem>
            <listitem>
              <para><literal>BOTTOM_RIGHT</literal></para>
            </listitem>
            <listitem>
              <para><literal>BOTTOM_LEFT</literal></para>
            </listitem>
            <listitem>
              <para><literal>BOTTOM_CENTER</literal></para>
            </listitem>
          </itemizedlist>
        </listitem>
      </varlistentry>
      <varlistentry id="gui_attr_basic_caption">
        <term>caption</term>
        <listitem>
          <para>Атрибут, устанавливающий заголовок для визуального компонента.</para>
          <para>Значением атрибута должна быть либо  строка сообщения, либо ключ в <link linkend="message_packs">пакете сообщений</link>. В случае ключа значение должно начинаться с префикса <literal>msg://</literal></para>
          <para>Способы задания ключа:</para>
          <itemizedlist>
            <listitem>
              <para>Короткий ключ − при этом сообщение ищется в пакете, заданном для данного экрана:</para>
              <programlisting>caption=&quot;msg://infoFieldCaption&quot;</programlisting>
            </listitem>
            <listitem>
              <para>Полный ключ, с заданием пакета:</para>
              <programlisting>caption=&quot;msg://com.haulmont.refapp.gui.app/infoFieldCaption&quot;</programlisting>
            </listitem>
          </itemizedlist>
        </listitem>
      </varlistentry>
      <varlistentry id="gui_attr_basic_captionProperty">
        <term>captionProperty</term>
        <listitem>
          <para>Задает имя атрибута сущности, отображаемого компонентом. Используется только для сущностей, находящихся в источнике данных (например заданном для <link linkend="gui_LookupField">LookupField</link> свойством <link linkend="gui_attr_basic_optionsDatasource">optionsDatasource</link>).</para>
          <para>Если <code>captionProperty</code> не задан, будет отображаться <link linkend="namePattern">имя экземпляров</link>, содержащихся в источнике данных.</para>
        </listitem>
      </varlistentry>
      <varlistentry id="gui_attr_basic_clickAction">
        <term>clickAction</term>
        <listitem>
          <para>Атрибут содержит описание действия, которое будет выполнено при клике в ячейке или в поле (для компонента <link linkend="gui_FieldGroup">FieldGroup</link>). Возможны два типа действий:</para>
          <itemizedlist>
            <listitem>
              <para><code>open</code> − открывает для сущности, отображаемой в ячейке, экран редактирования с указанным именем, например: <code>clickAction=&quot;open:sec$User.edit&quot;</code>. Имя сущности отображается в виде ссылки:</para>
              <mediaobject>
                <imageobject>
                  <imagedata align="center" fileref="img/gui_clickAction_open.png"/>
                </imageobject>
              </mediaobject>
            </listitem>
            <listitem>
              <para><code>invoke</code> − вызывает метод контроллера экрана с указанным именем, например: <code>clickAction=&quot;invoke:onClick&quot;</code>. Метод должен иметь единственный параметр типа <code>Object</code>, в который будет передан экземпляр сущности, отображаемой в ячейке.</para>
            </listitem>
          </itemizedlist>
        </listitem>
      </varlistentry>
      <varlistentry id="gui_attr_basic_colspan">
        <term>colspan</term>
        <listitem>
          <para>Указывает, сколько <link linkend="gui_GridLayout_span">колонок сетки</link> должен занять компонент (по умолчанию 1).</para>
          <para>Данный атрибут может быть назначен любому компоненту, находящемуся непосредственно внутри контейнера <link linkend="gui_GridLayout">GridLayout</link>.</para>
        </listitem>
      </varlistentry>
      <varlistentry id="gui_attr_basic_datasource">
        <term>datasource</term>
        <listitem>
          <para>Предназначен для задания <link linkend="datasources">источника данных</link>, описанного в секции <sgmltag>dsContext</sgmltag> XML-дескриптора экрана.</para>
          <para>При указании атрибута <code>datasource</code> для компонента, реализующего интерфейс <code>DatasourceComponent</code>, необходимо также задать атрибут <link linkend="gui_attr_basic_property">property</link>. </para>
        </listitem>
      </varlistentry>
      <varlistentry id="gui_attr_basic_description">
        <term>description</term>
        <listitem>
          <para>Атрибут, задающий текст подсказки для компонента.</para>
        </listitem>
      </varlistentry>
      <varlistentry id="gui_attr_basic_editable">
        <term>editable</term>
        <listitem>
          <para>Атрибут, указывающий на возможность редактирования содержимого компонента (не путать с <link linkend="gui_attr_basic_enable">enable</link>).</para>
          <para>Возможные значения − <literal>true</literal>, <literal>false</literal>. По умолчанию <literal>true</literal>.</para>
          <para>На возможность редактирования содержимого для компонента, связанного с данными (наследника <code>DatasourceComponent</code> или <code>ListComponent</code>), влияет также подсистема безопасности. Если по данным подсистемы безопасности данный компонент должен быть недоступен для редактирования, значение атрибута <sgmltag>editable</sgmltag> не принимается во внимание.</para>
        </listitem>
      </varlistentry>
      <varlistentry id="gui_attr_basic_enable">
        <term>enable</term>
        <listitem>
          <para>Атрибут компонента, устанавливающий его состояние: доступен, недоступен.</para>
          <para>Если компонент недоступен, то он не принимает фокус ввода. Недоступность контейнера приводит к тому, что все его компоненты также становятся недоступными.

Возможные значения − <literal>true</literal>, <literal>false</literal>.

По умолчанию  все компоненты доступны.</para>
        </listitem>
      </varlistentry>
      <varlistentry id="gui_attr_basic_expand">
        <term>expand</term>
        <listitem>
          <para>Атрибут контейнера для управления его внутренней компоновкой.</para>
          <para>Задает компонент внутри контейнера, который необходимо расширить на все доступное пространство в направлении размещения компонентов. Для контейнера с вертикальным размещением устанавливает компоненту 100% высоту, для контейнера с горизонтальным размещением - 100% ширину. Кроме того, при изменении размера контейнера изменять размер будет именно этот компонент.</para>
        </listitem>
      </varlistentry>
      <varlistentry id="gui_attr_basic_height">
        <term>height</term>
        <listitem>
          <para>Атрибут, устанавливающий высоту компонента.</para>
          <para>Может быть задана в пикселях либо в процентах от высоты вышестоящего контейнера. Например: <literal>100px</literal>, <literal>100%</literal>, <literal>50</literal>. Если единица измерения не указана, подразумевается высота в пикселях.</para>
          <para>Установка значения в <literal>%</literal> означает, что компонент по высоте займет соответствующую часть пространства, предоставляемого контейнером более высокого уровня.</para>
          <para>При выборе значения <code>AUTO</code> или <code>-1px</code> для компонента устанавливается высота по умолчанию, для контейнера  высота определяется по содержимому, то есть суммарной высотой вложенных компонентов.</para>
        </listitem>
      </varlistentry>
      <varlistentry id="gui_attr_basic_icon">
        <term>icon</term>
        <listitem>
          <para>Атрибут, устанавливающий пиктограмму для визуального компонента.</para>
          <para>Значением атрибута должен быть путь к файлу пиктограммы относительно каталога <link linkend="gui_themes">темы</link>. Например:</para>
          <programlisting language="xml">icon=&quot;icons/create.png&quot;</programlisting>
          <para>Если пиктограмма должна быть выбрана в зависимости от языка пользователя, можно указать путь к ней в
            пакете сообщений, а в атрибуте
            <sgmltag>icon</sgmltag> − ключ сообщения, например:
            <programlisting language="xml">icon=&quot;msg://addIcon&quot;</programlisting>
          </para>
          <para>В веб клиенте с
            <link linkend="web_theme">темой</link> Halo (или производной от нее) вместо файлов можно использовать элементы шрифта Font Awesome.
            Для этого достаточно указать константу из класса
            <code>com.vaadin.server.FontAwesome</code> с префиксом
            <code>font-icon:</code> например:
            <programlisting language="xml"><![CDATA[icon="font-icon:BOOK"]]></programlisting></para>
        </listitem>
      </varlistentry>
      <varlistentry id="gui_attr_basic_id">
        <term>id</term>
        <listitem>
          <para>Идентификатор компонента.</para>
          <para>Рекомендуется формировать значение по правилам Java-идентификаторов и использовать camelСase, например, <code>userGrid</code>, <code>filterPanel</code>.

Может быть указан для любого компонента и должен быть уникальным в пределах экрана.</para>
        </listitem>
      </varlistentry>
    <varlistentry id="gui_attr_basic_inputPrompt">
        <term>inputPrompt</term>
        <listitem>
            <para>Атрибут <code>inputPrompt</code> задает строку, отображаемую в поле, если его значение равно
                <code>null</code>.</para>
            <para>Атрибут используется для компонентов <link linkend="gui_TextField">TextField</link>,
                <link linkend="gui_LookupField">LookupField</link>,
                <link linkend="gui_LookupPickerField">LookupPickerField</link>,
                <link linkend="gui_SearchPickerField">SearchPickerField</link> только в <structname>web</structname>
                клиенте.</para>
        </listitem>
    </varlistentry>
      <varlistentry id="gui_attr_basic_margin">
        <term>margin</term>
        <listitem>
          <para>Атрибут <sgmltag>margin</sgmltag> устанавливает наличие отступа между внешними границами и содержимым контейнера.</para>
          <para>Может иметь 2 вида значений:</para>
          <itemizedlist>
            <listitem>
              <para><sgmltag>margin</sgmltag>=<literal>&quot;true&quot;</literal> − установить отступ со всех сторон сразу</para>
            </listitem>
            <listitem>
              <para><sgmltag>margin</sgmltag>=<literal>"true,false,true,false"</literal> −  установить отступ только сверху и снизу (формат значения "сверху,справа,снизу,слева")</para>
            </listitem>
          </itemizedlist>
          <para>По умолчанию отступы отсутствуют.</para>
        </listitem>
      </varlistentry>
      <varlistentry id="gui_attr_nullName">
        <term>nullName</term>
        <listitem>
          <para>Идентификатор опции, выбор которой будет равносилен установке значения в <code>null</code>.</para>
          <para>Атрибут используется для компонентов <link linkend="gui_LookupField">LookupField</link>, <link linkend="gui_LookupPickerField">LookupPickerField</link>, <link linkend="gui_SearchPickerField">SearchPickerField</link>.</para>
          <para>Пример для компонента <link linkend="gui_LookupField">LookupField</link>, установка значения атрибута в <link linkend="screen_xml_glossentry">XML-дескрипторе</link>:</para>
          <programlisting language="xml">&lt;lookupField datasource=&quot;orderDs&quot;
         property=&quot;customer&quot;
         nullName=&quot;(none)&quot;
         optionsDatasource=&quot;customersDs&quot; width=&quot;200px&quot;/&gt;</programlisting>
          <para>Пример для компонента <link linkend="gui_LookupField">LookupField</link>, установка значения атрибута в <link linkend="screen_controller_glossentry">контроллере</link>: <programlisting language="xml">&lt;lookupField id=&quot;customerLookupField&quot; optionsDatasource=&quot;customersDs&quot;
         width=&quot;200px&quot; datasource=&quot;orderDs&quot; property=&quot;customer&quot;/&gt;</programlisting><programlisting language="java">customerLookupField.setNullOption(&quot;&lt;null&gt;&quot;);</programlisting></para>
        </listitem>
      </varlistentry>
      <varlistentry id="gui_attr_basic_optionsDatasource">
        <term>optionsDatasource</term>
        <listitem>
          <para>Задает имя <link linkend="datasources">источника данных</link>, используемого для формирования списка опций.</para>
          <para>Совместно с <sgmltag>optionsDatasource</sgmltag> может использоваться атрибут <link linkend="gui_attr_basic_captionProperty">captionProperty</link>.</para>
        </listitem>
      </varlistentry>
      <varlistentry id="gui_attr_basic_property">
        <term>property</term>
        <listitem>
          <para>Атрибут компонента, реализующего интерфейс <code>DatasourceComponent</code>.</para>
          <para>Предназначен для задания имени атрибута сущности, значение которого будет отображаться или редактироваться данным визуальным компонентом.</para>
          <para>Используется всегда совместно с атрибутом <link linkend="gui_attr_basic_datasource">datasource</link>.</para>
        </listitem>
      </varlistentry>
      <varlistentry id="gui_attr_basic_required">
        <term>required</term>
        <listitem>
          <para>Атрибут визуального компонента, реализующего интерфейс <code>Field</code>. Указывает, что в данное поле обязательно должно быть введено значение.</para>
          <para>Возможные значения атрибута − <literal>true</literal>, <literal>false</literal>. По умолчанию <literal>false</literal>.</para>
          <para>Совместно с <sgmltag>required</sgmltag> может использоваться атрибут <sgmltag>requiredMessage</sgmltag>.</para>
        </listitem>
      </varlistentry>
      <varlistentry id="gui_attr_basic_requiredMessage">
        <term>requiredMessage</term>
        <listitem>
          <para>XML-атрибут, используемый совместно с атрибутом <link linkend="gui_attr_basic_required">required</link>. Позволяет установить сообщение, выводимое пользователю в случае нарушения требования <link linkend="gui_attr_basic_required">required</link>.</para>
          <para>Атрибут должен содержать ключ сообщения в пакете, например: <sgmltag>requiredMessage</sgmltag>=&quot;<literal>msg://infoTextField.requiredMessage</literal>&quot;</para>
        </listitem>
      </varlistentry>
      <varlistentry id="gui_attr_basic_rowspan">
        <term>rowspan</term>
        <listitem>
          <para>Указывает, сколько <link linkend="gui_GridLayout_span">строк сетки</link> должен занять компонент (по умолчанию 1).</para>
          <para>Данный атрибут может быть назначен любому компоненту, находящемуся непосредственно внутри контейнера <link linkend="gui_GridLayout">GridLayout</link>.</para>
        </listitem>
      </varlistentry>
      <varlistentry id="gui_attr_basic_spacing">
        <term>spacing</term>
        <listitem>
          <para>Атрибут <sgmltag>spacing</sgmltag> устанавливает наличие отступов между компонентами внутри контейнера.</para>
          <para>Возможные значения − <literal>true</literal>, <literal>false</literal>.</para>
          <para>По умолчанию отступы отсутствуют.</para>
        </listitem>
      </varlistentry>
      <varlistentry id="gui_attr_basic_stylename">
        <term>stylename</term>
        <listitem>
          <para>Атрибут, задающий имя стиля компонента.</para>
        </listitem>
      </varlistentry>
      <varlistentry id="gui_attr_basic_visible">
        <term>visible</term>
        <listitem>
          <para>Атрибут, устанавливающий видимость компонента. Возможные значения − <literal>true</literal>, <literal>false</literal>. </para>
          <para>Если контейнер невидим, не видны и все его компоненты. По умолчанию все компоненты видимы.</para>
        </listitem>
      </varlistentry>
      <varlistentry id="gui_attr_basic_width">
        <term>width</term>
        <listitem>
          <para>Атрибут, устанавливающий ширину компонента.</para>
          <para>Значение может быть задано в пикселях или в процентах от ширины вышестоящего контейнера. Например: <literal>100px</literal>, <literal>100%</literal>, <literal>50</literal>. Если единица измерения не указана, подразумевается ширина в пикселях. Простановка значения в <literal>%</literal> означает, что компонент по ширине займет соответствующую часть пространства, предоставляемого контейнером более высокого уровня.</para>
          <para>При выборе значения <code>AUTO</code> или <code>-1px</code> для компонента устанавливается ширина по умолчанию, для контейнера ширина определяется по содержимому, то есть суммарной шириной вложенных компонентов.</para>
        </listitem>
      </varlistentry>
    </variablelist>
  </section>
</section>
