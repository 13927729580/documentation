repositories {
    mavenLocal()
    maven {
        credentials {
            username System.getenv('HAULMONT_REPOSITORY_USER')
            password System.getenv('HAULMONT_REPOSITORY_PASSWORD')
        }
        url "http://repository.haulmont.com:8587/nexus/content/groups/work"
    }
}

apply(plugin: 'idea')

task clean(type: Delete) {
    delete 'build', 'buildSrc/build'
}

task buildCubaTheme(type: BuildAsciidoctorTheme) {
    themeName = 'cuba'
}

/* ============= Manual =================*/

task generateManualHtmlEn(type: Asciidoc2Html) {
    docName = 'manual'
    docLang = 'en'
}

task generateManualHtmlRu(type: Asciidoc2Html) {
    docName = 'manual'
    docLang = 'ru'
}

task postProcessManualEn(type: PostProcessDocHtml) {
    docName = 'manual'
    docLang = 'en'
}

task postProcessManualRu(type: PostProcessDocHtml) {
    docName = 'manual'
    docLang = 'ru'
}

task buildManualEn(dependsOn: [generateManualHtmlEn, postProcessManualEn])

task buildManualRu(dependsOn: [generateManualHtmlRu, postProcessManualRu])


/* ============= Reporting =================*/

task generateReportingHtmlEn(type: Asciidoc2Html) {
    docName = 'reporting'
    docLang = 'en'
}

task generateReportingHtmlRu(type: Asciidoc2Html) {
    docName = 'reporting'
    docLang = 'ru'
}

task postProcessReportingEn(type: PostProcessDocHtml) {
    docName = 'reporting'
    docLang = 'en'
}

task postProcessReportingRu(type: PostProcessDocHtml) {
    docName = 'reporting'
    docLang = 'ru'
}

task buildReportingEn(dependsOn: [generateReportingHtmlEn, postProcessReportingEn])

task buildReportingRu(dependsOn: [generateReportingHtmlRu, postProcessReportingRu])

/* ============= Workflow =================*/

task generateWorkflowHtmlEn(type: Asciidoc2Html) {
    docName = 'workflow'
    docLang = 'en'
    doLast {
        postProcessWorkflowEn();
    }
}

task generateWorkflowHtmlRu(type: Asciidoc2Html) {
    docName = 'workflow'
    docLang = 'ru'
}

task postProcessWorkflowEn(type: PostProcessDocHtml) {
    docName = 'workflow'
    docLang = 'en'
}

task postProcessWorkflowRu(type: PostProcessDocHtml) {
    docName = 'workflow'
    docLang = 'ru'
}

task buildWorkflowEn(dependsOn: [generateWorkflowHtmlEn, postProcessWorkflowEn])

task buildWorkflowRu(dependsOn: [generateWorkflowHtmlRu, postProcessWorkflowRu])

/* ============= Charts =================*/

task generateChartsHtmlEn(type: Asciidoc2Html) {
    docName = 'charts'
    docLang = 'en'
}

task generateChartsHtmlRu(type: Asciidoc2Html) {
    docName = 'charts'
    docLang = 'ru'
}

task postProcessChartsEn(type: PostProcessDocHtml) {
    docName = 'charts'
    docLang = 'en'
}

task postProcessChartsRu(type: PostProcessDocHtml) {
    docName = 'charts'
    docLang = 'ru'
}

task buildChartsEn(dependsOn: [generateChartsHtmlEn, postProcessChartsEn])

task buildChartsRu(dependsOn: [generateChartsHtmlRu, postProcessChartsRu])

/* ============= FTS =================*/
task generateFtsHtmlEn(type: Asciidoc2Html) {
    docName = 'fts'
    docLang = 'en'
}

task generateFtsHtmlRu(type: Asciidoc2Html) {
    docName = 'fts'
    docLang = 'ru'
}

task postProcessFtsEn(type: PostProcessDocHtml) {
    docName = 'fts'
    docLang = 'en'
}

task postProcessFtsRu(type: PostProcessDocHtml) {
    docName = 'fts'
    docLang = 'ru'
}

task buildFtsEn(dependsOn: [generateFtsHtmlEn, postProcessFtsEn])

task buildFtsRu(dependsOn: [generateFtsHtmlRu, postProcessFtsRu])


/* ============= BPM =================*/

task generateBpmHtmlEn(type: Asciidoc2Html) {
    docName = 'bpm'
    docLang = 'en'
}

task generateBpmHtmlRu(type: Asciidoc2Html) {
    docName = 'bpm'
    docLang = 'ru'
}

task postProcessBpmEn(type: PostProcessDocHtml) {
    docName = 'bpm'
    docLang = 'en'
}

task postProcessBpmRu(type: PostProcessDocHtml) {
    docName = 'bpm'
    docLang = 'ru'
}

task buildBpmEn(dependsOn: [generateBpmHtmlEn, postProcessBpmEn])

task buildBpmRu(dependsOn: [generateBpmHtmlRu, postProcessBpmRu])

/* ============= Build all =================*/

task buildManualAll(dependsOn: [buildManualEn, buildManualRu])

task buildReportingAll(dependsOn: [buildReportingEn, buildReportingRu])

task buildWorkflowAll(dependsOn: [buildWorkflowEn, buildWorkflowRu])

task buildChartsAll(dependsOn: [buildChartsEn, buildChartsRu])

task buildFtsAll(dependsOn: [buildFtsEn, buildFtsRu])

task buildBpmAll(dependsOn: [buildBpmEn, buildBpmRu])